android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    void <init>() -> <init>
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
    void <clinit>() -> <clinit>
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    void <init>() -> <init>
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    void <init>() -> <init>
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    void <init>() -> <init>
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    void <init>() -> <init>
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    void <init>() -> <init>
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.animation.AnimatorCompatHelper -> android.support.v4.animation.AnimatorCompatHelper:
    android.support.v4.animation.AnimatorProvider IMPL -> IMPL
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.animation.AnimatorListenerCompat -> android.support.v4.animation.AnimatorListenerCompat:
    void onAnimationStart(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationStart
    void onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationEnd
    void onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationCancel
    void onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationRepeat
android.support.v4.animation.AnimatorProvider -> android.support.v4.animation.AnimatorProvider:
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
android.support.v4.animation.AnimatorUpdateListenerCompat -> android.support.v4.animation.AnimatorUpdateListenerCompat:
    void onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationUpdate
android.support.v4.animation.DonutAnimatorCompatProvider -> android.support.v4.animation.DonutAnimatorCompatProvider:
    void <init>() -> <init>
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator -> android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator:
    java.util.List mListeners -> mListeners
    java.util.List mUpdateListeners -> mUpdateListeners
    android.view.View mTarget -> mTarget
    long mStartTime -> mStartTime
    long mDuration -> mDuration
    float mFraction -> mFraction
    boolean mStarted -> mStarted
    boolean mEnded -> mEnded
    java.lang.Runnable mLoopRunnable -> mLoopRunnable
    void <init>() -> <init>
    void notifyUpdateListeners() -> notifyUpdateListeners
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    long getTime() -> getTime
    void dispatchStart() -> dispatchStart
    void dispatchEnd() -> dispatchEnd
    void dispatchCancel() -> dispatchCancel
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
    long access$000(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$000
    long access$100(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$100
    long access$200(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$200
    float access$302(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator,float) -> access$302
    void access$400(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$400
    float access$300(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$300
    void access$500(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$500
    java.lang.Runnable access$600(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$600
android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1 -> android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1:
    android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator this$0 -> this$0
    void <init>(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> <init>
    void run() -> run
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider:
    void <init>() -> <init>
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper:
    android.support.v4.animation.AnimatorListenerCompat mWrapped -> mWrapped
    android.support.v4.animation.ValueAnimatorCompat mValueAnimatorCompat -> mValueAnimatorCompat
    void <init>(android.support.v4.animation.AnimatorListenerCompat,android.support.v4.animation.ValueAnimatorCompat) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat:
    android.animation.Animator mWrapped -> mWrapped
    void <init>(android.animation.Animator) -> <init>
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1 -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1:
    android.support.v4.animation.AnimatorUpdateListenerCompat val$animatorUpdateListener -> val$animatorUpdateListener
    android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat this$0 -> this$0
    void <init>(android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat,android.support.v4.animation.AnimatorUpdateListenerCompat) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.animation.ValueAnimatorCompat -> android.support.v4.animation.ValueAnimatorCompat:
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,int,int,int) -> <init>
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,boolean,int,int,int) -> <init>
    void syncState() -> syncState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
    void <clinit>() -> <clinit>
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    void <init>(android.support.v4.app.ActionBarDrawerToggle$1) -> <init>
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    void <init>(android.support.v4.app.ActionBarDrawerToggle$1) -> <init>
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    void <init>(android.support.v4.app.ActionBarDrawerToggle$1) -> <init>
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void <init>(android.support.v4.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable) -> <init>
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
    void <init>(android.support.v4.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable,android.support.v4.app.ActionBarDrawerToggle$1) -> <init>
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    void <init>() -> <init>
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    void <clinit>() -> <clinit>
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
    void <init>(android.app.Activity) -> <init>
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    void <init>() -> <init>
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    void <clinit>() -> <clinit>
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    void <init>() -> <init>
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> createCallback
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void <init>(android.support.v4.app.SharedElementCallback) -> <init>
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.ActivityCompat21:
    void <init>() -> <init>
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> createCallback
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.ActivityCompat21$SharedElementCallback21:
    void <init>() -> <init>
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> mCallback
    void <init>(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> <init>
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void <init>() -> <init>
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void <init>() -> <init>
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    void <init>() -> <init>
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityManagerCompatKitKat -> android.support.v4.app.ActivityManagerCompatKitKat:
    void <init>() -> <init>
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    void <init>() -> <init>
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> mImpl
    void <init>(android.support.v4.app.ActivityOptionsCompat21) -> <init>
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    void <init>(android.support.v4.app.ActivityOptionsCompatJB) -> <init>
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.app.ActivityOptionsCompat21:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[]) -> makeSceneTransitionAnimation
    void <init>(android.app.ActivityOptions) -> <init>
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat21) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    void <init>(android.app.ActivityOptions) -> <init>
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    boolean SUPPORTS_TRANSITIONS -> SUPPORTS_TRANSITIONS
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> setFirstOut
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> setLastIn
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> calculateFragments
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> calculateBackFragments
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> beginTransition
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> captureExitingViews
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> remapSharedElements
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> configureTransitions
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> prepareSharedElementTransition
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> callSharedElementEnd
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> setEpicenterIn
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> mapSharedElementsIn
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> remapNames
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> mapEnteringSharedElements
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragmentsAfterEnter
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragments
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> setNameOverride
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> setNameOverrides
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setBackNameOverrides
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setNameOverrides
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> access$000
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> access$100
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> access$200
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> access$300
    void <clinit>() -> <clinit>
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.BackStackRecord$1:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    void <init>(android.support.v4.app.BackStackRecord,android.support.v4.app.Fragment) -> <init>
    android.view.View getView() -> getView
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.BackStackRecord$2:
    android.view.View val$sceneRoot -> val$sceneRoot
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    boolean val$isBack -> val$isBack
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    void <init>(android.support.v4.app.BackStackRecord,android.view.View,java.lang.Object,java.util.ArrayList,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.BackStackRecord$3:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    int val$containerId -> val$containerId
    java.lang.Object val$transition -> val$transition
    android.support.v4.app.BackStackRecord this$0 -> this$0
    void <init>(android.support.v4.app.BackStackRecord,android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
    void <init>() -> <init>
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.BackStackRecord$TransitionState:
    android.support.v4.util.ArrayMap nameOverrides -> nameOverrides
    java.util.ArrayList hiddenFragmentViews -> hiddenFragmentViews
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> enteringEpicenterView
    android.view.View nonExistentView -> nonExistentView
    android.support.v4.app.BackStackRecord this$0 -> this$0
    void <init>(android.support.v4.app.BackStackRecord) -> <init>
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    void <init>() -> <init>
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    void <init>() -> <init>
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void <init>() -> <init>
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    void <init>() -> <init>
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
    void <clinit>() -> <clinit>
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    void <init>(android.support.v4.app.Fragment) -> <init>
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Bundle) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    void <init>() -> <init>
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void <init>() -> <init>
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
    void <init>() -> <init>
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void <init>() -> <init>
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> getLayoutInflaterFactory
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl,java.lang.String,int) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl,int,int) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    void <init>(android.support.v4.app.FragmentManager) -> <init>
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v4.app.Fragment) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    void <init>(android.support.v4.app.FragmentManager) -> <init>
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    void <init>(android.content.Context) -> <init>
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <init>(android.os.Parcel,android.support.v4.app.FragmentTabHost$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    void <init>() -> <init>
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> captureExitingViews
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> excludeTarget
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> addTransitionTargets
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> mergeTransitions
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> setSharedElementEpicenter
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> getBoundsOnScreen
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> cleanupTransitions
    void removeTargets(java.lang.Object,java.util.ArrayList) -> removeTargets
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    void access$000(java.util.ArrayList,android.view.View) -> access$000
    android.graphics.Rect access$100(android.view.View) -> access$100
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    void <init>(android.graphics.Rect) -> <init>
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$container -> val$container
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> val$inFragment
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.Map val$renamedViews -> val$renamedViews
    android.transition.Transition val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.view.View val$nonExistentView -> val$nonExistentView
    void <init>(android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,java.util.Map,java.util.Map,android.transition.Transition,java.util.ArrayList,android.view.View) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    android.graphics.Rect mEpicenter -> mEpicenter
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> val$epicenterView
    void <init>(android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> <init>
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.transition.Transition val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.transition.Transition val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.transition.Transition val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$hiddenViews -> val$hiddenViews
    android.transition.Transition val$overallTransition -> val$overallTransition
    void <init>(android.view.View,android.transition.Transition,android.view.View,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.Map,java.util.ArrayList,android.transition.Transition) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.FragmentTransitionCompat21$EpicenterView:
    android.view.View epicenter -> epicenter
    void <init>() -> <init>
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.FragmentTransitionCompat21$ViewRetriever:
    android.view.View getView() -> getView
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    void <init>() -> <init>
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void <init>(android.support.v4.app.ListFragment) -> <init>
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void <init>(android.support.v4.app.ListFragment) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    void <init>() -> <init>
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void <init>(java.lang.String,android.support.v4.app.FragmentActivity,boolean) -> <init>
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
    void <clinit>() -> <clinit>
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> <init>
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void <init>(android.content.Context) -> <init>
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[]) -> <init>
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[],android.support.v4.app.NotificationCompat$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    void <init>() -> <init>
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Action) -> <init>
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> <init>
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Action) -> <init>
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mShowWhen -> mShowWhen
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    java.lang.String mCategory -> mCategory
    android.os.Bundle mExtras -> mExtras
    int mColor -> mColor
    int mVisibility -> mVisibility
    android.app.Notification mPublicVersion -> mPublicVersion
    android.app.Notification mNotification -> mNotification
    java.util.ArrayList mPeople -> mPeople
    void <init>(android.content.Context) -> <init>
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> getExtender
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
android.support.v4.app.NotificationCompat$BuilderExtender -> android.support.v4.app.NotificationCompat$BuilderExtender:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> build
android.support.v4.app.NotificationCompat$CarExtender -> android.support.v4.app.NotificationCompat$CarExtender:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_CAR_EXTENDER -> EXTRA_CAR_EXTENDER
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_CONVERSATION -> EXTRA_CONVERSATION
    java.lang.String EXTRA_COLOR -> EXTRA_COLOR
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> mUnreadConversation
    int mColor -> mColor
    void <init>() -> <init>
    void <init>(android.app.Notification) -> <init>
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$CarExtender setColor(int) -> setColor
    int getColor() -> getColor
    android.support.v4.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation:
    java.lang.String[] mMessages -> mMessages
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    java.lang.String[] mParticipants -> mParticipants
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory FACTORY -> FACTORY
    void <init>(java.lang.String[],android.support.v4.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    long getLatestTimestamp() -> getLatestTimestamp
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1 -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1:
    void <init>() -> <init>
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    java.util.List mMessages -> mMessages
    java.lang.String mParticipant -> mParticipant
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    long mLatestTimestamp -> mLatestTimestamp
    void <init>(java.lang.String) -> <init>
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput) -> setReplyAction
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi21:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void <init>() -> <init>
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    int SCREEN_TIMEOUT_SHORT -> SCREEN_TIMEOUT_SHORT
    int SCREEN_TIMEOUT_LONG -> SCREEN_TIMEOUT_LONG
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    java.lang.String KEY_HINT_SCREEN_TIMEOUT -> KEY_HINT_SCREEN_TIMEOUT
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int FLAG_HINT_AVOID_BACKGROUND_CLIPPING -> FLAG_HINT_AVOID_BACKGROUND_CLIPPING
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    int mHintScreenTimeout -> mHintScreenTimeout
    void <init>() -> <init>
    void <init>(android.app.Notification) -> <init>
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    android.support.v4.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    android.support.v4.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    int getHintScreenTimeout() -> getHintScreenTimeout
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void <init>() -> <init>
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String KEY_AUTHOR -> KEY_AUTHOR
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_MESSAGES -> KEY_MESSAGES
    java.lang.String KEY_REMOTE_INPUT -> KEY_REMOTE_INPUT
    java.lang.String KEY_ON_REPLY -> KEY_ON_REPLY
    java.lang.String KEY_ON_READ -> KEY_ON_READ
    java.lang.String KEY_PARTICIPANTS -> KEY_PARTICIPANTS
    java.lang.String KEY_TIMESTAMP -> KEY_TIMESTAMP
    void <init>() -> <init>
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    android.app.RemoteInput fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> fromCompatRemoteInput
    android.support.v4.app.RemoteInputCompatBase$RemoteInput toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompatRemoteInput
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
    void <init>() -> <init>
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    void <init>() -> <init>
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatBase$UnreadConversation -> android.support.v4.app.NotificationCompatBase$UnreadConversation:
    void <init>() -> <init>
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    long getLatestTimestamp() -> getLatestTimestamp
android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory -> android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory:
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    void <init>() -> <init>
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    void <init>() -> <init>
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    void <init>() -> <init>
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    void <init>() -> <init>
android.support.v4.app.NotificationCompatIceCreamSandwich$Builder -> android.support.v4.app.NotificationCompatIceCreamSandwich$Builder:
    android.app.Notification$Builder b -> b
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> <init>
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void <init>() -> <init>
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence,boolean,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    void <init>() -> <init>
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void <init>(android.support.v4.app.NotificationCompatSideChannelService) -> <init>
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void <init>(android.support.v4.app.NotificationCompatSideChannelService,android.support.v4.app.NotificationCompatSideChannelService$1) -> <init>
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void <init>(android.content.Context) -> <init>
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void <init>() -> <init>
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void <init>() -> <init>
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    void <init>() -> <init>
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
    void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void <init>(android.content.Context) -> <init>
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
    void <init>(android.content.ComponentName) -> <init>
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void <init>() -> <init>
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    void <init>() -> <init>
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> <init>
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    void <clinit>() -> <clinit>
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    void <init>() -> <init>
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    void <init>(java.lang.String) -> <init>
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    void <init>() -> <init>
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    void <init>() -> <init>
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    void <init>() -> <init>
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    void <init>() -> <init>
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
    void <init>() -> <init>
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    void <init>() -> <init>
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    void <init>() -> <init>
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
    void <init>() -> <init>
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
    void <clinit>() -> <clinit>
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    void <init>(android.app.Activity) -> <init>
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    void <init>(android.app.Activity) -> <init>
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void <init>() -> <init>
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void <init>() -> <init>
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    void <init>() -> <init>
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void <init>() -> <init>
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    void <init>() -> <init>
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    int MAX_IMAGE_SIZE -> MAX_IMAGE_SIZE
    java.lang.String BUNDLE_SNAPSHOT_BITMAP -> BUNDLE_SNAPSHOT_BITMAP
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE -> BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX -> BUNDLE_SNAPSHOT_IMAGE_MATRIX
    void <init>() -> <init>
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    void <clinit>() -> <clinit>
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
    void <init>(java.lang.String) -> <init>
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    void <init>(android.content.Context) -> <init>
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
    void <clinit>() -> <clinit>
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    void <init>() -> <init>
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    void <init>() -> <init>
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    void <init>() -> <init>
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    void <init>() -> <init>
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    void <init>() -> <init>
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void <init>(android.content.Context) -> <init>
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    void <init>(android.support.v4.content.AsyncTaskLoader) -> <init>
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String TAG -> TAG
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    void <init>() -> <init>
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    java.io.File createFilesDir(java.io.File) -> createFilesDir
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.ContextCompatApi21:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    void <init>() -> <init>
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void <init>() -> <init>
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void <init>() -> <init>
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    void <init>() -> <init>
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    void <init>() -> <init>
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    void <clinit>() -> <clinit>
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void <init>(java.lang.String) -> <init>
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
    void <clinit>() -> <clinit>
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    void <init>() -> <init>
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    void <init>() -> <init>
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void <init>(android.content.Context) -> <init>
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    void <init>(android.support.v4.content.Loader) -> <init>
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void <init>(android.content.Context) -> <init>
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
    void <clinit>() -> <clinit>
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void <init>(android.support.v4.content.LocalBroadcastManager,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
    void <init>(android.content.Intent,java.util.ArrayList) -> <init>
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void <init>() -> <init>
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
    void <clinit>() -> <clinit>
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    void <init>() -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void <init>(android.support.v4.content.ModernAsyncTask) -> <init>
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
    void <clinit>() -> <clinit>
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
    void <init>(android.support.v4.content.ModernAsyncTask,java.lang.Object[]) -> <init>
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void <init>() -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(android.support.v4.content.ModernAsyncTask$1) -> <init>
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
    void <init>() -> <init>
    void <init>(android.support.v4.content.ModernAsyncTask$1) -> <init>
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    void <init>() -> <init>
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
    void <clinit>() -> <clinit>
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
    void <init>() -> <init>
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
android.support.v4.content.res.ResourcesCompatApi21 -> android.support.v4.content.res.ResourcesCompatApi21:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
android.support.v4.content.res.ResourcesCompatIcsMr1 -> android.support.v4.content.res.ResourcesCompatIcsMr1:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int) -> getDrawableForDensity
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    void <init>() -> <init>
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.BitmapCompat -> android.support.v4.graphics.BitmapCompat:
    android.support.v4.graphics.BitmapCompat$BitmapImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    void <clinit>() -> <clinit>
android.support.v4.graphics.BitmapCompat$BaseBitmapImpl -> android.support.v4.graphics.BitmapCompat$BaseBitmapImpl:
    void <init>() -> <init>
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BitmapImpl -> android.support.v4.graphics.BitmapCompat$BitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl:
    void <init>() -> <init>
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatHoneycombMr1 -> android.support.v4.graphics.BitmapCompatHoneycombMr1:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatJellybeanMR2 -> android.support.v4.graphics.BitmapCompatJellybeanMR2:
    void <init>() -> <init>
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompatKitKat -> android.support.v4.graphics.BitmapCompatKitKat:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.ColorUtils -> android.support.v4.graphics.ColorUtils:
    int MIN_ALPHA_SEARCH_MAX_ITERATIONS -> MIN_ALPHA_SEARCH_MAX_ITERATIONS
    int MIN_ALPHA_SEARCH_PRECISION -> MIN_ALPHA_SEARCH_PRECISION
    void <init>() -> <init>
    int compositeColors(int,int) -> compositeColors
    int compositeAlpha(int,int) -> compositeAlpha
    int compositeComponent(int,int,int,int,int) -> compositeComponent
    double calculateLuminance(int) -> calculateLuminance
    double calculateContrast(int,int) -> calculateContrast
    int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    void colorToHSL(int,float[]) -> colorToHSL
    int HSLToColor(float[]) -> HSLToColor
    int setAlphaComponent(int,int) -> setAlphaComponent
    float constrain(float,float,float) -> constrain
    int constrain(int,int,int) -> constrain
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void <init>() -> <init>
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl:
    void <init>() -> <init>
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl:
    void <init>() -> <init>
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompatApi22 -> android.support.v4.graphics.drawable.DrawableCompatApi22:
    void <init>() -> <init>
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatBase -> android.support.v4.graphics.drawable.DrawableCompatBase:
    void <init>() -> <init>
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void <init>() -> <init>
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatLollipop -> android.support.v4.graphics.drawable.DrawableCompatLollipop:
    void <init>() -> <init>
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.graphics.drawable.DrawableWrapper:
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v4.graphics.drawable.DrawableWrapperDonut -> android.support.v4.graphics.drawable.DrawableWrapperDonut:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> DEFAULT_MODE
    android.content.res.ColorStateList mTintList -> mTintList
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    int mCurrentColor -> mCurrentColor
    android.graphics.PorterDuff$Mode mCurrentMode -> mCurrentMode
    boolean mColorFilterSet -> mColorFilterSet
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean updateTint(int[]) -> updateTint
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableWrapperHoneycomb -> android.support.v4.graphics.drawable.DrawableWrapperHoneycomb:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void jumpToCurrentState() -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableWrapperKitKat -> android.support.v4.graphics.drawable.DrawableWrapperKitKat:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableWrapperLollipop -> android.support.v4.graphics.drawable.DrawableWrapperLollipop:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void getOutline(android.graphics.Outline) -> getOutline
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme() -> canApplyTheme
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
android.support.v4.graphics.drawable.RoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    android.graphics.Bitmap mBitmap -> mBitmap
    int mTargetDensity -> mTargetDensity
    int mGravity -> mGravity
    android.graphics.Paint mPaint -> mPaint
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    float mCornerRadius -> mCornerRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.RectF mDstRectF -> mDstRectF
    boolean mApplyGravity -> mApplyGravity
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Bitmap getBitmap() -> getBitmap
    void computeBitmapSize() -> computeBitmapSize
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void setAntiAlias(boolean) -> setAntiAlias
    boolean hasAntiAlias() -> hasAntiAlias
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    void updateDstRect() -> updateDstRect
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setCornerRadius(float) -> setCornerRadius
    float getCornerRadius() -> getCornerRadius
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    boolean isGreaterThanZero(float) -> isGreaterThanZero
android.support.v4.graphics.drawable.RoundedBitmapDrawable21 -> android.support.v4.graphics.drawable.RoundedBitmapDrawable21:
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    void getOutline(android.graphics.Outline) -> getOutline
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    void <init>() -> <init>
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
    void <clinit>() -> <clinit>
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    void <init>(android.content.Context) -> <init>
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    void <init>(android.content.Context) -> <init>
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    void <init>() -> <init>
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    java.lang.String mMediaId -> mMediaId
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mDescription -> mDescription
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mDescriptionObj -> mDescriptionObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle) -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String getMediaId() -> getMediaId
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    java.lang.CharSequence getDescription() -> getDescription
    android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    android.net.Uri getIconUri() -> getIconUri
    android.os.Bundle getExtras() -> getExtras
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.Object getMediaDescription() -> getMediaDescription
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    void <init>(android.os.Parcel,android.support.v4.media.MediaDescriptionCompat$1) -> <init>
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.support.v4.media.MediaDescriptionCompat$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    void <init>() -> <init>
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    java.lang.String mMediaId -> mMediaId
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mDescription -> mDescription
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    android.os.Bundle mExtras -> mExtras
    void <init>() -> <init>
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.MediaDescriptionCompat build() -> build
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    void <init>() -> <init>
    java.lang.String getMediaId(java.lang.Object) -> getMediaId
    java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    void <init>() -> <init>
    java.lang.Object newInstance() -> newInstance
    void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    java.lang.String TAG -> TAG
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ART_URI -> METADATA_KEY_ART_URI
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ART_URI -> METADATA_KEY_ALBUM_ART_URI
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_DISPLAY_TITLE -> METADATA_KEY_DISPLAY_TITLE
    java.lang.String METADATA_KEY_DISPLAY_SUBTITLE -> METADATA_KEY_DISPLAY_SUBTITLE
    java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION -> METADATA_KEY_DISPLAY_DESCRIPTION
    java.lang.String METADATA_KEY_DISPLAY_ICON -> METADATA_KEY_DISPLAY_ICON
    java.lang.String METADATA_KEY_DISPLAY_ICON_URI -> METADATA_KEY_DISPLAY_ICON_URI
    java.lang.String METADATA_KEY_MEDIA_ID -> METADATA_KEY_MEDIA_ID
    int METADATA_TYPE_LONG -> METADATA_TYPE_LONG
    int METADATA_TYPE_TEXT -> METADATA_TYPE_TEXT
    int METADATA_TYPE_BITMAP -> METADATA_TYPE_BITMAP
    int METADATA_TYPE_RATING -> METADATA_TYPE_RATING
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> PREFERRED_DESCRIPTION_ORDER
    java.lang.String[] PREFERRED_BITMAP_ORDER -> PREFERRED_BITMAP_ORDER
    java.lang.String[] PREFERRED_URI_ORDER -> PREFERRED_URI_ORDER
    android.os.Bundle mBundle -> mBundle
    java.lang.Object mMetadataObj -> mMetadataObj
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Bundle) -> <init>
    void <init>(android.os.Parcel) -> <init>
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.CharSequence getText(java.lang.String) -> getText
    java.lang.String getString(java.lang.String) -> getString
    long getLong(java.lang.String) -> getLong
    android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int size() -> size
    java.util.Set keySet() -> keySet
    android.os.Bundle getBundle() -> getBundle
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    java.lang.Object getMediaMetadata() -> getMediaMetadata
    void <init>(android.os.Parcel,android.support.v4.media.MediaMetadataCompat$1) -> <init>
    android.os.Bundle access$100(android.support.v4.media.MediaMetadataCompat) -> access$100
    android.support.v4.util.ArrayMap access$200() -> access$200
    void <init>(android.os.Bundle,android.support.v4.media.MediaMetadataCompat$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    void <init>() -> <init>
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> mBundle
    void <init>() -> <init>
    void <init>(android.support.v4.media.MediaMetadataCompat) -> <init>
    android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
    android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    android.support.v4.media.MediaMetadataCompat build() -> build
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    void <init>() -> <init>
    java.util.Set keySet(java.lang.Object) -> keySet
    android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String) -> getBitmap
    long getLong(java.lang.Object,java.lang.String) -> getLong
    java.lang.Object getRating(java.lang.Object,java.lang.String) -> getRating
    java.lang.CharSequence getText(java.lang.Object,java.lang.String) -> getText
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    void <init>() -> <init>
    java.lang.Object newInstance() -> newInstance
    void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    void putLong(java.lang.Object,java.lang.String,long) -> putLong
    void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
    void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    java.lang.String TAG -> TAG
    int RATING_NONE -> RATING_NONE
    int RATING_HEART -> RATING_HEART
    int RATING_THUMB_UP_DOWN -> RATING_THUMB_UP_DOWN
    int RATING_3_STARS -> RATING_3_STARS
    int RATING_4_STARS -> RATING_4_STARS
    int RATING_5_STARS -> RATING_5_STARS
    int RATING_PERCENTAGE -> RATING_PERCENTAGE
    float RATING_NOT_RATED -> RATING_NOT_RATED
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    java.lang.Object mRatingObj -> mRatingObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(int,float) -> <init>
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    boolean isRated() -> isRated
    int getRatingStyle() -> getRatingStyle
    boolean hasHeart() -> hasHeart
    boolean isThumbUp() -> isThumbUp
    float getStarRating() -> getStarRating
    float getPercentRating() -> getPercentRating
    android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    java.lang.Object getRating() -> getRating
    void <init>(int,float,android.support.v4.media.RatingCompat$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    void <init>() -> <init>
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompatApi21 -> android.support.v4.media.RatingCompatApi21:
    void <init>() -> <init>
    java.lang.Object newUnratedRating(int) -> newUnratedRating
    java.lang.Object newHeartRating(boolean) -> newHeartRating
    java.lang.Object newThumbRating(boolean) -> newThumbRating
    java.lang.Object newStarRating(int,float) -> newStarRating
    java.lang.Object newPercentageRating(float) -> newPercentageRating
    boolean isRated(java.lang.Object) -> isRated
    int getRatingStyle(java.lang.Object) -> getRatingStyle
    boolean hasHeart(java.lang.Object) -> hasHeart
    boolean isThumbUp(java.lang.Object) -> isThumbUp
    float getStarRating(java.lang.Object) -> getStarRating
    float getPercentRating(java.lang.Object) -> getPercentRating
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void <init>() -> <init>
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    void <init>(android.app.Activity,android.support.v4.media.TransportPerformer) -> <init>
    void <init>(android.view.View,android.support.v4.media.TransportPerformer) -> <init>
    void <init>(android.app.Activity,android.view.View,android.support.v4.media.TransportPerformer) -> <init>
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediator) -> <init>
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediator) -> <init>
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    void <init>(android.content.Context,android.media.AudioManager,android.view.View,android.support.v4.media.TransportMediatorCallback) -> <init>
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediatorJellybeanMR2) -> <init>
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediatorJellybeanMR2) -> <init>
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediatorJellybeanMR2) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediatorJellybeanMR2) -> <init>
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void <init>() -> <init>
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void <init>() -> <init>
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int VOLUME_CONTROL_FIXED -> VOLUME_CONTROL_FIXED
    int VOLUME_CONTROL_RELATIVE -> VOLUME_CONTROL_RELATIVE
    int VOLUME_CONTROL_ABSOLUTE -> VOLUME_CONTROL_ABSOLUTE
    int mControlType -> mControlType
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    void <init>(int,int,int) -> <init>
    int getCurrentVolume() -> getCurrentVolume
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    void setCurrentVolume(int) -> setCurrentVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
    void setCallback(android.support.v4.media.VolumeProviderCompat$Callback) -> setCallback
    java.lang.Object getVolumeProvider() -> getVolumeProvider
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void <init>(android.support.v4.media.VolumeProviderCompat) -> <init>
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void <init>() -> <init>
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    void <init>() -> <init>
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void <init>(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> <init>
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.routing.MediaRouterJellybean -> android.support.v4.media.routing.MediaRouterJellybean:
    java.lang.String TAG -> TAG
    int ROUTE_TYPE_LIVE_AUDIO -> ROUTE_TYPE_LIVE_AUDIO
    int ROUTE_TYPE_LIVE_VIDEO -> ROUTE_TYPE_LIVE_VIDEO
    int ROUTE_TYPE_USER -> ROUTE_TYPE_USER
    int ALL_ROUTE_TYPES -> ALL_ROUTE_TYPES
    void <init>() -> <init>
    java.lang.Object getMediaRouter(android.content.Context) -> getMediaRouter
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    java.util.List getCategories(java.lang.Object) -> getCategories
    java.lang.Object getSelectedRoute(java.lang.Object,int) -> getSelectedRoute
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
    void addCallback(java.lang.Object,int,java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object,java.lang.Object) -> removeCallback
    java.lang.Object createRouteCategory(java.lang.Object,java.lang.String,boolean) -> createRouteCategory
    java.lang.Object createUserRoute(java.lang.Object,java.lang.Object) -> createUserRoute
    void addUserRoute(java.lang.Object,java.lang.Object) -> addUserRoute
    void removeUserRoute(java.lang.Object,java.lang.Object) -> removeUserRoute
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> createCallback
    java.lang.Object createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> createVolumeCallback
android.support.v4.media.routing.MediaRouterJellybean$Callback -> android.support.v4.media.routing.MediaRouterJellybean$Callback:
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> <init>
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int) -> onRouteGrouped
    void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup) -> onRouteUngrouped
    void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround:
    java.lang.reflect.Method mGetSystemAudioRouteMethod -> mGetSystemAudioRouteMethod
    void <init>() -> <init>
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
android.support.v4.media.routing.MediaRouterJellybean$RouteCategory -> android.support.v4.media.routing.MediaRouterJellybean$RouteCategory:
    void <init>() -> <init>
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    boolean isGroupable(java.lang.Object) -> isGroupable
android.support.v4.media.routing.MediaRouterJellybean$RouteGroup -> android.support.v4.media.routing.MediaRouterJellybean$RouteGroup:
    void <init>() -> <init>
    java.util.List getGroupedRoutes(java.lang.Object) -> getGroupedRoutes
android.support.v4.media.routing.MediaRouterJellybean$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$RouteInfo:
    void <init>() -> <init>
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.lang.CharSequence getStatus(java.lang.Object) -> getStatus
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    java.lang.Object getCategory(java.lang.Object) -> getCategory
    android.graphics.drawable.Drawable getIconDrawable(java.lang.Object) -> getIconDrawable
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    int getPlaybackStream(java.lang.Object) -> getPlaybackStream
    int getVolume(java.lang.Object) -> getVolume
    int getVolumeMax(java.lang.Object) -> getVolumeMax
    int getVolumeHandling(java.lang.Object) -> getVolumeHandling
    java.lang.Object getTag(java.lang.Object) -> getTag
    void setTag(java.lang.Object,java.lang.Object) -> setTag
    void requestSetVolume(java.lang.Object,int) -> requestSetVolume
    void requestUpdateVolume(java.lang.Object,int) -> requestUpdateVolume
    java.lang.Object getGroup(java.lang.Object) -> getGroup
    boolean isGroup(java.lang.Object) -> isGroup
android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround:
    java.lang.reflect.Method mSelectRouteIntMethod -> mSelectRouteIntMethod
    void <init>() -> <init>
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo:
    void <init>() -> <init>
    void setName(java.lang.Object,java.lang.CharSequence) -> setName
    void setStatus(java.lang.Object,java.lang.CharSequence) -> setStatus
    void setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable) -> setIconDrawable
    void setPlaybackType(java.lang.Object,int) -> setPlaybackType
    void setPlaybackStream(java.lang.Object,int) -> setPlaybackStream
    void setVolume(java.lang.Object,int) -> setVolume
    void setVolumeMax(java.lang.Object,int) -> setVolumeMax
    void setVolumeHandling(java.lang.Object,int) -> setVolumeHandling
    void setVolumeCallback(java.lang.Object,java.lang.Object) -> setVolumeCallback
    void setRemoteControlClient(java.lang.Object,java.lang.Object) -> setRemoteControlClient
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback:
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback mCallback -> mCallback
    void <init>(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> <init>
    void onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybeanMr1 -> android.support.v4.media.routing.MediaRouterJellybeanMr1:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> createCallback
android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround:
    int WIFI_DISPLAY_SCAN_INTERVAL -> WIFI_DISPLAY_SCAN_INTERVAL
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    android.os.Handler mHandler -> mHandler
    java.lang.reflect.Method mScanWifiDisplaysMethod -> mScanWifiDisplaysMethod
    boolean mActivelyScanningWifiDisplays -> mActivelyScanningWifiDisplays
    void <init>(android.content.Context,android.os.Handler) -> <init>
    void setActiveScanRouteTypes(int) -> setActiveScanRouteTypes
    void run() -> run
android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback -> android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback:
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy:
    void <init>(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> <init>
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround:
    java.lang.reflect.Method mGetStatusCodeMethod -> mGetStatusCodeMethod
    int mStatusConnecting -> mStatusConnecting
    void <init>() -> <init>
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo:
    void <init>() -> <init>
    boolean isEnabled(java.lang.Object) -> isEnabled
    android.view.Display getPresentationDisplay(java.lang.Object) -> getPresentationDisplay
android.support.v4.media.routing.MediaRouterJellybeanMr2 -> android.support.v4.media.routing.MediaRouterJellybeanMr2:
    void <init>() -> <init>
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
    void addCallback(java.lang.Object,int,java.lang.Object,int) -> addCallback
android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo:
    void <init>() -> <init>
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo:
    void <init>() -> <init>
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
android.support.v4.media.session.IMediaControllerCallback -> android.support.v4.media.session.IMediaControllerCallback:
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    int TRANSACTION_onSessionDestroyed -> TRANSACTION_onSessionDestroyed
    int TRANSACTION_onPlaybackStateChanged -> TRANSACTION_onPlaybackStateChanged
    int TRANSACTION_onMetadataChanged -> TRANSACTION_onMetadataChanged
    int TRANSACTION_onQueueChanged -> TRANSACTION_onQueueChanged
    int TRANSACTION_onQueueTitleChanged -> TRANSACTION_onQueueTitleChanged
    int TRANSACTION_onExtrasChanged -> TRANSACTION_onExtrasChanged
    int TRANSACTION_onVolumeInfoChanged -> TRANSACTION_onVolumeInfoChanged
    void <init>() -> <init>
    android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaSession -> android.support.v4.media.session.IMediaSession:
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_sendCommand -> TRANSACTION_sendCommand
    int TRANSACTION_sendMediaButton -> TRANSACTION_sendMediaButton
    int TRANSACTION_registerCallbackListener -> TRANSACTION_registerCallbackListener
    int TRANSACTION_unregisterCallbackListener -> TRANSACTION_unregisterCallbackListener
    int TRANSACTION_isTransportControlEnabled -> TRANSACTION_isTransportControlEnabled
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getTag -> TRANSACTION_getTag
    int TRANSACTION_getLaunchPendingIntent -> TRANSACTION_getLaunchPendingIntent
    int TRANSACTION_getFlags -> TRANSACTION_getFlags
    int TRANSACTION_getVolumeAttributes -> TRANSACTION_getVolumeAttributes
    int TRANSACTION_adjustVolume -> TRANSACTION_adjustVolume
    int TRANSACTION_setVolumeTo -> TRANSACTION_setVolumeTo
    int TRANSACTION_play -> TRANSACTION_play
    int TRANSACTION_playFromMediaId -> TRANSACTION_playFromMediaId
    int TRANSACTION_playFromSearch -> TRANSACTION_playFromSearch
    int TRANSACTION_skipToQueueItem -> TRANSACTION_skipToQueueItem
    int TRANSACTION_pause -> TRANSACTION_pause
    int TRANSACTION_stop -> TRANSACTION_stop
    int TRANSACTION_next -> TRANSACTION_next
    int TRANSACTION_previous -> TRANSACTION_previous
    int TRANSACTION_fastForward -> TRANSACTION_fastForward
    int TRANSACTION_rewind -> TRANSACTION_rewind
    int TRANSACTION_seekTo -> TRANSACTION_seekTo
    int TRANSACTION_rate -> TRANSACTION_rate
    int TRANSACTION_sendCustomAction -> TRANSACTION_sendCustomAction
    int TRANSACTION_getMetadata -> TRANSACTION_getMetadata
    int TRANSACTION_getPlaybackState -> TRANSACTION_getPlaybackState
    int TRANSACTION_getQueue -> TRANSACTION_getQueue
    int TRANSACTION_getQueueTitle -> TRANSACTION_getQueueTitle
    int TRANSACTION_getExtras -> TRANSACTION_getExtras
    int TRANSACTION_getRatingType -> TRANSACTION_getRatingType
    void <init>() -> <init>
    android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    java.lang.String TAG -> TAG
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$1 -> android.support.v4.media.session.MediaControllerCompat$1:
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler -> mHandler
    boolean mRegistered -> mRegistered
    void <init>() -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    void binderDied() -> binderDied
    void setHandler(android.os.Handler) -> setHandler
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler access$200(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$200
    boolean access$300(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$300
    java.lang.Object access$400(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$400
    void access$500(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> access$500
    boolean access$302(android.support.v4.media.session.MediaControllerCompat$Callback,boolean) -> access$302
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    int MSG_EVENT -> MSG_EVENT
    int MSG_UPDATE_PLAYBACK_STATE -> MSG_UPDATE_PLAYBACK_STATE
    int MSG_UPDATE_METADATA -> MSG_UPDATE_METADATA
    int MSG_UPDATE_VOLUME -> MSG_UPDATE_VOLUME
    int MSG_UPDATE_QUEUE -> MSG_UPDATE_QUEUE
    int MSG_UPDATE_QUEUE_TITLE -> MSG_UPDATE_QUEUE_TITLE
    int MSG_UPDATE_EXTRAS -> MSG_UPDATE_EXTRAS
    int MSG_DESTROYED -> MSG_DESTROYED
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void post(int,java.lang.Object,android.os.Bundle) -> post
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.support.v4.media.session.MediaControllerCompat$1) -> <init>
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.support.v4.media.session.MediaControllerCompat$1) -> <init>
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.lang.Object mControllerObj -> mControllerObj
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    android.support.v4.media.session.MediaControllerCompat$TransportControls mTransportControls -> mTransportControls
    void <init>(android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int PLAYBACK_TYPE_LOCAL -> PLAYBACK_TYPE_LOCAL
    int PLAYBACK_TYPE_REMOTE -> PLAYBACK_TYPE_REMOTE
    int mPlaybackType -> mPlaybackType
    int mAudioStream -> mAudioStream
    int mVolumeControl -> mVolumeControl
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    void <init>(int,int,int,int,int) -> <init>
    int getPlaybackType() -> getPlaybackType
    int getAudioStream() -> getAudioStream
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    int getCurrentVolume() -> getCurrentVolume
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    void <init>() -> <init>
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void <init>(java.lang.Object) -> <init>
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void rewind() -> rewind
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase -> android.support.v4.media.session.MediaControllerCompat$TransportControlsBase:
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    void <init>(android.support.v4.media.session.IMediaSession) -> <init>
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    void <init>() -> <init>
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    java.util.List getQueue(java.lang.Object) -> getQueue
    java.lang.CharSequence getQueueTitle(java.lang.Object) -> getQueueTitle
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getRatingType(java.lang.Object) -> getRatingType
    long getFlags(java.lang.Object) -> getFlags
    java.lang.Object getPlaybackInfo(java.lang.Object) -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity(java.lang.Object) -> getSessionActivity
    boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    void setVolumeTo(java.lang.Object,int,int) -> setVolumeTo
    void adjustVolume(java.lang.Object,int,int) -> adjustVolume
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName(java.lang.Object) -> getPackageName
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int FLAG_SCO -> FLAG_SCO
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    void <init>() -> <init>
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int getVolumeControl(java.lang.Object) -> getVolumeControl
    int getMaxVolume(java.lang.Object) -> getMaxVolume
    int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void <init>() -> <init>
    void play(java.lang.Object) -> play
    void pause(java.lang.Object) -> pause
    void stop(java.lang.Object) -> stop
    void seekTo(java.lang.Object,long) -> seekTo
    void fastForward(java.lang.Object) -> fastForward
    void rewind(java.lang.Object) -> rewind
    void skipToNext(java.lang.Object) -> skipToNext
    void skipToPrevious(java.lang.Object) -> skipToPrevious
    void setRating(java.lang.Object,java.lang.Object) -> setRating
    void playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(java.lang.Object,long) -> skipToQueueItem
    void sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    android.support.v4.media.session.MediaControllerCompat mController -> mController
    java.util.ArrayList mActiveListeners -> mActiveListeners
    int FLAG_HANDLES_MEDIA_BUTTONS -> FLAG_HANDLES_MEDIA_BUTTONS
    int FLAG_HANDLES_TRANSPORT_CONTROLS -> FLAG_HANDLES_TRANSPORT_CONTROLS
    void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl) -> <init>
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    android.support.v4.media.session.MediaControllerCompat getController() -> getController
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> addOnActiveChangeListener
    void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> removeOnActiveChangeListener
    android.support.v4.media.session.MediaSessionCompat obtain(android.content.Context,java.lang.Object) -> obtain
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void <init>() -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback,android.support.v4.media.session.MediaSessionCompat$1) -> <init>
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    java.lang.Object mSessionObj -> mSessionObj
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.app.PendingIntent mMediaButtonIntent -> mMediaButtonIntent
    void <init>(android.content.Context,java.lang.String) -> <init>
    void <init>(java.lang.Object) -> <init>
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    android.content.Context mContext -> mContext
    android.content.ComponentName mComponentName -> mComponentName
    android.app.PendingIntent mMediaButtonEventReceiver -> mMediaButtonEventReceiver
    java.lang.Object mRccObj -> mRccObj
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub -> mStub
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler -> mHandler
    java.lang.String mPackageName -> mPackageName
    java.lang.String mTag -> mTag
    android.media.AudioManager mAudioManager -> mAudioManager
    java.lang.Object mLock -> mLock
    android.os.RemoteCallbackList mControllerCallbacks -> mControllerCallbacks
    boolean mDestroyed -> mDestroyed
    boolean mIsActive -> mIsActive
    boolean mIsRccRegistered -> mIsRccRegistered
    boolean mIsMbrRegistered -> mIsMbrRegistered
    android.support.v4.media.session.MediaSessionCompat$Callback mCallback -> mCallback
    int mFlags -> mFlags
    android.support.v4.media.MediaMetadataCompat mMetadata -> mMetadata
    android.support.v4.media.session.PlaybackStateCompat mState -> mState
    android.app.PendingIntent mSessionActivity -> mSessionActivity
    java.util.List mQueue -> mQueue
    java.lang.CharSequence mQueueTitle -> mQueueTitle
    int mRatingType -> mRatingType
    android.os.Bundle mExtras -> mExtras
    int mVolumeType -> mVolumeType
    int mLocalStream -> mLocalStream
    android.support.v4.media.VolumeProviderCompat mVolumeProvider -> mVolumeProvider
    android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback -> mVolumeCallback
    void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    boolean update() -> update
    void adjustVolume(int,int) -> adjustVolume
    void setVolumeTo(int,int) -> setVolumeTo
    android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition() -> getStateWithUpdatedPosition
    void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> sendVolumeInfoChanged
    void sendSessionDestroyed() -> sendSessionDestroyed
    void sendEvent(java.lang.String,android.os.Bundle) -> sendEvent
    void sendState(android.support.v4.media.session.PlaybackStateCompat) -> sendState
    void sendMetadata(android.support.v4.media.MediaMetadataCompat) -> sendMetadata
    void sendQueue(java.util.List) -> sendQueue
    void sendQueueTitle(java.lang.CharSequence) -> sendQueueTitle
    android.support.v4.media.VolumeProviderCompat access$200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$200
    int access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$300
    int access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$400
    void access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.ParcelableVolumeInfo) -> access$500
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler access$700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$700
    int access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$800
    boolean access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$900
    android.os.RemoteCallbackList access$1000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1000
    java.lang.String access$1100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1100
    java.lang.String access$1200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1200
    java.lang.Object access$1300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1300
    android.app.PendingIntent access$1400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1400
    android.media.AudioManager access$1500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1500
    void access$1600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int) -> access$1600
    void access$1700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int) -> access$1700
    android.support.v4.media.MediaMetadataCompat access$1800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1800
    android.support.v4.media.session.PlaybackStateCompat access$1900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1900
    java.util.List access$2000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2000
    java.lang.CharSequence access$2100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2100
    android.os.Bundle access$2200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2200
    int access$2300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2300
    android.support.v4.media.session.MediaSessionCompat$Callback access$2400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2400
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2:
    android.support.v4.media.session.MediaSessionCompat$Callback val$callback -> val$callback
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    void onStop() -> onStop
    void onSkipToPrevious() -> onSkipToPrevious
    void onSkipToNext() -> onSkipToNext
    void onSetRating(java.lang.Object) -> onSetRating
    void onSeekTo(long) -> onSeekTo
    void onRewind() -> onRewind
    void onPlay() -> onPlay
    void onPause() -> onPause
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onFastForward() -> onFastForward
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command:
    java.lang.String command -> command
    android.os.Bundle extras -> extras
    android.os.ResultReceiver stub -> stub
    void <init>(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> <init>
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isTransportControlEnabled() -> isTransportControlEnabled
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler:
    int MSG_PLAY -> MSG_PLAY
    int MSG_PLAY_MEDIA_ID -> MSG_PLAY_MEDIA_ID
    int MSG_PLAY_SEARCH -> MSG_PLAY_SEARCH
    int MSG_SKIP_TO_ITEM -> MSG_SKIP_TO_ITEM
    int MSG_PAUSE -> MSG_PAUSE
    int MSG_STOP -> MSG_STOP
    int MSG_NEXT -> MSG_NEXT
    int MSG_PREVIOUS -> MSG_PREVIOUS
    int MSG_FAST_FORWARD -> MSG_FAST_FORWARD
    int MSG_REWIND -> MSG_REWIND
    int MSG_SEEK_TO -> MSG_SEEK_TO
    int MSG_RATE -> MSG_RATE
    int MSG_CUSTOM_ACTION -> MSG_CUSTOM_ACTION
    int MSG_MEDIA_BUTTON -> MSG_MEDIA_BUTTON
    int MSG_COMMAND -> MSG_COMMAND
    int MSG_ADJUST_VOLUME -> MSG_ADJUST_VOLUME
    int MSG_SET_VOLUME -> MSG_SET_VOLUME
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper) -> <init>
    void post(int,java.lang.Object,android.os.Bundle) -> post
    void post(int,java.lang.Object) -> post
    void post(int) -> post
    void post(int,java.lang.Object,int) -> post
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener -> android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener:
    void onActiveChanged() -> onActiveChanged
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    int UNKNOWN_ID -> UNKNOWN_ID
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    long mId -> mId
    java.lang.Object mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    long getQueueId() -> getQueueId
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.Object getQueueItem() -> getQueueItem
    android.support.v4.media.session.MediaSessionCompat$QueueItem obtain(java.lang.Object) -> obtain
    java.lang.String toString() -> toString
    void <init>(android.os.Parcel,android.support.v4.media.session.MediaSessionCompat$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> mResultReceiver
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.ResultReceiver) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.ResultReceiver access$600(android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> access$600
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    java.lang.Object mInner -> mInner
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(java.lang.Object) -> <init>
    android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> fromToken
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object getToken() -> getToken
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompatApi14 -> android.support.v4.media.session.MediaSessionCompatApi14:
    int RCC_PLAYSTATE_NONE -> RCC_PLAYSTATE_NONE
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    void <init>() -> <init>
    java.lang.Object createRemoteControlClient(android.app.PendingIntent) -> createRemoteControlClient
    void setState(java.lang.Object,int) -> setState
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    void setMetadata(java.lang.Object,android.os.Bundle) -> setMetadata
    void registerRemoteControlClient(android.content.Context,java.lang.Object) -> registerRemoteControlClient
    void unregisterRemoteControlClient(android.content.Context,java.lang.Object) -> unregisterRemoteControlClient
    int getRccStateFromState(int) -> getRccStateFromState
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void buildOldMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor) -> buildOldMetadata
android.support.v4.media.session.MediaSessionCompatApi14$Callback -> android.support.v4.media.session.MediaSessionCompatApi14$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompatApi18 -> android.support.v4.media.session.MediaSessionCompatApi18:
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    void <init>() -> <init>
    java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> createPlaybackPositionUpdateListener
    void registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent) -> unregisterMediaButtonEventReceiver
    void setState(java.lang.Object,int,long,float,long) -> setState
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object) -> setOnPlaybackPositionUpdateListener
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener -> android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener:
    android.support.v4.media.session.MediaSessionCompatApi14$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> <init>
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
android.support.v4.media.session.MediaSessionCompatApi19 -> android.support.v4.media.session.MediaSessionCompatApi19:
    long ACTION_SET_RATING -> ACTION_SET_RATING
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    void <init>() -> <init>
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    java.lang.Object createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> createMetadataUpdateListener
    void setMetadata(java.lang.Object,android.os.Bundle,long) -> setMetadata
    void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object) -> setOnMetadataUpdateListener
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void addNewMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor) -> addNewMetadata
android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener -> android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener:
    android.support.v4.media.session.MediaSessionCompatApi14$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> <init>
    void onMetadataUpdate(int,java.lang.Object) -> onMetadataUpdate
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    void <init>() -> <init>
    java.lang.Object createSession(android.content.Context,java.lang.String) -> createSession
    java.lang.Object verifySession(java.lang.Object) -> verifySession
    java.lang.Object verifyToken(java.lang.Object) -> verifyToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> createCallback
    void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> setCallback
    void setFlags(java.lang.Object,int) -> setFlags
    void setPlaybackToLocal(java.lang.Object,int) -> setPlaybackToLocal
    void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> setPlaybackToRemote
    void setActive(java.lang.Object,boolean) -> setActive
    boolean isActive(java.lang.Object) -> isActive
    void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release(java.lang.Object) -> release
    android.os.Parcelable getSessionToken(java.lang.Object) -> getSessionToken
    void setPlaybackState(java.lang.Object,java.lang.Object) -> setPlaybackState
    void setMetadata(java.lang.Object,java.lang.Object) -> setMetadata
    void setSessionActivity(java.lang.Object,android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.lang.Object,java.util.List) -> setQueue
    void setQueueTitle(java.lang.Object,java.lang.CharSequence) -> setQueueTitle
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> android.support.v4.media.session.MediaSessionCompatApi21$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.media.Rating) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    void <init>() -> <init>
    java.lang.Object createItem(java.lang.Object,long) -> createItem
    java.lang.Object getDescription(java.lang.Object) -> getDescription
    long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.media.session.MediaSessionCompatApi22 -> android.support.v4.media.session.MediaSessionCompatApi22:
    void <init>() -> <init>
    void setRatingType(java.lang.Object,int) -> setRatingType
android.support.v4.media.session.MediaSessionCompatApi8 -> android.support.v4.media.session.MediaSessionCompatApi8:
    void <init>() -> <init>
    void registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName) -> unregisterMediaButtonEventReceiver
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> volumeType
    int audioStream -> audioStream
    int controlType -> controlType
    int maxVolume -> maxVolume
    int currentVolume -> currentVolume
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(int,int,int,int,int) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    void <init>() -> <init>
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_SET_RATING -> ACTION_SET_RATING
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    long ACTION_PLAY_FROM_MEDIA_ID -> ACTION_PLAY_FROM_MEDIA_ID
    long ACTION_PLAY_FROM_SEARCH -> ACTION_PLAY_FROM_SEARCH
    long ACTION_SKIP_TO_QUEUE_ITEM -> ACTION_SKIP_TO_QUEUE_ITEM
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    long PLAYBACK_POSITION_UNKNOWN -> PLAYBACK_POSITION_UNKNOWN
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mSpeed -> mSpeed
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    java.util.List mCustomActions -> mCustomActions
    long mActiveItemId -> mActiveItemId
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mStateObj -> mStateObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getState() -> getState
    long getPosition() -> getPosition
    long getBufferedPosition() -> getBufferedPosition
    float getPlaybackSpeed() -> getPlaybackSpeed
    long getActions() -> getActions
    java.util.List getCustomActions() -> getCustomActions
    java.lang.CharSequence getErrorMessage() -> getErrorMessage
    long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    long getActiveQueueItemId() -> getActiveQueueItemId
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    java.lang.Object getPlaybackState() -> getPlaybackState
    void <init>(android.os.Parcel,android.support.v4.media.session.PlaybackStateCompat$1) -> <init>
    int access$300(android.support.v4.media.session.PlaybackStateCompat) -> access$300
    long access$400(android.support.v4.media.session.PlaybackStateCompat) -> access$400
    float access$500(android.support.v4.media.session.PlaybackStateCompat) -> access$500
    long access$600(android.support.v4.media.session.PlaybackStateCompat) -> access$600
    long access$700(android.support.v4.media.session.PlaybackStateCompat) -> access$700
    long access$800(android.support.v4.media.session.PlaybackStateCompat) -> access$800
    java.lang.CharSequence access$900(android.support.v4.media.session.PlaybackStateCompat) -> access$900
    java.util.List access$1000(android.support.v4.media.session.PlaybackStateCompat) -> access$1000
    long access$1100(android.support.v4.media.session.PlaybackStateCompat) -> access$1100
    android.os.Bundle access$1200(android.support.v4.media.session.PlaybackStateCompat) -> access$1200
    void <init>(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle,android.support.v4.media.session.PlaybackStateCompat$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    java.util.List mCustomActions -> mCustomActions
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mRate -> mRate
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    long mActiveItemId -> mActiveItemId
    android.os.Bundle mExtras -> mExtras
    void <init>() -> <init>
    void <init>(android.support.v4.media.session.PlaybackStateCompat) -> <init>
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float) -> setState
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long) -> setState
    android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long) -> setBufferedPosition
    android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long) -> setActions
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long) -> setActiveQueueItemId
    android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat build() -> build
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> mAction
    java.lang.CharSequence mName -> mName
    int mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mCustomActionObj -> mCustomActionObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    java.lang.Object getCustomAction() -> getCustomAction
    java.lang.String getAction() -> getAction
    java.lang.CharSequence getName() -> getName
    int getIcon() -> getIcon
    android.os.Bundle getExtras() -> getExtras
    java.lang.String toString() -> toString
    void <init>(android.os.Parcel,android.support.v4.media.session.PlaybackStateCompat$1) -> <init>
    void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle,android.support.v4.media.session.PlaybackStateCompat$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder:
    java.lang.String mAction -> mAction
    java.lang.CharSequence mName -> mName
    int mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    void <init>(java.lang.String,java.lang.CharSequence,int) -> <init>
    android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat$CustomAction build() -> build
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    void <init>() -> <init>
    int getState(java.lang.Object) -> getState
    long getPosition(java.lang.Object) -> getPosition
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getActions(java.lang.Object) -> getActions
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long) -> newInstance
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    void <init>() -> <init>
    java.lang.String getAction(java.lang.Object) -> getAction
    java.lang.CharSequence getName(java.lang.Object) -> getName
    int getIcon(java.lang.Object) -> getIcon
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> newInstance
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    void <init>() -> <init>
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> newInstance
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
    void <clinit>() -> <clinit>
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
    void <clinit>() -> <clinit>
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void <init>() -> <init>
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    void <init>(android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl) -> <init>
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
    void <init>() -> <init>
    void <init>(android.support.v4.net.TrafficStatsCompat$1) -> <init>
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void <init>() -> <init>
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void <init>() -> <init>
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.AsyncTaskCompat -> android.support.v4.os.AsyncTaskCompat:
    void <init>() -> <init>
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.os.AsyncTaskCompatHoneycomb:
    void <init>() -> <init>
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    void <init>() -> <init>
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    void <init>() -> <init>
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    void <init>() -> <init>
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    void <init>() -> <init>
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.os.TraceCompat -> android.support.v4.os.TraceCompat:
    void <init>() -> <init>
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
android.support.v4.os.TraceJellybeanMR2 -> android.support.v4.os.TraceJellybeanMR2:
    void <init>() -> <init>
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void <init>(android.content.Context) -> <init>
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$OnPrintFinishCallback -> android.support.v4.print.PrintHelper$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void <init>(android.content.Context) -> <init>
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void <init>(android.support.v4.print.PrintHelper$PrintHelperKitkatImpl,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> <init>
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void <init>(android.support.v4.print.PrintHelper$PrintHelperKitkatImpl,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> <init>
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void <init>() -> <init>
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void <init>(android.support.v4.print.PrintHelper$1) -> <init>
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void <init>(android.content.Context) -> <init>
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void <init>(android.support.v4.print.PrintHelperKitkat,java.lang.String,android.graphics.Bitmap,int,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> <init>
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void onFinish() -> onFinish
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask mLoadBitmap -> mLoadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void <init>(android.support.v4.print.PrintHelperKitkat,java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback,int) -> <init>
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void <init>(android.support.v4.print.PrintHelperKitkat$2,android.os.CancellationSignal,android.print.PrintAttributes,android.print.PrintAttributes,android.print.PrintDocumentAdapter$LayoutResultCallback) -> <init>
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void <init>(android.support.v4.print.PrintHelperKitkat$2$1) -> <init>
    void onCancel() -> onCancel
android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback -> android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.provider.DocumentFile -> android.support.v4.provider.DocumentFile:
    java.lang.String TAG -> TAG
    android.support.v4.provider.DocumentFile mParent -> mParent
    void <init>(android.support.v4.provider.DocumentFile) -> <init>
    android.support.v4.provider.DocumentFile fromFile(java.io.File) -> fromFile
    android.support.v4.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    android.support.v4.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.support.v4.provider.DocumentFile getParentFile() -> getParentFile
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    android.support.v4.provider.DocumentFile findFile(java.lang.String) -> findFile
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.DocumentsContractApi19 -> android.support.v4.provider.DocumentsContractApi19:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    boolean isFile(android.content.Context,android.net.Uri) -> isFile
    long lastModified(android.content.Context,android.net.Uri) -> lastModified
    long length(android.content.Context,android.net.Uri) -> length
    boolean canRead(android.content.Context,android.net.Uri) -> canRead
    boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    boolean delete(android.content.Context,android.net.Uri) -> delete
    boolean exists(android.content.Context,android.net.Uri) -> exists
    java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
    int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.DocumentsContractApi21 -> android.support.v4.provider.DocumentsContractApi21:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    android.net.Uri createDirectory(android.content.Context,android.net.Uri,java.lang.String) -> createDirectory
    android.net.Uri prepareTreeUri(android.net.Uri) -> prepareTreeUri
    android.net.Uri[] listFiles(android.content.Context,android.net.Uri) -> listFiles
    android.net.Uri renameTo(android.content.Context,android.net.Uri,java.lang.String) -> renameTo
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.RawDocumentFile -> android.support.v4.provider.RawDocumentFile:
    java.io.File mFile -> mFile
    void <init>(android.support.v4.provider.DocumentFile,java.io.File) -> <init>
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
    java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    boolean deleteContents(java.io.File) -> deleteContents
android.support.v4.provider.SingleDocumentFile -> android.support.v4.provider.SingleDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    void <init>(android.support.v4.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.TreeDocumentFile -> android.support.v4.provider.TreeDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    void <init>(android.support.v4.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.speech.tts.TextToSpeechICS -> android.support.v4.speech.tts.TextToSpeechICS:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    android.speech.tts.TextToSpeech construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String) -> construct
android.support.v4.speech.tts.TextToSpeechICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1:
    java.lang.String KEY_FEATURE_EMBEDDED_SYNTHESIS -> KEY_FEATURE_EMBEDDED_SYNTHESIS
    java.lang.String KEY_FEATURE_NETWORK_SYNTHESIS -> KEY_FEATURE_NETWORK_SYNTHESIS
    void <init>() -> <init>
    java.util.Set getFeatures(android.speech.tts.TextToSpeech,java.util.Locale) -> getFeatures
    void setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> setUtteranceProgressListener
android.support.v4.speech.tts.TextToSpeechICSMR1$1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$1:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void <init>(android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> <init>
    void onStart(java.lang.String) -> onStart
    void onError(java.lang.String) -> onError
    void onDone(java.lang.String) -> onDone
android.support.v4.speech.tts.TextToSpeechICSMR1$2 -> android.support.v4.speech.tts.TextToSpeechICSMR1$2:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void <init>(android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> <init>
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1:
    void onDone(java.lang.String) -> onDone
    void onError(java.lang.String) -> onError
    void onStart(java.lang.String) -> onStart
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat) -> <init>
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
    void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat,android.support.v4.text.BidiFormatter$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    void <init>(java.util.Locale) -> <init>
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    void <init>(java.lang.String,boolean) -> <init>
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
    void <clinit>() -> <clinit>
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
    void <clinit>() -> <clinit>
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    void <init>() -> <init>
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    void <init>() -> <init>
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    void <init>() -> <init>
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
    void <clinit>() -> <clinit>
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    void <init>() -> <init>
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
    void <clinit>() -> <clinit>
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
    void <init>(boolean) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
    void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean,android.support.v4.text.TextDirectionHeuristicsCompat$1) -> <init>
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
    void <clinit>() -> <clinit>
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    void <init>() -> <init>
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    void <clinit>() -> <clinit>
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(android.support.v4.util.SimpleArrayMap) -> <init>
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    void <init>(android.support.v4.util.ArrayMap) -> <init>
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    void <init>(java.io.File) -> <init>
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void <init>() -> <init>
    void <init>(int) -> <init>
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    void clear() -> clear
    void removeFromStart(int) -> removeFromStart
    void removeFromEnd(int) -> removeFromEnd
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.CircularIntArray -> android.support.v4.util.CircularIntArray:
    int[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void <init>() -> <init>
    void <init>(int) -> <init>
    void addFirst(int) -> addFirst
    void addLast(int) -> addLast
    int popFirst() -> popFirst
    int popLast() -> popLast
    void clear() -> clear
    void removeFromStart(int) -> removeFromStart
    void removeFromEnd(int) -> removeFromEnd
    int getFirst() -> getFirst
    int getLast() -> getLast
    int get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    void <init>() -> <init>
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
    void <clinit>() -> <clinit>
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void <init>() -> <init>
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void <init>(java.lang.String) -> <init>
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    void <init>(int) -> <init>
    void resize(int) -> resize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    void <init>() -> <init>
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections,int) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    int hashCode() -> hashCode
    android.support.v4.util.Pair create(java.lang.Object,java.lang.Object) -> create
android.support.v4.util.Pools -> android.support.v4.util.Pools:
    void <init>() -> <init>
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(android.support.v4.util.SimpleArrayMap) -> <init>
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    void <init>() -> <init>
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
    void <clinit>() -> <clinit>
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    void <init>() -> <init>
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void <clinit>() -> <clinit>
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    void <init>() -> <init>
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    void <init>() -> <init>
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    void <init>() -> <init>
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    void <init>() -> <init>
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    void <init>() -> <init>
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    void <init>(android.content.Context) -> <init>
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
    void <clinit>() -> <clinit>
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void <init>() -> <init>
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void <clinit>() -> <clinit>
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    void <init>() -> <init>
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    void <init>() -> <init>
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    void <init>() -> <init>
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.InputDeviceCompat -> android.support.v4.view.InputDeviceCompat:
    int SOURCE_CLASS_MASK -> SOURCE_CLASS_MASK
    int SOURCE_CLASS_NONE -> SOURCE_CLASS_NONE
    int SOURCE_CLASS_BUTTON -> SOURCE_CLASS_BUTTON
    int SOURCE_CLASS_POINTER -> SOURCE_CLASS_POINTER
    int SOURCE_CLASS_TRACKBALL -> SOURCE_CLASS_TRACKBALL
    int SOURCE_CLASS_POSITION -> SOURCE_CLASS_POSITION
    int SOURCE_CLASS_JOYSTICK -> SOURCE_CLASS_JOYSTICK
    int SOURCE_UNKNOWN -> SOURCE_UNKNOWN
    int SOURCE_KEYBOARD -> SOURCE_KEYBOARD
    int SOURCE_DPAD -> SOURCE_DPAD
    int SOURCE_GAMEPAD -> SOURCE_GAMEPAD
    int SOURCE_TOUCHSCREEN -> SOURCE_TOUCHSCREEN
    int SOURCE_MOUSE -> SOURCE_MOUSE
    int SOURCE_STYLUS -> SOURCE_STYLUS
    int SOURCE_TRACKBALL -> SOURCE_TRACKBALL
    int SOURCE_TOUCHPAD -> SOURCE_TOUCHPAD
    int SOURCE_TOUCH_NAVIGATION -> SOURCE_TOUCH_NAVIGATION
    int SOURCE_JOYSTICK -> SOURCE_JOYSTICK
    int SOURCE_HDMI -> SOURCE_HDMI
    int SOURCE_ANY -> SOURCE_ANY
    void <init>() -> <init>
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    void <init>() -> <init>
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void <clinit>() -> <clinit>
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    void <init>() -> <init>
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void <init>() -> <init>
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    void <init>() -> <init>
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    void <init>() -> <init>
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    void <init>() -> <init>
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.LayoutInflaterCompat:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
    void <clinit>() -> <clinit>
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.view.LayoutInflaterCompatBase:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> mDelegateFactory
    void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.view.LayoutInflaterCompatHC:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> sLayoutInflaterFactory2Field
    boolean sCheckedField -> sCheckedField
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC:
    void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.view.LayoutInflaterCompatLollipop:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.LayoutInflaterFactory:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    void <clinit>() -> <clinit>
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    void <init>() -> <init>
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    void <init>() -> <init>
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    void <init>() -> <init>
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    void <clinit>() -> <clinit>
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    void <init>() -> <init>
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    void <init>(android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> <init>
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    void <init>() -> <init>
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    void <init>(android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> <init>
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int AXIS_X -> AXIS_X
    int AXIS_Y -> AXIS_Y
    int AXIS_PRESSURE -> AXIS_PRESSURE
    int AXIS_SIZE -> AXIS_SIZE
    int AXIS_TOUCH_MAJOR -> AXIS_TOUCH_MAJOR
    int AXIS_TOUCH_MINOR -> AXIS_TOUCH_MINOR
    int AXIS_TOOL_MAJOR -> AXIS_TOOL_MAJOR
    int AXIS_TOOL_MINOR -> AXIS_TOOL_MINOR
    int AXIS_ORIENTATION -> AXIS_ORIENTATION
    int AXIS_VSCROLL -> AXIS_VSCROLL
    int AXIS_HSCROLL -> AXIS_HSCROLL
    int AXIS_Z -> AXIS_Z
    int AXIS_RX -> AXIS_RX
    int AXIS_RY -> AXIS_RY
    int AXIS_RZ -> AXIS_RZ
    int AXIS_HAT_X -> AXIS_HAT_X
    int AXIS_HAT_Y -> AXIS_HAT_Y
    int AXIS_LTRIGGER -> AXIS_LTRIGGER
    int AXIS_RTRIGGER -> AXIS_RTRIGGER
    int AXIS_THROTTLE -> AXIS_THROTTLE
    int AXIS_RUDDER -> AXIS_RUDDER
    int AXIS_WHEEL -> AXIS_WHEEL
    int AXIS_GAS -> AXIS_GAS
    int AXIS_BRAKE -> AXIS_BRAKE
    int AXIS_DISTANCE -> AXIS_DISTANCE
    int AXIS_TILT -> AXIS_TILT
    int AXIS_GENERIC_1 -> AXIS_GENERIC_1
    int AXIS_GENERIC_2 -> AXIS_GENERIC_2
    int AXIS_GENERIC_3 -> AXIS_GENERIC_3
    int AXIS_GENERIC_4 -> AXIS_GENERIC_4
    int AXIS_GENERIC_5 -> AXIS_GENERIC_5
    int AXIS_GENERIC_6 -> AXIS_GENERIC_6
    int AXIS_GENERIC_7 -> AXIS_GENERIC_7
    int AXIS_GENERIC_8 -> AXIS_GENERIC_8
    int AXIS_GENERIC_9 -> AXIS_GENERIC_9
    int AXIS_GENERIC_10 -> AXIS_GENERIC_10
    int AXIS_GENERIC_11 -> AXIS_GENERIC_11
    int AXIS_GENERIC_12 -> AXIS_GENERIC_12
    int AXIS_GENERIC_13 -> AXIS_GENERIC_13
    int AXIS_GENERIC_14 -> AXIS_GENERIC_14
    int AXIS_GENERIC_15 -> AXIS_GENERIC_15
    int AXIS_GENERIC_16 -> AXIS_GENERIC_16
    void <init>() -> <init>
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    void <clinit>() -> <clinit>
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    void <init>() -> <init>
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    void <init>() -> <init>
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl:
    void <init>() -> <init>
    int getSource(android.view.MotionEvent) -> getSource
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl:
    void <init>() -> <init>
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    void <init>() -> <init>
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatGingerbread -> android.support.v4.view.MotionEventCompatGingerbread:
    void <init>() -> <init>
    int getSource(android.view.MotionEvent) -> getSource
android.support.v4.view.MotionEventCompatHoneycombMr1 -> android.support.v4.view.MotionEventCompatHoneycombMr1:
    void <init>() -> <init>
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.NestedScrollingChild:
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.NestedScrollingChildHelper:
    android.view.View mView -> mView
    android.view.ViewParent mNestedScrollingParent -> mNestedScrollingParent
    boolean mIsNestedScrollingEnabled -> mIsNestedScrollingEnabled
    int[] mTempNestedScrollConsumed -> mTempNestedScrollConsumed
    void <init>(android.view.View) -> <init>
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.NestedScrollingParent:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.NestedScrollingParentHelper:
    android.view.ViewGroup mViewGroup -> mViewGroup
    int mNestedScrollAxes -> mNestedScrollAxes
    void <init>(android.view.ViewGroup) -> <init>
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    void <init>() -> <init>
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTabStrip) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTabStrip) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
    void <clinit>() -> <clinit>
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTitleStrip) -> <init>
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
    void <init>(android.support.v4.view.PagerTitleStrip,android.support.v4.view.PagerTitleStrip$1) -> <init>
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void <init>() -> <init>
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void <init>() -> <init>
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void <init>() -> <init>
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    void <init>(android.content.Context) -> <init>
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void <init>() -> <init>
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    void <clinit>() -> <clinit>
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void <init>() -> <init>
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    void <init>(android.support.v4.view.ScaleGestureDetectorCompat$1) -> <init>
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void <init>() -> <init>
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    void <init>(android.support.v4.view.ScaleGestureDetectorCompat$1) -> <init>
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void <init>() -> <init>
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScrollingView -> android.support.v4.view.ScrollingView:
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
android.support.v4.view.TintableBackgroundView -> android.support.v4.view.TintableBackgroundView:
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
    void <clinit>() -> <clinit>
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    int SCROLL_AXIS_NONE -> SCROLL_AXIS_NONE
    int SCROLL_AXIS_HORIZONTAL -> SCROLL_AXIS_HORIZONTAL
    int SCROLL_AXIS_VERTICAL -> SCROLL_AXIS_VERTICAL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    float getZ(android.view.View) -> getZ
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    void <clinit>() -> <clinit>
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    void <init>() -> <init>
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> canScrollingViewScrollHorizontally
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> canScrollingViewScrollVertically
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    float getZ(android.view.View) -> getZ
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    void <init>() -> <init>
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    void <init>() -> <init>
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    void <init>() -> <init>
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    int combineMeasuredStates(int,int) -> combineMeasuredStates
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    java.lang.reflect.Field mAccessibilityDelegateField -> mAccessibilityDelegateField
    boolean accessibilityDelegateCheckFailed -> accessibilityDelegateCheckFailed
    void <init>() -> <init>
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void <clinit>() -> <clinit>
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    void <init>() -> <init>
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    void <init>() -> <init>
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    void <init>() -> <init>
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.view.ViewCompat$LollipopViewCompatImpl:
    void <init>() -> <init>
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    float getZ(android.view.View) -> getZ
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    float getZ(android.view.View) -> getZ
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatBase -> android.support.v4.view.ViewCompatBase:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sMinWidthField -> sMinWidthField
    boolean sMinWidthFieldFetched -> sMinWidthFieldFetched
    java.lang.reflect.Field sMinHeightField -> sMinHeightField
    boolean sMinHeightFieldFetched -> sMinHeightFieldFetched
    void <init>() -> <init>
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    boolean isLaidOut(android.view.View) -> isLaidOut
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> sChildrenDrawingOrderMethod
    void <init>() -> <init>
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    void <init>() -> <init>
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    void <init>() -> <init>
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    int combineMeasuredStates(int,int) -> combineMeasuredStates
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    void <init>() -> <init>
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    void <init>() -> <init>
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    void <init>() -> <init>
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    void <init>() -> <init>
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatLollipop -> android.support.v4.view.ViewCompatLollipop:
    void <init>() -> <init>
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    float getZ(android.view.View) -> getZ
android.support.v4.view.ViewCompatLollipop$1 -> android.support.v4.view.ViewCompatLollipop$1:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    void <init>(android.support.v4.view.OnApplyWindowInsetsListener) -> <init>
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    void <init>() -> <init>
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
    void <clinit>() -> <clinit>
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    void <init>() -> <init>
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    void <init>() -> <init>
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    void <init>() -> <init>
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.ViewConfigurationCompatICS:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    void <clinit>() -> <clinit>
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void <init>() -> <init>
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    void <init>() -> <init>
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    void <init>() -> <init>
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl:
    void <init>() -> <init>
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    void <init>() -> <init>
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void <init>() -> <init>
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    void <init>() -> <init>
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    void <init>() -> <init>
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatLollipop -> android.support.v4.view.ViewGroupCompatLollipop:
    void <init>() -> <init>
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    java.util.List mOnPageChangeListeners -> mOnPageChangeListeners
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    void <init>() -> <init>
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
    void <init>() -> <init>
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v4.view.ViewPager,android.support.v4.view.ViewPager$1) -> <init>
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    void <init>() -> <init>
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void <init>() -> <init>
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    void <init>() -> <init>
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    void <clinit>() -> <clinit>
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    void <init>() -> <init>
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl:
    void <init>() -> <init>
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl:
    void <init>() -> <init>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    void <init>() -> <init>
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    void <init>() -> <init>
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatKitKat -> android.support.v4.view.ViewParentCompatKitKat:
    void <init>() -> <init>
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompatLollipop -> android.support.v4.view.ViewParentCompatLollipop:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    java.lang.Runnable mStartAction -> mStartAction
    java.lang.Runnable mEndAction -> mEndAction
    int mOldLayerType -> mOldLayerType
    int LISTENER_TAG_ID -> LISTENER_TAG_ID
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    void <init>(android.view.View) -> <init>
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    android.support.v4.view.ViewPropertyAnimatorCompat z(float) -> z
    android.support.v4.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    java.lang.Runnable access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$002
    java.lang.Runnable access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$102
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$100
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$000
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> access$402
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$400
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mStarterMap -> mStarterMap
    void <init>() -> <init>
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> startAnimation
    void removeStartMessage(android.view.View) -> removeStartMessage
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> postStartMessage
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> access$200
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter:
    java.lang.ref.WeakReference mViewRef -> mViewRef
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> this$0
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> <init>
    void run() -> run
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorCompat$1) -> <init>
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mLayerMap -> mLayerMap
    void <init>() -> <init>
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    void <init>() -> <init>
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void <init>() -> <init>
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl:
    void <init>() -> <init>
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl:
    void <init>() -> <init>
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void <init>() -> <init>
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void <init>() -> <init>
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.ViewPropertyAnimatorCompatJB$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    void <init>() -> <init>
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.ViewPropertyAnimatorCompatKK:
    void <init>() -> <init>
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.ViewPropertyAnimatorCompatKK$1:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void <init>(android.support.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorCompatLollipop -> android.support.v4.view.ViewPropertyAnimatorCompatLollipop:
    void <init>() -> <init>
    void translationZ(android.view.View,float) -> translationZ
    void translationZBy(android.view.View,float) -> translationZBy
    void z(android.view.View,float) -> z
    void zBy(android.view.View,float) -> zBy
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void <init>() -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    void <init>() -> <init>
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    void <init>() -> <init>
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.WindowInsetsCompatApi21:
    android.view.WindowInsets mSource -> mSource
    void <init>(android.view.WindowInsets) -> <init>
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    android.view.WindowInsets unwrap() -> unwrap
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int CONTENT_CHANGE_TYPE_UNDEFINED -> CONTENT_CHANGE_TYPE_UNDEFINED
    int CONTENT_CHANGE_TYPE_SUBTREE -> CONTENT_CHANGE_TYPE_SUBTREE
    int CONTENT_CHANGE_TYPE_TEXT -> CONTENT_CHANGE_TYPE_TEXT
    int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION -> CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    void <init>() -> <init>
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void <init>() -> <init>
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl:
    void <init>() -> <init>
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void <init>() -> <init>
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    void <init>() -> <init>
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setScrollable(android.view.accessibility.AccessibilityEvent,boolean) -> setScrollable
android.support.v4.view.accessibility.AccessibilityEventCompatKitKat -> android.support.v4.view.accessibility.AccessibilityEventCompatKitKat:
    void <init>() -> <init>
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    void <init>() -> <init>
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void <init>(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> <init>
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    void <init>() -> <init>
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void <init>() -> <init>
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    void <init>() -> <init>
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> <init>
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    int ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    void addAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    java.util.List getActionList() -> getActionList
    void setContentInvalid(boolean) -> setContentInvalid
    boolean isContentInvalid() -> isContentInvalid
    void setError(java.lang.CharSequence) -> setError
    java.lang.CharSequence getError() -> getError
    void setLabelFor(android.view.View) -> setLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> access$000
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    java.lang.Object mAction -> mAction
    void <init>(int,java.lang.CharSequence) -> <init>
    void <init>(java.lang.Object) -> <init>
    int getId() -> getId
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.Object access$100(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> access$100
    void <init>(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl:
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    void <init>() -> <init>
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    void <init>() -> <init>
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    void <init>() -> <init>
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    void <init>() -> <init>
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    int SELECTION_MODE_NONE -> SELECTION_MODE_NONE
    int SELECTION_MODE_SINGLE -> SELECTION_MODE_SINGLE
    int SELECTION_MODE_MULTIPLE -> SELECTION_MODE_MULTIPLE
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    void <init>(java.lang.Object) -> <init>
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    boolean isHierarchical() -> isHierarchical
    void <init>(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    void <init>(java.lang.Object) -> <init>
    int getColumnIndex() -> getColumnIndex
    int getColumnSpan() -> getColumnSpan
    int getRowIndex() -> getRowIndex
    int getRowSpan() -> getRowSpan
    boolean isHeading() -> isHeading
    boolean isSelected() -> isSelected
    java.lang.Object access$300(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> access$300
    void <init>(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    int RANGE_TYPE_INT -> RANGE_TYPE_INT
    int RANGE_TYPE_FLOAT -> RANGE_TYPE_FLOAT
    int RANGE_TYPE_PERCENT -> RANGE_TYPE_PERCENT
    java.lang.Object mInfo -> mInfo
    void <init>(java.lang.Object) -> <init>
    float getCurrent() -> getCurrent
    float getMax() -> getMax
    float getMin() -> getMin
    int getType() -> getType
    void <init>(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21:
    void <init>() -> <init>
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo:
    void <init>() -> <init>
    boolean isSelected(java.lang.Object) -> isSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22:
    void <init>() -> <init>
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    void <init>() -> <init>
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void <init>() -> <init>
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void <init>() -> <init>
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    void <init>() -> <init>
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo:
    void <init>() -> <init>
    int getColumnCount(java.lang.Object) -> getColumnCount
    int getRowCount(java.lang.Object) -> getRowCount
    boolean isHierarchical(java.lang.Object) -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo:
    void <init>() -> <init>
    int getColumnIndex(java.lang.Object) -> getColumnIndex
    int getColumnSpan(java.lang.Object) -> getColumnSpan
    int getRowIndex(java.lang.Object) -> getRowIndex
    int getRowSpan(java.lang.Object) -> getRowSpan
    boolean isHeading(java.lang.Object) -> isHeading
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    void <init>() -> <init>
    float getCurrent(java.lang.Object) -> getCurrent
    float getMax(java.lang.Object) -> getMax
    float getMin(java.lang.Object) -> getMin
    int getType(java.lang.Object) -> getType
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    void <init>() -> <init>
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    void <init>() -> <init>
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    void <init>() -> <init>
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void <init>() -> <init>
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    void <init>() -> <init>
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    void <init>() -> <init>
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    void <init>() -> <init>
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void <init>() -> <init>
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.animation.FastOutLinearInInterpolator -> android.support.v4.view.animation.FastOutLinearInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.view.animation.FastOutSlowInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.v4.view.animation.LinearOutSlowInInterpolator -> android.support.v4.view.animation.LinearOutSlowInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.view.animation.LookupTableInterpolator:
    float[] mValues -> mValues
    float mStepSize -> mStepSize
    void <init>(float[]) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.PathInterpolatorCompat -> android.support.v4.view.animation.PathInterpolatorCompat:
    void <init>() -> <init>
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorCompatApi21 -> android.support.v4.view.animation.PathInterpolatorCompatApi21:
    void <init>() -> <init>
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorCompatBase -> android.support.v4.view.animation.PathInterpolatorCompatBase:
    void <init>() -> <init>
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorDonut -> android.support.v4.view.animation.PathInterpolatorDonut:
    float PRECISION -> PRECISION
    float[] mX -> mX
    float[] mY -> mY
    void <init>(android.graphics.Path) -> <init>
    void <init>(float,float) -> <init>
    void <init>(float,float,float,float) -> <init>
    float getInterpolation(float) -> getInterpolation
    android.graphics.Path createQuad(float,float) -> createQuad
    android.graphics.Path createCubic(float,float,float,float) -> createCubic
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    void <init>(android.view.View) -> <init>
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
    void <clinit>() -> <clinit>
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void <init>() -> <init>
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void <init>(android.support.v4.widget.AutoScrollHelper) -> <init>
    void run() -> run
    void <init>(android.support.v4.widget.AutoScrollHelper,android.support.v4.widget.AutoScrollHelper$1) -> <init>
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    int KEY_SHADOW_COLOR -> KEY_SHADOW_COLOR
    int FILL_SHADOW_COLOR -> FILL_SHADOW_COLOR
    float X_OFFSET -> X_OFFSET
    float Y_OFFSET -> Y_OFFSET
    float SHADOW_RADIUS -> SHADOW_RADIUS
    int SHADOW_ELEVATION -> SHADOW_ELEVATION
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    void <init>(android.content.Context,int,float) -> <init>
    boolean elevationSupported() -> elevationSupported
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColorRes(int) -> setBackgroundColorRes
    void setBackgroundColor(int) -> setBackgroundColor
    int access$002(android.support.v4.widget.CircleImageView,int) -> access$002
    int access$000(android.support.v4.widget.CircleImageView) -> access$000
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    android.graphics.Paint mShadowPaint -> mShadowPaint
    int mCircleDiameter -> mCircleDiameter
    android.support.v4.widget.CircleImageView this$0 -> this$0
    void <init>(android.support.v4.widget.CircleImageView,int,int) -> <init>
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void <init>(android.support.v4.widget.ContentLoadingProgressBar) -> <init>
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void <init>(android.support.v4.widget.ContentLoadingProgressBar) -> <init>
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void <init>(android.content.Context,android.database.Cursor) -> <init>
    void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v4.widget.CursorAdapter,android.support.v4.widget.CursorAdapter$1) -> <init>
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    void <init>(android.support.v4.widget.CursorFilter$CursorFilterClient) -> <init>
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    boolean CAN_HIDE_DESCENDANTS -> CAN_HIDE_DESCENDANTS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    java.lang.Object mLastInsets -> mLastInsets
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> IMPL
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    int[] access$100() -> access$100
    boolean access$200() -> access$200
    android.view.View access$300(android.support.v4.widget.DrawerLayout) -> access$300
    boolean access$400(android.view.View) -> access$400
    void <clinit>() -> <clinit>
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21:
    void <init>() -> <init>
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase:
    void <init>() -> <init>
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,int) -> <init>
    void <init>(android.support.v4.widget.DrawerLayout$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void <init>() -> <init>
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout,int) -> <init>
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void <init>(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> <init>
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.DrawerLayoutCompatApi21:
    int[] THEME_ATTRS -> THEME_ATTRS
    void <init>() -> <init>
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
    void <clinit>() -> <clinit>
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener:
    void <init>() -> <init>
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.DrawerLayoutImpl:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void <init>(android.content.Context) -> <init>
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onPull(float,float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
    void <clinit>() -> <clinit>
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    void <init>() -> <init>
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    void <init>() -> <init>
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl:
    void <init>() -> <init>
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    void <init>() -> <init>
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatLollipop -> android.support.v4.widget.EdgeEffectCompatLollipop:
    void <init>() -> <init>
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    void <init>(android.view.View) -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
    void <clinit>() -> <clinit>
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    void <init>(android.support.v4.widget.ExploreByTouchHelper) -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    void <init>(android.support.v4.widget.ExploreByTouchHelper,android.support.v4.widget.ExploreByTouchHelper$1) -> <init>
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
    void <clinit>() -> <clinit>
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void <init>(android.widget.ListView) -> <init>
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.MaterialProgressDrawable:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> MATERIAL_INTERPOLATOR
    float FULL_ROTATION -> FULL_ROTATION
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    float CENTER_RADIUS -> CENTER_RADIUS
    float STROKE_WIDTH -> STROKE_WIDTH
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float CENTER_RADIUS_LARGE -> CENTER_RADIUS_LARGE
    float STROKE_WIDTH_LARGE -> STROKE_WIDTH_LARGE
    int[] COLORS -> COLORS
    float COLOR_START_DELAY_OFFSET -> COLOR_START_DELAY_OFFSET
    float END_TRIM_START_DELAY_OFFSET -> END_TRIM_START_DELAY_OFFSET
    float START_TRIM_DURATION_OFFSET -> START_TRIM_DURATION_OFFSET
    int ANIMATION_DURATION -> ANIMATION_DURATION
    float NUM_POINTS -> NUM_POINTS
    java.util.ArrayList mAnimators -> mAnimators
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> mRing
    float mRotation -> mRotation
    int ARROW_WIDTH -> ARROW_WIDTH
    int ARROW_HEIGHT -> ARROW_HEIGHT
    float ARROW_OFFSET_ANGLE -> ARROW_OFFSET_ANGLE
    int ARROW_WIDTH_LARGE -> ARROW_WIDTH_LARGE
    int ARROW_HEIGHT_LARGE -> ARROW_HEIGHT_LARGE
    float MAX_PROGRESS_ARC -> MAX_PROGRESS_ARC
    android.content.res.Resources mResources -> mResources
    android.view.View mParent -> mParent
    android.view.animation.Animation mAnimation -> mAnimation
    float mRotationCount -> mRotationCount
    double mWidth -> mWidth
    double mHeight -> mHeight
    boolean mFinishing -> mFinishing
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    void <init>(android.content.Context,android.view.View) -> <init>
    void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    void updateSizes(int) -> updateSizes
    void showArrow(boolean) -> showArrow
    void setArrowScale(float) -> setArrowScale
    void setStartEndTrim(float,float) -> setStartEndTrim
    void setProgressRotation(float) -> setProgressRotation
    void setBackgroundColor(int) -> setBackgroundColor
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    float getMinProgressArc(android.support.v4.widget.MaterialProgressDrawable$Ring) -> getMinProgressArc
    int evaluateColorChange(float,int,int) -> evaluateColorChange
    void updateRingColor(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> updateRingColor
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> applyFinishTranslation
    void setupAnimators() -> setupAnimators
    void access$000(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$000
    float access$100(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$100
    void access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$200
    android.view.animation.Interpolator access$300() -> access$300
    float access$400(android.support.v4.widget.MaterialProgressDrawable) -> access$400
    float access$402(android.support.v4.widget.MaterialProgressDrawable,float) -> access$402
    void <clinit>() -> <clinit>
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.MaterialProgressDrawable$1:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void <init>(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.MaterialProgressDrawable$2:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void <init>(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.MaterialProgressDrawable$3:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void <init>(android.support.v4.widget.MaterialProgressDrawable) -> <init>
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.MaterialProgressDrawable$Ring:
    android.graphics.RectF mTempBounds -> mTempBounds
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    float mStartTrim -> mStartTrim
    float mEndTrim -> mEndTrim
    float mRotation -> mRotation
    float mStrokeWidth -> mStrokeWidth
    float mStrokeInset -> mStrokeInset
    int[] mColors -> mColors
    int mColorIndex -> mColorIndex
    float mStartingStartTrim -> mStartingStartTrim
    float mStartingEndTrim -> mStartingEndTrim
    float mStartingRotation -> mStartingRotation
    boolean mShowArrow -> mShowArrow
    android.graphics.Path mArrow -> mArrow
    float mArrowScale -> mArrowScale
    double mRingCenterRadius -> mRingCenterRadius
    int mArrowWidth -> mArrowWidth
    int mArrowHeight -> mArrowHeight
    int mAlpha -> mAlpha
    android.graphics.Paint mCirclePaint -> mCirclePaint
    int mBackgroundColor -> mBackgroundColor
    int mCurrentColor -> mCurrentColor
    void <init>(android.graphics.drawable.Drawable$Callback) -> <init>
    void setBackgroundColor(int) -> setBackgroundColor
    void setArrowDimensions(float,float) -> setArrowDimensions
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    void setColors(int[]) -> setColors
    void setColor(int) -> setColor
    void setColorIndex(int) -> setColorIndex
    int getNextColor() -> getNextColor
    int getNextColorIndex() -> getNextColorIndex
    void goToNextColor() -> goToNextColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStartTrim(float) -> setStartTrim
    float getStartTrim() -> getStartTrim
    float getStartingStartTrim() -> getStartingStartTrim
    float getStartingEndTrim() -> getStartingEndTrim
    int getStartingColor() -> getStartingColor
    void setEndTrim(float) -> setEndTrim
    float getEndTrim() -> getEndTrim
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setInsets(int,int) -> setInsets
    float getInsets() -> getInsets
    void setCenterRadius(double) -> setCenterRadius
    double getCenterRadius() -> getCenterRadius
    void setShowArrow(boolean) -> setShowArrow
    void setArrowScale(float) -> setArrowScale
    float getStartingRotation() -> getStartingRotation
    void storeOriginals() -> storeOriginals
    void resetOriginals() -> resetOriginals
    void invalidateSelf() -> invalidateSelf
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    int ANIMATED_SCROLL_GAP -> ANIMATED_SCROLL_GAP
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    java.lang.String TAG -> TAG
    long mLastScroll -> mLastScroll
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> mEdgeGlowTop
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> mEdgeGlowBottom
    int mLastMotionY -> mLastMotionY
    boolean mIsLayoutDirty -> mIsLayoutDirty
    boolean mIsLaidOut -> mIsLaidOut
    android.view.View mChildToScrollTo -> mChildToScrollTo
    boolean mIsBeingDragged -> mIsBeingDragged
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mFillViewport -> mFillViewport
    boolean mSmoothScrollingEnabled -> mSmoothScrollingEnabled
    int mTouchSlop -> mTouchSlop
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mActivePointerId -> mActivePointerId
    int[] mScrollOffset -> mScrollOffset
    int[] mScrollConsumed -> mScrollConsumed
    int mNestedYOffset -> mNestedYOffset
    int INVALID_POINTER -> INVALID_POINTER
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> mSavedState
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> ACCESSIBILITY_DELEGATE
    int[] SCROLLVIEW_STYLEABLE -> SCROLLVIEW_STYLEABLE
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> mChildHelper
    float mVerticalScrollFactor -> mVerticalScrollFactor
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void initScrollView() -> initScrollView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean canScroll() -> canScroll
    boolean isFillViewport() -> isFillViewport
    void setFillViewport(boolean) -> setFillViewport
    boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean inChild(int,int) -> inChild
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    void recycleVelocityTracker() -> recycleVelocityTracker
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    boolean pageScroll(int) -> pageScroll
    boolean fullScroll(int) -> fullScroll
    boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    boolean arrowScroll(int) -> arrowScroll
    boolean isOffScreen(android.view.View) -> isOffScreen
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    void doScrollY(int) -> doScrollY
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollTo(int,int) -> smoothScrollTo
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> scrollToChild
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    void fling(int) -> fling
    void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    void endDrag() -> endDrag
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> ensureGlows
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> clamp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int access$000(android.support.v4.widget.NestedScrollView) -> access$000
    void <clinit>() -> <clinit>
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$AccessibilityDelegate:
    void <init>() -> <init>
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    int scrollPosition -> scrollPosition
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
    void <clinit>() -> <clinit>
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> IMPL
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
    void <clinit>() -> <clinit>
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.PopupWindowCompatKitKat:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    void <init>(int,android.content.Context,android.view.animation.Interpolator) -> <init>
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    void <init>() -> <init>
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    void <init>() -> <init>
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    void <init>() -> <init>
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    void <init>() -> <init>
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    void <init>() -> <init>
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    void <init>(android.content.Context) -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
    void <clinit>() -> <clinit>
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    void <init>() -> <init>
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    void <init>() -> <init>
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    void <init>() -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    void <init>(android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> <init>
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    void <init>(android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> <init>
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    void <init>() -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    void <init>() -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    void <init>() -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    void <init>(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> <init>
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    void <init>(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> <init>
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    void <init>() -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void <init>(android.content.Context) -> <init>
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
    void <clinit>() -> <clinit>
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> <init>
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout) -> <init>
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    void <init>(android.support.v4.widget.SlidingPaneLayout,android.support.v4.widget.SlidingPaneLayout$1) -> <init>
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.support.v4.widget.SlidingPaneLayout$LayoutParams) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,android.support.v4.widget.SlidingPaneLayout$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void <init>() -> <init>
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> getDefaultSize2
    void onMeasure(int,int) -> onMeasure
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void <init>(android.view.View) -> <init>
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
    void <clinit>() -> <clinit>
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_ALPHA -> MAX_ALPHA
    int STARTING_PROGRESS_ALPHA -> STARTING_PROGRESS_ALPHA
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    int INVALID_POINTER -> INVALID_POINTER
    float DRAG_RATE -> DRAG_RATE
    float MAX_PROGRESS_ANGLE -> MAX_PROGRESS_ANGLE
    int SCALE_DOWN_DURATION -> SCALE_DOWN_DURATION
    int ALPHA_ANIMATION_DURATION -> ALPHA_ANIMATION_DURATION
    int ANIMATE_TO_TRIGGER_DURATION -> ANIMATE_TO_TRIGGER_DURATION
    int ANIMATE_TO_START_DURATION -> ANIMATE_TO_START_DURATION
    int CIRCLE_BG_LIGHT -> CIRCLE_BG_LIGHT
    int DEFAULT_CIRCLE_TARGET -> DEFAULT_CIRCLE_TARGET
    android.view.View mTarget -> mTarget
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mTotalDragDistance -> mTotalDragDistance
    int mMediumAnimationDuration -> mMediumAnimationDuration
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mOriginalOffsetCalculated -> mOriginalOffsetCalculated
    float mInitialMotionY -> mInitialMotionY
    float mInitialDownY -> mInitialDownY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mScale -> mScale
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mCircleViewIndex -> mCircleViewIndex
    int mFrom -> mFrom
    float mStartingScale -> mStartingScale
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.MaterialProgressDrawable mProgress -> mProgress
    android.view.animation.Animation mScaleAnimation -> mScaleAnimation
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    float mSpinnerFinalOffset -> mSpinnerFinalOffset
    boolean mNotify -> mNotify
    int mCircleWidth -> mCircleWidth
    int mCircleHeight -> mCircleHeight
    boolean mUsingCustomStart -> mUsingCustomStart
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> createProgressView
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> setRefreshing
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    int getProgressCircleDiameter() -> getProgressCircleDiameter
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> getMotionEventY
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void moveToStart(float) -> moveToStart
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> access$300
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> access$500
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> access$600
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> access$700
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> access$900
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> access$802
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> access$1000
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> access$1100
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> access$1300
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
    void <clinit>() -> <clinit>
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    int val$startingAlpha -> val$startingAlpha
    int val$endingAlpha -> val$endingAlpha
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout,int,int) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.TextViewCompat:
    android.support.v4.widget.TextViewCompat$TextViewCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void <clinit>() -> <clinit>
android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl -> android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$TextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompatJbMr1 -> android.support.v4.widget.TextViewCompatJbMr1:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompatJbMr2 -> android.support.v4.widget.TextViewCompatJbMr2:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> <init>
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
    void <clinit>() -> <clinit>
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void <init>(android.support.v4.widget.ViewDragHelper) -> <init>
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void <init>() -> <init>
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.squareup.wire.BuilderAdapter -> com.squareup.wire.BuilderAdapter:
    int SUFFIX_LENGTH -> SUFFIX_LENGTH
    java.util.Comparator ORDER_BY_FIELD_NAME -> ORDER_BY_FIELD_NAME
    java.util.List requiredFields -> requiredFields
    void <init>(java.lang.Class) -> <init>
    void checkRequiredFields(com.squareup.wire.Message$Builder) -> checkRequiredFields
    void <clinit>() -> <clinit>
com.squareup.wire.BuilderAdapter$1 -> com.squareup.wire.BuilderAdapter$1:
    void <init>() -> <init>
    int compare(java.lang.reflect.Field,java.lang.reflect.Field) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.EnumAdapter -> com.squareup.wire.EnumAdapter:
    java.util.Comparator COMPARATOR -> COMPARATOR
    java.lang.Class type -> type
    int[] values -> values
    com.squareup.wire.ProtoEnum[] constants -> constants
    boolean isDense -> isDense
    void <init>(java.lang.Class) -> <init>
    int toInt(com.squareup.wire.ProtoEnum) -> toInt
    com.squareup.wire.ProtoEnum fromInt(int) -> fromInt
    void <clinit>() -> <clinit>
com.squareup.wire.EnumAdapter$1 -> com.squareup.wire.EnumAdapter$1:
    void <init>() -> <init>
    int compare(com.squareup.wire.ProtoEnum,com.squareup.wire.ProtoEnum) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.ExtendableMessage -> com.squareup.wire.ExtendableMessage:
    long serialVersionUID -> serialVersionUID
    com.squareup.wire.ExtensionMap extensionMap -> extensionMap
    void <init>() -> <init>
    void setBuilder(com.squareup.wire.ExtendableMessage$ExtendableBuilder) -> setBuilder
    java.util.List getExtensions() -> getExtensions
    java.lang.Object getExtension(com.squareup.wire.Extension) -> getExtension
    boolean extensionsEqual(com.squareup.wire.ExtendableMessage) -> extensionsEqual
    int extensionsHashCode() -> extensionsHashCode
    java.lang.String extensionsToString() -> extensionsToString
com.squareup.wire.ExtendableMessage$ExtendableBuilder -> com.squareup.wire.ExtendableMessage$ExtendableBuilder:
    com.squareup.wire.ExtensionMap extensionMap -> extensionMap
    void <init>() -> <init>
    void <init>(com.squareup.wire.ExtendableMessage) -> <init>
    java.lang.Object getExtension(com.squareup.wire.Extension) -> getExtension
    com.squareup.wire.ExtendableMessage$ExtendableBuilder setExtension(com.squareup.wire.Extension,java.lang.Object) -> setExtension
com.squareup.wire.Extension -> com.squareup.wire.Extension:
    java.lang.Class extendedType -> extendedType
    java.lang.Class messageType -> messageType
    java.lang.Class enumType -> enumType
    java.lang.String name -> name
    int tag -> tag
    com.squareup.wire.Message$Datatype datatype -> datatype
    com.squareup.wire.Message$Label label -> label
    com.squareup.wire.Extension$Builder int32Extending(java.lang.Class) -> int32Extending
    com.squareup.wire.Extension$Builder sint32Extending(java.lang.Class) -> sint32Extending
    com.squareup.wire.Extension$Builder uint32Extending(java.lang.Class) -> uint32Extending
    com.squareup.wire.Extension$Builder fixed32Extending(java.lang.Class) -> fixed32Extending
    com.squareup.wire.Extension$Builder sfixed32Extending(java.lang.Class) -> sfixed32Extending
    com.squareup.wire.Extension$Builder int64Extending(java.lang.Class) -> int64Extending
    com.squareup.wire.Extension$Builder sint64Extending(java.lang.Class) -> sint64Extending
    com.squareup.wire.Extension$Builder uint64Extending(java.lang.Class) -> uint64Extending
    com.squareup.wire.Extension$Builder fixed64Extending(java.lang.Class) -> fixed64Extending
    com.squareup.wire.Extension$Builder sfixed64Extending(java.lang.Class) -> sfixed64Extending
    com.squareup.wire.Extension$Builder boolExtending(java.lang.Class) -> boolExtending
    com.squareup.wire.Extension$Builder stringExtending(java.lang.Class) -> stringExtending
    com.squareup.wire.Extension$Builder bytesExtending(java.lang.Class) -> bytesExtending
    com.squareup.wire.Extension$Builder floatExtending(java.lang.Class) -> floatExtending
    com.squareup.wire.Extension$Builder doubleExtending(java.lang.Class) -> doubleExtending
    com.squareup.wire.Extension$Builder enumExtending(java.lang.Class,java.lang.Class) -> enumExtending
    com.squareup.wire.Extension$Builder messageExtending(java.lang.Class,java.lang.Class) -> messageExtending
    void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,int,com.squareup.wire.Message$Label,com.squareup.wire.Message$Datatype) -> <init>
    int compareTo(com.squareup.wire.Extension) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Class getExtendedType() -> getExtendedType
    java.lang.Class getMessageType() -> getMessageType
    java.lang.Class getEnumType() -> getEnumType
    java.lang.String getName() -> getName
    int getTag() -> getTag
    com.squareup.wire.Message$Datatype getDatatype() -> getDatatype
    com.squareup.wire.Message$Label getLabel() -> getLabel
    int compareTo(java.lang.Object) -> compareTo
    void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,int,com.squareup.wire.Message$Label,com.squareup.wire.Message$Datatype,com.squareup.wire.Extension$1) -> <init>
com.squareup.wire.Extension$1 -> com.squareup.wire.Extension$1:
com.squareup.wire.Extension$Builder -> com.squareup.wire.Extension$Builder:
    java.lang.Class extendedType -> extendedType
    java.lang.Class messageType -> messageType
    java.lang.Class enumType -> enumType
    com.squareup.wire.Message$Datatype datatype -> datatype
    java.lang.String name -> name
    int tag -> tag
    com.squareup.wire.Message$Label label -> label
    void <init>(java.lang.Class,com.squareup.wire.Message$Datatype) -> <init>
    void <init>(java.lang.Class,java.lang.Class,java.lang.Class,com.squareup.wire.Message$Datatype) -> <init>
    com.squareup.wire.Extension$Builder setName(java.lang.String) -> setName
    com.squareup.wire.Extension$Builder setTag(int) -> setTag
    com.squareup.wire.Extension buildOptional() -> buildOptional
    com.squareup.wire.Extension buildRequired() -> buildRequired
    com.squareup.wire.Extension buildRepeated() -> buildRepeated
    com.squareup.wire.Extension buildPacked() -> buildPacked
    void validate() -> validate
    void <init>(java.lang.Class,com.squareup.wire.Message$Datatype,com.squareup.wire.Extension$1) -> <init>
    void <init>(java.lang.Class,java.lang.Class,java.lang.Class,com.squareup.wire.Message$Datatype,com.squareup.wire.Extension$1) -> <init>
com.squareup.wire.ExtensionMap -> com.squareup.wire.ExtensionMap:
    int INITIAL_SIZE -> INITIAL_SIZE
    java.lang.Object[] data -> data
    int size -> size
    void <init>(com.squareup.wire.Extension,java.lang.Object) -> <init>
    void <init>(com.squareup.wire.ExtensionMap) -> <init>
    int size() -> size
    com.squareup.wire.Extension getExtension(int) -> getExtension
    java.lang.Object getExtensionValue(int) -> getExtensionValue
    java.util.List getExtensions() -> getExtensions
    java.lang.Object get(com.squareup.wire.Extension) -> get
    void put(com.squareup.wire.Extension,java.lang.Object) -> put
    void insert(com.squareup.wire.Extension,java.lang.Object,int) -> insert
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.squareup.wire.ExtensionRegistry -> com.squareup.wire.ExtensionRegistry:
    java.util.Map extensionsByTag -> extensionsByTag
    java.util.Map extensionsByName -> extensionsByName
    void <init>() -> <init>
    void add(com.squareup.wire.Extension) -> add
    com.squareup.wire.Extension getExtension(java.lang.Class,int) -> getExtension
    com.squareup.wire.Extension getExtension(java.lang.Class,java.lang.String) -> getExtension
com.squareup.wire.Message -> com.squareup.wire.Message:
    long serialVersionUID -> serialVersionUID
    com.squareup.wire.Wire WIRE -> WIRE
    com.squareup.wire.UnknownFieldMap unknownFields -> unknownFields
    boolean haveCachedSerializedSize -> haveCachedSerializedSize
    int cachedSerializedSize -> cachedSerializedSize
    int hashCode -> hashCode
    void <init>() -> <init>
    void setBuilder(com.squareup.wire.Message$Builder) -> setBuilder
    java.util.Collection unknownFields() -> unknownFields
    java.util.List copyOf(java.util.List) -> copyOf
    java.util.List immutableCopyOf(java.util.List) -> immutableCopyOf
    int intFromEnum(java.lang.Enum) -> intFromEnum
    java.lang.Enum enumFromInt(java.lang.Class,int) -> enumFromInt
    byte[] toByteArray() -> toByteArray
    void writeTo(byte[]) -> writeTo
    void writeTo(byte[],int,int) -> writeTo
    void write(com.squareup.wire.WireOutput) -> write
    void writeUnknownFieldMap(com.squareup.wire.WireOutput) -> writeUnknownFieldMap
    int getSerializedSize() -> getSerializedSize
    int getUnknownFieldsSerializedSize() -> getUnknownFieldsSerializedSize
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equals(java.util.List,java.util.List) -> equals
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    com.squareup.wire.UnknownFieldMap access$000(com.squareup.wire.Message) -> access$000
    com.squareup.wire.Wire access$100() -> access$100
    void <clinit>() -> <clinit>
com.squareup.wire.Message$1 -> com.squareup.wire.Message$1:
    int[] $SwitchMap$com$squareup$wire$Message$Datatype -> $SwitchMap$com$squareup$wire$Message$Datatype
    void <clinit>() -> <clinit>
com.squareup.wire.Message$Builder -> com.squareup.wire.Message$Builder:
    com.squareup.wire.UnknownFieldMap unknownFieldMap -> unknownFieldMap
    void <init>() -> <init>
    void <init>(com.squareup.wire.Message) -> <init>
    void addVarint(int,long) -> addVarint
    void addFixed32(int,int) -> addFixed32
    void addFixed64(int,long) -> addFixed64
    void addLengthDelimited(int,okio.ByteString) -> addLengthDelimited
    com.squareup.wire.UnknownFieldMap ensureUnknownFieldMap() -> ensureUnknownFieldMap
    void checkRequiredFields() -> checkRequiredFields
    java.util.List checkForNulls(java.util.List) -> checkForNulls
    com.squareup.wire.Message build() -> build
com.squareup.wire.Message$Datatype -> com.squareup.wire.Message$Datatype:
    com.squareup.wire.Message$Datatype INT32 -> INT32
    com.squareup.wire.Message$Datatype INT64 -> INT64
    com.squareup.wire.Message$Datatype UINT32 -> UINT32
    com.squareup.wire.Message$Datatype UINT64 -> UINT64
    com.squareup.wire.Message$Datatype SINT32 -> SINT32
    com.squareup.wire.Message$Datatype SINT64 -> SINT64
    com.squareup.wire.Message$Datatype BOOL -> BOOL
    com.squareup.wire.Message$Datatype ENUM -> ENUM
    com.squareup.wire.Message$Datatype STRING -> STRING
    com.squareup.wire.Message$Datatype BYTES -> BYTES
    com.squareup.wire.Message$Datatype MESSAGE -> MESSAGE
    com.squareup.wire.Message$Datatype FIXED32 -> FIXED32
    com.squareup.wire.Message$Datatype SFIXED32 -> SFIXED32
    com.squareup.wire.Message$Datatype FIXED64 -> FIXED64
    com.squareup.wire.Message$Datatype SFIXED64 -> SFIXED64
    com.squareup.wire.Message$Datatype FLOAT -> FLOAT
    com.squareup.wire.Message$Datatype DOUBLE -> DOUBLE
    java.util.Comparator ORDER_BY_NAME -> ORDER_BY_NAME
    java.util.Map TYPES_BY_NAME -> TYPES_BY_NAME
    int value -> value
    com.squareup.wire.Message$Datatype[] $VALUES -> $VALUES
    com.squareup.wire.Message$Datatype[] values() -> values
    com.squareup.wire.Message$Datatype valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int value() -> value
    com.squareup.wire.WireType wireType() -> wireType
    com.squareup.wire.Message$Datatype of(java.lang.String) -> of
    void <clinit>() -> <clinit>
com.squareup.wire.Message$Datatype$1 -> com.squareup.wire.Message$Datatype$1:
    void <init>() -> <init>
    int compare(com.squareup.wire.Message$Datatype,com.squareup.wire.Message$Datatype) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.Message$Label -> com.squareup.wire.Message$Label:
    com.squareup.wire.Message$Label REQUIRED -> REQUIRED
    com.squareup.wire.Message$Label OPTIONAL -> OPTIONAL
    com.squareup.wire.Message$Label REPEATED -> REPEATED
    com.squareup.wire.Message$Label PACKED -> PACKED
    java.util.Comparator ORDER_BY_NAME -> ORDER_BY_NAME
    int value -> value
    com.squareup.wire.Message$Label[] $VALUES -> $VALUES
    com.squareup.wire.Message$Label[] values() -> values
    com.squareup.wire.Message$Label valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int value() -> value
    boolean isRepeated() -> isRepeated
    boolean isPacked() -> isPacked
    void <clinit>() -> <clinit>
com.squareup.wire.Message$Label$1 -> com.squareup.wire.Message$Label$1:
    void <init>() -> <init>
    int compare(com.squareup.wire.Message$Label,com.squareup.wire.Message$Label) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.MessageAdapter -> com.squareup.wire.MessageAdapter:
    java.lang.String FULL_BLOCK -> FULL_BLOCK
    java.lang.String REDACTED -> REDACTED
    com.squareup.wire.Wire wire -> wire
    java.lang.Class messageType -> messageType
    java.lang.Class builderType -> builderType
    java.util.Map tagMap -> tagMap
    com.squareup.wire.TagMap fieldInfoMap -> fieldInfoMap
    com.squareup.wire.Message$Builder newBuilder() -> newBuilder
    java.util.Collection getFields() -> getFields
    com.squareup.wire.MessageAdapter$FieldInfo getField(java.lang.String) -> getField
    java.lang.Object getFieldValue(com.squareup.wire.Message,com.squareup.wire.MessageAdapter$FieldInfo) -> getFieldValue
    void setBuilderField(com.squareup.wire.Message$Builder,int,java.lang.Object) -> setBuilderField
    void <init>(com.squareup.wire.Wire,java.lang.Class) -> <init>
    java.lang.Class getBuilderType(java.lang.Class) -> getBuilderType
    java.lang.reflect.Field getBuilderField(java.lang.String) -> getBuilderField
    java.lang.Class getMessageType(java.lang.reflect.Field) -> getMessageType
    java.lang.Class getEnumType(java.lang.reflect.Field) -> getEnumType
    int getSerializedSize(com.squareup.wire.Message) -> getSerializedSize
    int getExtensionsSerializedSize(com.squareup.wire.ExtensionMap) -> getExtensionsSerializedSize
    int getRepeatedSize(java.util.List,int,com.squareup.wire.Message$Datatype) -> getRepeatedSize
    int getPackedSize(java.util.List,int,com.squareup.wire.Message$Datatype) -> getPackedSize
    void write(com.squareup.wire.Message,com.squareup.wire.WireOutput) -> write
    void writeExtensions(com.squareup.wire.WireOutput,com.squareup.wire.ExtensionMap) -> writeExtensions
    void writeRepeated(com.squareup.wire.WireOutput,java.util.List,int,com.squareup.wire.Message$Datatype) -> writeRepeated
    void writePacked(com.squareup.wire.WireOutput,java.util.List,int,com.squareup.wire.Message$Datatype) -> writePacked
    byte[] toByteArray(com.squareup.wire.Message) -> toByteArray
    java.lang.String toString(com.squareup.wire.Message) -> toString
    int getSerializedSize(int,java.lang.Object,com.squareup.wire.Message$Datatype) -> getSerializedSize
    int getSerializedSizeNoTag(java.lang.Object,com.squareup.wire.Message$Datatype) -> getSerializedSizeNoTag
    int utf8Length(java.lang.String) -> utf8Length
    int getEnumSize(com.squareup.wire.ProtoEnum) -> getEnumSize
    int getMessageSize(com.squareup.wire.Message) -> getMessageSize
    void writeValue(com.squareup.wire.WireOutput,int,java.lang.Object,com.squareup.wire.Message$Datatype) -> writeValue
    void writeValueNoTag(com.squareup.wire.WireOutput,java.lang.Object,com.squareup.wire.Message$Datatype) -> writeValueNoTag
    void writeMessage(com.squareup.wire.Message,com.squareup.wire.WireOutput) -> writeMessage
    void writeEnum(com.squareup.wire.ProtoEnum,com.squareup.wire.WireOutput) -> writeEnum
    com.squareup.wire.Message read(com.squareup.wire.WireInput) -> read
    java.lang.Object readValue(com.squareup.wire.WireInput,int,com.squareup.wire.Message$Datatype) -> readValue
    com.squareup.wire.Message readMessage(com.squareup.wire.WireInput,int) -> readMessage
    com.squareup.wire.MessageAdapter getMessageAdapter(int) -> getMessageAdapter
    com.squareup.wire.EnumAdapter getEnumAdapter(int) -> getEnumAdapter
    java.lang.Class getMessageClass(int) -> getMessageClass
    void readUnknownField(com.squareup.wire.Message$Builder,com.squareup.wire.WireInput,int,com.squareup.wire.WireType) -> readUnknownField
    com.squareup.wire.Extension getExtension(int) -> getExtension
    com.squareup.wire.Extension getExtension(java.lang.String) -> getExtension
    void setExtension(com.squareup.wire.ExtendableMessage$ExtendableBuilder,com.squareup.wire.Extension,java.lang.Object) -> setExtension
    java.lang.Class getEnumClass(int) -> getEnumClass
com.squareup.wire.MessageAdapter$1 -> com.squareup.wire.MessageAdapter$1:
    int[] $SwitchMap$com$squareup$wire$Message$Datatype -> $SwitchMap$com$squareup$wire$Message$Datatype
    int[] $SwitchMap$com$squareup$wire$WireType -> $SwitchMap$com$squareup$wire$WireType
    void <clinit>() -> <clinit>
com.squareup.wire.MessageAdapter$FieldInfo -> com.squareup.wire.MessageAdapter$FieldInfo:
    int tag -> tag
    java.lang.String name -> name
    com.squareup.wire.Message$Datatype datatype -> datatype
    com.squareup.wire.Message$Label label -> label
    java.lang.Class enumType -> enumType
    java.lang.Class messageType -> messageType
    boolean redacted -> redacted
    com.squareup.wire.MessageAdapter messageAdapter -> messageAdapter
    com.squareup.wire.EnumAdapter enumAdapter -> enumAdapter
    java.lang.reflect.Field messageField -> messageField
    java.lang.reflect.Field builderField -> builderField
    void <init>(int,java.lang.String,com.squareup.wire.Message$Datatype,com.squareup.wire.Message$Label,boolean,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Field) -> <init>
    java.lang.reflect.Field access$000(com.squareup.wire.MessageAdapter$FieldInfo) -> access$000
    java.lang.reflect.Field access$100(com.squareup.wire.MessageAdapter$FieldInfo) -> access$100
    void <init>(int,java.lang.String,com.squareup.wire.Message$Datatype,com.squareup.wire.Message$Label,boolean,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Field,com.squareup.wire.MessageAdapter$1) -> <init>
com.squareup.wire.MessageAdapter$ImmutableList -> com.squareup.wire.MessageAdapter$ImmutableList:
    java.util.List list -> list
    void <init>() -> <init>
    java.lang.Object clone() -> clone
    int size() -> size
    java.lang.Object get(int) -> get
    java.util.List access$400(com.squareup.wire.MessageAdapter$ImmutableList) -> access$400
com.squareup.wire.MessageAdapter$Storage -> com.squareup.wire.MessageAdapter$Storage:
    java.util.Map map -> map
    void <init>() -> <init>
    void add(int,java.lang.Object) -> add
    java.util.Set getTags() -> getTags
    java.util.List get(int) -> get
    void <init>(com.squareup.wire.MessageAdapter$1) -> <init>
com.squareup.wire.MessageSerializedForm -> com.squareup.wire.MessageSerializedForm:
    long serialVersionUID -> serialVersionUID
    byte[] bytes -> bytes
    java.lang.Class messageClass -> messageClass
    void <init>(com.squareup.wire.Message,java.lang.Class) -> <init>
    java.lang.Object readResolve() -> readResolve
com.squareup.wire.Preconditions -> com.squareup.wire.Preconditions:
    void <init>() -> <init>
    void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    void checkArgument(boolean,java.lang.String) -> checkArgument
com.squareup.wire.ProtoEnum -> com.squareup.wire.ProtoEnum:
    int getValue() -> getValue
com.squareup.wire.ProtoField -> com.squareup.wire.ProtoField:
    int tag() -> tag
    com.squareup.wire.Message$Datatype type() -> type
    com.squareup.wire.Message$Label label() -> label
    java.lang.Class messageType() -> messageType
    java.lang.Class enumType() -> enumType
    boolean deprecated() -> deprecated
    boolean redacted() -> redacted
com.squareup.wire.Redactor -> com.squareup.wire.Redactor:
    com.squareup.wire.Redactor NOOP_REDACTOR -> NOOP_REDACTOR
    java.util.Map redactors -> redactors
    java.lang.reflect.Constructor builderConstructor -> builderConstructor
    java.util.List redactedFields -> redactedFields
    java.util.List messageFields -> messageFields
    java.util.List messageRedactors -> messageRedactors
    void <init>(java.lang.reflect.Constructor,java.util.List,java.util.List,java.util.List) -> <init>
    com.squareup.wire.Redactor get(java.lang.Class) -> get
    com.squareup.wire.Message redact(com.squareup.wire.Message) -> redact
    void <clinit>() -> <clinit>
com.squareup.wire.Redactor$1 -> com.squareup.wire.Redactor$1:
    void <init>(java.lang.reflect.Constructor,java.util.List,java.util.List,java.util.List) -> <init>
    com.squareup.wire.Message redact(com.squareup.wire.Message) -> redact
com.squareup.wire.Redactor$FutureRedactor -> com.squareup.wire.Redactor$FutureRedactor:
    com.squareup.wire.Redactor delegate -> delegate
    void <init>() -> <init>
    void setDelegate(com.squareup.wire.Redactor) -> setDelegate
    com.squareup.wire.Message redact(com.squareup.wire.Message) -> redact
com.squareup.wire.TagMap -> com.squareup.wire.TagMap:
    int SIZE_THRESHOLD -> SIZE_THRESHOLD
    float RATIO_THRESHOLD -> RATIO_THRESHOLD
    java.util.Comparator COMPARATOR -> COMPARATOR
    java.util.List values -> values
    com.squareup.wire.TagMap of(java.util.Map) -> of
    boolean isCompact(int,int) -> isCompact
    int maxTag(java.util.Map) -> maxTag
    java.util.List sortedValues(java.util.Map) -> sortedValues
    void <init>(java.util.Map) -> <init>
    java.util.Collection values() -> values
    java.lang.Object get(int) -> get
    boolean containsKey(int) -> containsKey
    void <clinit>() -> <clinit>
com.squareup.wire.TagMap$1 -> com.squareup.wire.TagMap$1:
    void <init>() -> <init>
    int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.squareup.wire.TagMap$Compact -> com.squareup.wire.TagMap$Compact:
    java.lang.Object[] elementsByTag -> elementsByTag
    int maxTag -> maxTag
    com.squareup.wire.TagMap$Compact compactTagMapOf(java.util.Map,int) -> compactTagMapOf
    void <init>(java.util.Map,int) -> <init>
    java.lang.Object get(int) -> get
    boolean containsKey(int) -> containsKey
com.squareup.wire.TagMap$Sparse -> com.squareup.wire.TagMap$Sparse:
    java.util.Map map -> map
    com.squareup.wire.TagMap$Sparse sparseTagMapOf(java.util.Map) -> sparseTagMapOf
    void <init>(java.util.Map) -> <init>
    java.lang.Object get(int) -> get
    boolean containsKey(int) -> containsKey
com.squareup.wire.UnknownFieldMap -> com.squareup.wire.UnknownFieldMap:
    java.util.Map fieldMap -> fieldMap
    void <init>() -> <init>
    void <init>(com.squareup.wire.UnknownFieldMap) -> <init>
    void addVarint(int,java.lang.Long) -> addVarint
    void addFixed32(int,java.lang.Integer) -> addFixed32
    void addFixed64(int,java.lang.Long) -> addFixed64
    void addLengthDelimited(int,okio.ByteString) -> addLengthDelimited
    java.util.Map ensureFieldMap() -> ensureFieldMap
    void addElement(java.util.Map,int,java.lang.Object,com.squareup.wire.WireType) -> addElement
    int getSerializedSize() -> getSerializedSize
    void write(com.squareup.wire.WireOutput) -> write
com.squareup.wire.UnknownFieldMap$1 -> com.squareup.wire.UnknownFieldMap$1:
    int[] $SwitchMap$com$squareup$wire$WireType -> $SwitchMap$com$squareup$wire$WireType
    void <clinit>() -> <clinit>
com.squareup.wire.UnknownFieldMap$FieldValue -> com.squareup.wire.UnknownFieldMap$FieldValue:
    int tag -> tag
    com.squareup.wire.WireType wireType -> wireType
    void <init>(int,com.squareup.wire.WireType) -> <init>
    com.squareup.wire.UnknownFieldMap$VarintFieldValue varint(int,java.lang.Long) -> varint
    com.squareup.wire.UnknownFieldMap$Fixed32FieldValue fixed32(int,java.lang.Integer) -> fixed32
    com.squareup.wire.UnknownFieldMap$Fixed64FieldValue fixed64(int,java.lang.Long) -> fixed64
    com.squareup.wire.UnknownFieldMap$LengthDelimitedFieldValue lengthDelimited(int,okio.ByteString) -> lengthDelimited
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    int getTag() -> getTag
    com.squareup.wire.WireType getWireType() -> getWireType
    java.lang.Integer getAsInteger() -> getAsInteger
    java.lang.Long getAsLong() -> getAsLong
    okio.ByteString getAsBytes() -> getAsBytes
com.squareup.wire.UnknownFieldMap$Fixed32FieldValue -> com.squareup.wire.UnknownFieldMap$Fixed32FieldValue:
    java.lang.Integer value -> value
    void <init>(int,java.lang.Integer) -> <init>
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    java.lang.Integer getAsInteger() -> getAsInteger
com.squareup.wire.UnknownFieldMap$Fixed64FieldValue -> com.squareup.wire.UnknownFieldMap$Fixed64FieldValue:
    java.lang.Long value -> value
    void <init>(int,java.lang.Long) -> <init>
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    java.lang.Long getAsLong() -> getAsLong
com.squareup.wire.UnknownFieldMap$LengthDelimitedFieldValue -> com.squareup.wire.UnknownFieldMap$LengthDelimitedFieldValue:
    okio.ByteString value -> value
    void <init>(int,okio.ByteString) -> <init>
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    okio.ByteString getAsBytes() -> getAsBytes
com.squareup.wire.UnknownFieldMap$UnknownFieldType -> com.squareup.wire.UnknownFieldMap$UnknownFieldType:
    com.squareup.wire.UnknownFieldMap$UnknownFieldType VARINT -> VARINT
    com.squareup.wire.UnknownFieldMap$UnknownFieldType FIXED32 -> FIXED32
    com.squareup.wire.UnknownFieldMap$UnknownFieldType FIXED64 -> FIXED64
    com.squareup.wire.UnknownFieldMap$UnknownFieldType LENGTH_DELIMITED -> LENGTH_DELIMITED
    com.squareup.wire.UnknownFieldMap$UnknownFieldType[] $VALUES -> $VALUES
    com.squareup.wire.UnknownFieldMap$UnknownFieldType[] values() -> values
    com.squareup.wire.UnknownFieldMap$UnknownFieldType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    com.squareup.wire.UnknownFieldMap$UnknownFieldType of(java.lang.String) -> of
    void <clinit>() -> <clinit>
com.squareup.wire.UnknownFieldMap$VarintFieldValue -> com.squareup.wire.UnknownFieldMap$VarintFieldValue:
    java.lang.Long value -> value
    void <init>(int,java.lang.Long) -> <init>
    int getSerializedSize() -> getSerializedSize
    void write(int,com.squareup.wire.WireOutput) -> write
    java.lang.Long getAsLong() -> getAsLong
com.squareup.wire.Wire -> com.squareup.wire.Wire:
    java.util.Map messageAdapters -> messageAdapters
    java.util.Map builderAdapters -> builderAdapters
    java.util.Map enumAdapters -> enumAdapters
    com.squareup.wire.ExtensionRegistry registry -> registry
    void <init>(java.lang.Class[]) -> <init>
    void <init>(java.util.List) -> <init>
    com.squareup.wire.MessageAdapter messageAdapter(java.lang.Class) -> messageAdapter
    com.squareup.wire.BuilderAdapter builderAdapter(java.lang.Class) -> builderAdapter
    com.squareup.wire.EnumAdapter enumAdapter(java.lang.Class) -> enumAdapter
    com.squareup.wire.Message parseFrom(byte[],java.lang.Class) -> parseFrom
    com.squareup.wire.Message parseFrom(byte[],int,int,java.lang.Class) -> parseFrom
    com.squareup.wire.Message parseFrom(java.io.InputStream,java.lang.Class) -> parseFrom
    com.squareup.wire.Message parseFrom(okio.Source,java.lang.Class) -> parseFrom
    com.squareup.wire.Message parseFrom(com.squareup.wire.WireInput,java.lang.Class) -> parseFrom
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
com.squareup.wire.WireInput -> com.squareup.wire.WireInput:
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.lang.String ENCOUNTERED_A_NEGATIVE_SIZE -> ENCOUNTERED_A_NEGATIVE_SIZE
    java.lang.String INPUT_ENDED_UNEXPECTEDLY -> INPUT_ENDED_UNEXPECTEDLY
    java.lang.String PROTOCOL_MESSAGE_CONTAINED_AN_INVALID_TAG_ZERO -> PROTOCOL_MESSAGE_CONTAINED_AN_INVALID_TAG_ZERO
    java.lang.String PROTOCOL_MESSAGE_END_GROUP_TAG_DID_NOT_MATCH_EXPECTED_TAG -> PROTOCOL_MESSAGE_END_GROUP_TAG_DID_NOT_MATCH_EXPECTED_TAG
    java.lang.String ENCOUNTERED_A_MALFORMED_VARINT -> ENCOUNTERED_A_MALFORMED_VARINT
    okio.BufferedSource source -> source
    int pos -> pos
    int currentLimit -> currentLimit
    int RECURSION_LIMIT -> RECURSION_LIMIT
    int recursionDepth -> recursionDepth
    int lastTag -> lastTag
    com.squareup.wire.WireInput newInstance(byte[]) -> newInstance
    com.squareup.wire.WireInput newInstance(byte[],int,int) -> newInstance
    com.squareup.wire.WireInput newInstance(java.io.InputStream) -> newInstance
    com.squareup.wire.WireInput newInstance(okio.Source) -> newInstance
    int readTag() -> readTag
    void checkLastTagWas(int) -> checkLastTagWas
    java.lang.String readString() -> readString
    okio.ByteString readBytes() -> readBytes
    okio.ByteString readBytes(int) -> readBytes
    int readVarint32() -> readVarint32
    long readVarint64() -> readVarint64
    int readFixed32() -> readFixed32
    long readFixed64() -> readFixed64
    int decodeZigZag32(int) -> decodeZigZag32
    long decodeZigZag64(long) -> decodeZigZag64
    void <init>(okio.BufferedSource) -> <init>
    int pushLimit(int) -> pushLimit
    void popLimit(int) -> popLimit
    boolean isAtEnd() -> isAtEnd
    long getPosition() -> getPosition
    void skipGroup() -> skipGroup
    boolean skipField(int) -> skipField
    void skip(long) -> skip
    void <clinit>() -> <clinit>
com.squareup.wire.WireInput$1 -> com.squareup.wire.WireInput$1:
    int[] $SwitchMap$com$squareup$wire$WireType -> $SwitchMap$com$squareup$wire$WireType
    void <clinit>() -> <clinit>
com.squareup.wire.WireOutput -> com.squareup.wire.WireOutput:
    byte[] buffer -> buffer
    int limit -> limit
    int position -> position
    int int32Size(int) -> int32Size
    int int64Size(long) -> int64Size
    int tagSize(int,com.squareup.wire.WireType) -> tagSize
    int messageSize(int,int) -> messageSize
    int writeTag(int,com.squareup.wire.WireType,byte[],int) -> writeTag
    int writeVarint(long,byte[],int) -> writeVarint
    int messageHeaderSize(int,int) -> messageHeaderSize
    int writeMessageHeader(int,byte[],int,int) -> writeMessageHeader
    int makeTag(int,com.squareup.wire.WireType) -> makeTag
    void <init>(byte[],int,int) -> <init>
    com.squareup.wire.WireOutput newInstance(byte[]) -> newInstance
    com.squareup.wire.WireOutput newInstance(byte[],int,int) -> newInstance
    int varintTagSize(int) -> varintTagSize
    int varint32Size(int) -> varint32Size
    int varint64Size(long) -> varint64Size
    void writeRawByte(byte) -> writeRawByte
    void writeRawByte(int) -> writeRawByte
    void writeRawBytes(byte[]) -> writeRawBytes
    void writeRawBytes(byte[],int,int) -> writeRawBytes
    void writeTag(int,com.squareup.wire.WireType) -> writeTag
    void writeSignedVarint32(int) -> writeSignedVarint32
    void writeVarint32(int) -> writeVarint32
    void writeVarint64(long) -> writeVarint64
    void writeFixed32(int) -> writeFixed32
    void writeFixed64(long) -> writeFixed64
    int zigZag32(int) -> zigZag32
    long zigZag64(long) -> zigZag64
com.squareup.wire.WireType -> com.squareup.wire.WireType:
    com.squareup.wire.WireType VARINT -> VARINT
    com.squareup.wire.WireType FIXED64 -> FIXED64
    com.squareup.wire.WireType LENGTH_DELIMITED -> LENGTH_DELIMITED
    com.squareup.wire.WireType START_GROUP -> START_GROUP
    com.squareup.wire.WireType END_GROUP -> END_GROUP
    com.squareup.wire.WireType FIXED32 -> FIXED32
    int TAG_TYPE_MASK -> TAG_TYPE_MASK
    int FIXED_32_SIZE -> FIXED_32_SIZE
    int FIXED_64_SIZE -> FIXED_64_SIZE
    int TAG_TYPE_BITS -> TAG_TYPE_BITS
    int value -> value
    com.squareup.wire.WireType[] $VALUES -> $VALUES
    com.squareup.wire.WireType[] values() -> values
    com.squareup.wire.WireType valueOf(java.lang.String) -> valueOf
    com.squareup.wire.WireType valueOf(int) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int value() -> value
    void <clinit>() -> <clinit>
com.ta.utdid2.android.utils.AESUtils -> com.a.a.a.a.a:
    java.lang.String encrypt(java.lang.String,java.lang.String) -> a
    java.lang.String decrypt(java.lang.String,java.lang.String) -> b
    byte[] getRawKey(byte[]) -> b
    byte[] encrypt(byte[],byte[]) -> a
    byte[] decrypt(byte[],byte[]) -> b
    byte[] toByte(java.lang.String) -> a
    java.lang.String toHex(byte[]) -> a
    void appendHex(java.lang.StringBuffer,byte) -> a
com.ta.utdid2.android.utils.Base64 -> com.a.a.a.a.b:
    boolean $assertionsDisabled -> a
    byte[] decode(java.lang.String,int) -> a
    byte[] decode(byte[],int) -> a
    byte[] decode(byte[],int,int,int) -> a
    java.lang.String encodeToString(byte[],int) -> b
    byte[] encode(byte[],int) -> c
    byte[] encode(byte[],int,int,int) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.ta.utdid2.android.utils.Base64$a -> com.a.a.a.a.c:
    byte[] a -> a
    int b -> b
    void <init>() -> <init>
com.ta.utdid2.android.utils.Base64$b -> com.a.a.a.a.d:
    int[] c -> c
    int[] d -> d
    int g -> e
    int h -> f
    int[] i -> g
    void <init>(int,byte[]) -> <init>
    boolean a(byte[],int,int,boolean) -> a
    void <clinit>() -> <clinit>
com.ta.utdid2.android.utils.Base64$c -> com.a.a.a.a.e:
    byte[] i -> h
    byte[] j -> i
    byte[] k -> j
    int d -> c
    int l -> k
    boolean e -> d
    boolean f -> e
    boolean g -> f
    byte[] m -> l
    boolean h -> g
    void <init>(int,byte[]) -> <init>
    boolean a(byte[],int,int,boolean) -> a
    void <clinit>() -> <clinit>
com.ta.utdid2.android.utils.IntUtils -> com.a.a.a.a.f:
    byte[] getBytes(int) -> a
com.ta.utdid2.android.utils.PhoneInfoUtils -> com.a.a.a.a.g:
    java.lang.String getUniqueID() -> a
    java.lang.String getImei(android.content.Context) -> a
    java.lang.String getImsi(android.content.Context) -> b
com.ta.utdid2.android.utils.StringUtils -> com.a.a.a.a.h:
    boolean isEmpty(java.lang.String) -> a
    int hashCode(java.lang.String) -> b
com.ta.utdid2.core.persistent.MySharedPreferences -> com.a.a.b.a.a:
    boolean checkFile() -> a
    java.util.Map getAll() -> b
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    long getLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor edit() -> c
com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor -> com.a.a.b.a.b:
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putString(java.lang.String,java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putInt(java.lang.String,int) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putFloat(java.lang.String,float) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putBoolean(java.lang.String,boolean) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor clear() -> a
    boolean commit() -> b
com.ta.utdid2.core.persistent.MySharedPreferences$OnSharedPreferenceChangeListener -> com.a.a.b.a.c:
    void onSharedPreferenceChanged(com.ta.utdid2.core.persistent.MySharedPreferences,java.lang.String) -> a
com.ta.utdid2.core.persistent.PersistentConfiguration -> com.a.a.b.a.d:
    java.lang.String mConfigName -> a
    java.lang.String mFolderName -> b
    boolean mIsSafety -> c
    boolean mCanRead -> d
    boolean mCanWrite -> e
    android.content.SharedPreferences mSp -> f
    com.ta.utdid2.core.persistent.MySharedPreferences mMySP -> g
    android.content.SharedPreferences$Editor mEditor -> h
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor mMyEditor -> i
    android.content.Context mContext -> j
    com.ta.utdid2.core.persistent.TransactionXMLFile mTxf -> k
    boolean mIsLessMode -> l
    void <init>(android.content.Context,java.lang.String,java.lang.String,boolean,boolean) -> <init>
    com.ta.utdid2.core.persistent.TransactionXMLFile getTransactionXMLFile(java.lang.String) -> b
    java.io.File getRootFolder(java.lang.String) -> c
    void copySPToMySP(android.content.SharedPreferences,com.ta.utdid2.core.persistent.MySharedPreferences) -> a
    void copyMySPToSP(com.ta.utdid2.core.persistent.MySharedPreferences,android.content.SharedPreferences) -> a
    boolean checkSDCardXMLFile() -> b
    void initEditor() -> c
    void putLong(java.lang.String,long) -> a
    void putString(java.lang.String,java.lang.String) -> a
    boolean commit() -> a
    java.lang.String getString(java.lang.String) -> a
com.ta.utdid2.core.persistent.TransactionXMLFile -> com.a.a.b.a.e:
    java.lang.Object mSync -> a
    java.io.File mPreferencesDir -> b
    java.lang.Object GLOBAL_COMMIT_LOCK -> c
    java.util.HashMap sSharedPrefs -> d
    void <init>(java.lang.String) -> <init>
    java.io.File makeFilename(java.io.File,java.lang.String) -> a
    java.io.File getPreferencesDir() -> b
    java.io.File getSharedPrefsFile(java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences getMySharedPreferences(java.lang.String,int) -> a
    java.io.File makeBackupFile(java.io.File) -> b
    java.io.File access$000(java.io.File) -> a
    java.lang.Object access$100() -> a
    void <clinit>() -> <clinit>
com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl -> com.a.a.b.a.f:
    java.io.File a -> a
    java.io.File b -> b
    int c -> c
    java.util.Map d -> d
    boolean e -> e
    java.lang.Object f -> f
    java.util.WeakHashMap g -> g
    void <init>(java.io.File,int,java.util.Map) -> <init>
    boolean checkFile() -> a
    void a(boolean) -> a
    boolean a() -> d
    void a(java.util.Map) -> a
    java.util.Map getAll() -> b
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    long getLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor edit() -> c
    java.io.FileOutputStream a(java.io.File) -> a
    boolean b() -> e
    java.util.WeakHashMap a(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> a
    java.util.Map b(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> b
    boolean c(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> c
    void <clinit>() -> <clinit>
com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl$EditorImpl -> com.a.a.b.a.g:
    java.util.Map mModified -> b
    boolean mClear -> c
    com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl this$0 -> a
    void <init>(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> <init>
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putString(java.lang.String,java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putInt(java.lang.String,int) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putFloat(java.lang.String,float) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putBoolean(java.lang.String,boolean) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor clear() -> a
    boolean commit() -> b
com.ta.utdid2.core.persistent.a -> com.a.a.b.a.h:
    java.lang.String[] a -> a
    char[] c -> b
    int d -> c
    java.io.Writer e -> d
    java.io.OutputStream f -> e
    java.nio.charset.CharsetEncoder g -> f
    java.nio.ByteBuffer h -> g
    boolean i -> h
    void <init>() -> <init>
    void a(char) -> a
    void a(java.lang.String,int,int) -> a
    void a(char[],int,int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(char[],int,int) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void endDocument() -> endDocument
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    void entityRef(java.lang.String) -> entityRef
    void a() -> a
    void flush() -> flush
    int getDepth() -> getDepth
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void processingInstruction(java.lang.String) -> processingInstruction
    void setFeature(java.lang.String,boolean) -> setFeature
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    void <clinit>() -> <clinit>
com.ta.utdid2.core.persistent.b -> com.a.a.b.a.i:
    void a(java.util.Map,java.io.OutputStream) -> a
    void a(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(int[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    java.util.HashMap a(java.io.InputStream) -> a
    java.util.HashMap a(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList b(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> b
    int[] c(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> c
    java.lang.Object a(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> a
    java.lang.Object b(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> b
com.ta.utdid2.device.Device -> com.a.a.c.a:
    java.lang.String imei -> a
    java.lang.String imsi -> b
    java.lang.String deviceId -> c
    java.lang.String utdid -> d
    long mCreateTimestamp -> e
    long mCheckSum -> f
    void <init>() -> <init>
    void setCheckSum(long) -> a
    long getCreateTimestamp() -> a
    void setCreateTimestamp(long) -> b
    java.lang.String getImei() -> b
    void setImei(java.lang.String) -> a
    java.lang.String getImsi() -> c
    void setImsi(java.lang.String) -> b
    java.lang.String getDeviceId() -> d
    void setDeviceId(java.lang.String) -> c
    java.lang.String getUtdid() -> e
    void setUtdid(java.lang.String) -> d
com.ta.utdid2.device.DeviceInfo -> com.a.a.c.b:
    com.ta.utdid2.device.Device mDevice -> c
    java.lang.String HMAC_KEY -> a
    java.lang.Object CREATE_DEVICE_METADATA_LOCK -> b
    long getMetadataCheckSum(com.ta.utdid2.device.Device) -> a
    com.ta.utdid2.device.Device _initDeviceMetadata(android.content.Context) -> b
    com.ta.utdid2.device.Device getDevice(android.content.Context) -> a
    void <clinit>() -> <clinit>
com.ta.utdid2.device.UTDevice -> com.a.a.c.c:
    java.lang.String getUtdid(android.content.Context) -> a
com.ta.utdid2.device.UTUtdid -> com.a.a.c.d:
    android.content.Context mContext -> a
    java.lang.Object CREATE_LOCK -> b
    com.ta.utdid2.device.UTUtdid s_umutdid -> c
    java.lang.String mUtdid -> d
    com.ta.utdid2.device.UTUtdidHelper mUtdidHelper -> e
    java.lang.String mCBKey -> f
    java.lang.String mCBDomain -> g
    com.ta.utdid2.core.persistent.PersistentConfiguration mPC -> h
    com.ta.utdid2.core.persistent.PersistentConfiguration mTaoPC -> i
    java.lang.String S_GLOBAL_PERSISTENT_CONFIG_DIR -> j
    java.util.regex.Pattern mPattern -> k
    void <init>(android.content.Context) -> <init>
    com.ta.utdid2.device.UTUtdid instance(android.content.Context) -> a
    long getMetadataCheckSum(com.ta.utdid2.device.Device) -> a
    void saveUtdidToTaoPPC(java.lang.String) -> a
    void saveUtdidToLocalStorage(java.lang.String) -> b
    void saveUtdidToNewSettings(java.lang.String) -> c
    void syncUTDIDToSettings(java.lang.String) -> d
    void saveUtdidToSettings(java.lang.String) -> e
    java.lang.String getUtdidFromTaoPPC() -> b
    boolean isValidUTDID(java.lang.String) -> f
    java.lang.String getValue() -> a
    byte[] _generateUtdid() -> c
    java.lang.String _calcHmac(byte[]) -> a
    void <clinit>() -> <clinit>
com.ta.utdid2.device.UTUtdidHelper -> com.a.a.c.e:
    java.lang.String mAESKey -> a
    java.util.Random random -> b
    void <init>() -> <init>
    java.lang.String pack(byte[]) -> a
    java.lang.String packUtdidStr(java.lang.String) -> a
    java.lang.String dePack(java.lang.String) -> b
    void <clinit>() -> <clinit>
com.ta.utdid2.device.UTUtdidHelper2 -> com.a.a.c.f:
    java.lang.String mAESKey -> a
    void <init>() -> <init>
    java.lang.String dePack(java.lang.String) -> a
    java.lang.String dePackWithBase64(java.lang.String) -> b
com.umeng.common.message.Log -> com.umeng.a.a.a:
    boolean LOG -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void <clinit>() -> <clinit>
com.umeng.common.message.UmengMessageDeviceConfig -> com.umeng.a.a.b:
    java.lang.String a -> a
    void <init>() -> <init>
    java.lang.String getAppVersionCode(android.content.Context) -> a
    java.lang.String getAppVersionName(android.content.Context) -> b
    boolean checkPermission(android.content.Context,java.lang.String) -> a
    java.lang.String getCPU() -> a
    java.lang.String getDeviceId(android.content.Context) -> c
    java.lang.String getDeviceIdMD5(android.content.Context) -> d
    java.lang.String[] getNetworkAccessMode(android.content.Context) -> e
    int getTimeZone(android.content.Context) -> f
    java.lang.String[] getLocaleInfo(android.content.Context) -> g
    java.util.Locale a(android.content.Context) -> p
    java.lang.String getAppkey(android.content.Context) -> h
    java.lang.String getMetaData(android.content.Context,java.lang.String) -> b
    java.lang.String getMac(android.content.Context) -> i
    java.lang.String getResolution(android.content.Context) -> j
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String getOperator(android.content.Context) -> k
    java.lang.String getChannel(android.content.Context) -> l
    java.lang.String getPackageName(android.content.Context) -> m
    java.lang.String getApplicationLable(android.content.Context) -> n
    java.lang.String getUtdid(android.content.Context) -> o
    void <clinit>() -> <clinit>
com.umeng.common.message.b -> com.umeng.a.a.c:
    java.lang.String C -> A
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    int s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String D -> B
    java.lang.String E -> C
    java.lang.String F -> D
    java.lang.String G -> E
    java.lang.String H -> F
    java.lang.String I -> G
    java.lang.String J -> H
    java.lang.String K -> I
    java.lang.String L -> J
    java.lang.String M -> K
    java.lang.String N -> L
    java.lang.String O -> M
    java.lang.String P -> N
    java.lang.String Q -> O
    java.lang.String R -> P
    java.lang.String S -> Q
    java.lang.String T -> R
    java.lang.String U -> S
    java.lang.String V -> T
    java.lang.String W -> U
    java.lang.String X -> V
    java.lang.String Y -> W
    java.lang.String Z -> X
    java.lang.String aa -> Y
    java.lang.String ab -> Z
    java.lang.String ac -> aa
    void <init>() -> <init>
    void k(org.json.JSONObject) -> c
    void l(org.json.JSONObject) -> d
    void m(org.json.JSONObject) -> e
    void n(org.json.JSONObject) -> f
    void o(org.json.JSONObject) -> g
    void p(org.json.JSONObject) -> h
    void q(org.json.JSONObject) -> i
    void r(org.json.JSONObject) -> j
    void s(org.json.JSONObject) -> k
    void t(org.json.JSONObject) -> l
    void b(org.json.JSONObject) -> a
    void c(org.json.JSONObject) -> b
    void a(android.content.Context,java.lang.String[]) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void b(android.content.Context,java.lang.String[]) -> b
    void c(android.content.Context,java.lang.String[]) -> c
    void <clinit>() -> <clinit>
com.umeng.common.message.c -> com.umeng.a.a.d:
    java.lang.String a -> a
    com.umeng.common.message.c b -> b
    android.content.Context c -> c
    java.lang.Class e -> d
    java.lang.Class f -> e
    java.lang.Class g -> f
    java.lang.Class h -> g
    java.lang.Class i -> h
    java.lang.Class j -> i
    java.lang.Class k -> j
    java.lang.Class l -> k
    void <init>(android.content.Context) -> <init>
    com.umeng.common.message.c a(android.content.Context) -> a
    int c(java.lang.String) -> a
    int h(java.lang.String) -> b
    int a(java.lang.Class,java.lang.String) -> a
    void <clinit>() -> <clinit>
com.umeng.message.ALIAS_TYPE -> com.umeng.message.ALIAS_TYPE:
    java.lang.String SINA_WEIBO -> SINA_WEIBO
    java.lang.String TENCENT_WEIBO -> TENCENT_WEIBO
    java.lang.String QQ -> QQ
    java.lang.String WEIXIN -> WEIXIN
    java.lang.String BAIDU -> BAIDU
    java.lang.String RENREN -> RENREN
    java.lang.String KAIXIN -> KAIXIN
com.umeng.message.ElectionReceiver -> com.umeng.message.ElectionReceiver:
    java.lang.String a -> a
    void <init>() -> <init>
    java.lang.String getIntentServiceClassName(android.content.Context) -> a
    void <clinit>() -> <clinit>
com.umeng.message.IUmengRegisterCallback -> com.umeng.message.IUmengRegisterCallback:
    void onRegistered(java.lang.String) -> onRegistered
com.umeng.message.IUmengUnregisterCallback -> com.umeng.message.IUmengUnregisterCallback:
    void onUnregistered(java.lang.String) -> onUnregistered
com.umeng.message.MessageReceiver -> com.umeng.message.MessageReceiver:
    java.lang.String a -> a
    void <init>() -> <init>
    java.lang.String getIntentServiceClassName(android.content.Context) -> a
    void <clinit>() -> <clinit>
com.umeng.message.MessageSharedPrefs -> com.umeng.message.MessageSharedPrefs:
    java.lang.String a -> a
    android.content.Context b -> b
    android.content.SharedPreferences c -> c
    com.umeng.message.MessageSharedPrefs d -> d
    int e -> e
    void <init>(android.content.Context) -> <init>
    com.umeng.message.MessageSharedPrefs getInstance(android.content.Context) -> getInstance
    void setAppLaunchLogSentAt(long) -> setAppLaunchLogSentAt
    long getAppLaunchLogSentAt() -> getAppLaunchLogSentAt
    boolean hasAppLaunchLogSentToday() -> hasAppLaunchLogSentToday
    void setPushIntentServiceClass(java.lang.Class) -> setPushIntentServiceClass
    java.lang.String getPushIntentServiceClass() -> getPushIntentServiceClass
    void setMergeNotificaiton(boolean) -> setMergeNotificaiton
    boolean getMergeNotificaiton() -> getMergeNotificaiton
    void setMessageAppKey(java.lang.String) -> setMessageAppKey
    java.lang.String getMessageAppKey() -> getMessageAppKey
    void setMessageAppSecret(java.lang.String) -> setMessageAppSecret
    java.lang.String getMessageAppSecret() -> getMessageAppSecret
    void setMessageChannel(java.lang.String) -> setMessageChannel
    java.lang.String getMessageChannel() -> getMessageChannel
    void setAppLaunchLogSendPolicy(int) -> setAppLaunchLogSendPolicy
    void setTagSendPolicy(int) -> setTagSendPolicy
    int getAppLaunchLogSendPolicy() -> getAppLaunchLogSendPolicy
    int getTagSendPolicy() -> getTagSendPolicy
    java.lang.String getAliasType(com.umeng.message.MessageSharedPrefs$a,int) -> getAliasType
    void saveAliasType(com.umeng.message.MessageSharedPrefs$a,java.lang.String,int) -> saveAliasType
    void clearSharedPrefs() -> clearSharedPrefs
    boolean isAliasType(com.umeng.message.MessageSharedPrefs$a,java.lang.String,int) -> isAliasType
    void removeAliasTypeSingle(com.umeng.message.MessageSharedPrefs$a,java.lang.String,int) -> removeAliasTypeSingle
    void addAliasTypeSingle(com.umeng.message.MessageSharedPrefs$a,java.lang.String,java.lang.String,int) -> addAliasTypeSingle
    void removeAliasType(com.umeng.message.MessageSharedPrefs$a,int) -> removeAliasType
    void addAlias(com.umeng.message.MessageSharedPrefs$a,java.lang.String,java.lang.String,int) -> addAlias
    java.lang.String getAlias(com.umeng.message.MessageSharedPrefs$a,java.lang.String,int) -> getAlias
    void removeAlias(com.umeng.message.MessageSharedPrefs$a,java.lang.String,java.lang.String,int) -> removeAlias
    java.lang.String getLastAlias(java.lang.String) -> getLastAlias
    boolean isAliasSet(com.umeng.message.MessageSharedPrefs$a,int,java.lang.String,java.lang.String) -> isAliasSet
    boolean isAliaseTypeSet(com.umeng.message.MessageSharedPrefs$a,int,java.lang.String) -> isAliaseTypeSet
    int getAliasCount(com.umeng.message.MessageSharedPrefs$a,int) -> getAliasCount
    void addTags(java.lang.String[]) -> addTags
    void removeTags(java.lang.String[]) -> removeTags
    boolean isTagSet(java.lang.String) -> isTagSet
    int getTagCount() -> getTagCount
    void setTagRemain(int) -> setTagRemain
    int getTagRemain() -> getTagRemain
    void resetTags() -> resetTags
    void a(int,int,int,int) -> a
    int a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    void e() -> e
    void f() -> f
    boolean g() -> g
    boolean a(java.lang.String) -> a
    boolean h() -> h
    boolean i() -> i
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    java.lang.String j() -> j
    void a(int) -> a
    int k() -> k
    void setSerialNo(int) -> setSerialNo
    int getSerialNo() -> getSerialNo
    boolean getNotificaitonOnForeground() -> getNotificaitonOnForeground
    void setNotificaitonOnForeground(boolean) -> setNotificaitonOnForeground
    java.lang.String getResourcePackageName() -> getResourcePackageName
    void setResourcePackageName(java.lang.String) -> setResourcePackageName
    int getNotificationPlayVibrate() -> getNotificationPlayVibrate
    void setNotificationPlayVibrate(int) -> setNotificationPlayVibrate
    int getNotificationPlayLights() -> getNotificationPlayLights
    void setNotificationPlayLights(int) -> setNotificationPlayLights
    int getNotificationPlaySound() -> getNotificationPlaySound
    void setNotificationPlaySound(int) -> setNotificationPlaySound
    boolean l() -> l
    void a(boolean) -> a
    void setDeviceToken(java.lang.String) -> setDeviceToken
    java.lang.String getDeviceToken() -> getDeviceToken
    void <clinit>() -> <clinit>
com.umeng.message.MessageSharedPrefs$a -> com.umeng.message.MessageSharedPrefs$a:
    com.umeng.message.MessageSharedPrefs$a a -> a
    com.umeng.message.MessageSharedPrefs$a b -> b
    java.lang.String c -> c
    com.umeng.message.MessageSharedPrefs$a[] d -> d
    com.umeng.message.MessageSharedPrefs$a[] values() -> values
    com.umeng.message.MessageSharedPrefs$a valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.umeng.message.MessageStore -> com.umeng.message.MessageStore:
    android.content.Context a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.umeng.message.MessageStore$a c -> c
    com.umeng.message.MessageStore instance -> instance
    java.lang.String Id -> Id
    java.lang.String MsgId -> MsgId
    java.lang.String Json -> Json
    java.lang.String SdkVersion -> SdkVersion
    java.lang.String ArrivalTime -> ArrivalTime
    java.lang.String ActionType -> ActionType
    com.umeng.message.MessageStore getInstance(android.content.Context) -> getInstance
    void <init>(android.content.Context) -> <init>
com.umeng.message.MessageStore$a -> com.umeng.message.MessageStore$a:
    com.umeng.message.MessageStore a -> a
    void <init>(com.umeng.message.MessageStore,android.content.Context) -> <init>
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.message.MsgConstant -> com.umeng.message.MsgConstant:
    java.lang.String d -> b
    java.lang.String e -> c
    java.lang.String LOG_ENDPOINT -> LOG_ENDPOINT
    java.lang.String REGISTER_ENDPOINT -> REGISTER_ENDPOINT
    java.lang.String TAG_ENDPOINT -> TAG_ENDPOINT
    java.lang.String ALIAS_ENDPOINT -> ALIAS_ENDPOINT
    java.lang.String ALIAS_EXCLUSIVE_ENDPOINT -> ALIAS_EXCLUSIVE_ENDPOINT
    java.lang.String DELETE_ALIAS_ENDPOINT -> DELETE_ALIAS_ENDPOINT
    java.lang.String LAUNCH_ENDPOINT -> LAUNCH_ENDPOINT
    java.lang.String f -> d
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String DEFAULT_INTENT_SERVICE_CLASS_NAME -> DEFAULT_INTENT_SERVICE_CLASS_NAME
    java.lang.String PUSH_SHARED_PREFERENCES_FILE_NAME -> PUSH_SHARED_PREFERENCES_FILE_NAME
    java.lang.String KEY_LAUNCH_LOG_SENT_MARK -> KEY_LAUNCH_LOG_SENT_MARK
    java.lang.String KEY_ENEABLED -> KEY_ENEABLED
    java.lang.String KEY_NO_DISTURB_START_HOUR -> KEY_NO_DISTURB_START_HOUR
    java.lang.String KEY_NO_DISTURB_START_MINUTE -> KEY_NO_DISTURB_START_MINUTE
    java.lang.String KEY_NO_DISTURB_END_HOUR -> KEY_NO_DISTURB_END_HOUR
    java.lang.String KEY_NO_DISTURB_END_MINUTE -> KEY_NO_DISTURB_END_MINUTE
    java.lang.String KEY_PUSH_INTENT_SERVICE_CLASSNAME -> KEY_PUSH_INTENT_SERVICE_CLASSNAME
    java.lang.String KEY_MERGE_NOTIFICATION -> KEY_MERGE_NOTIFICATION
    java.lang.String KEY_UMENG_MESSAGE_APP_KEY -> KEY_UMENG_MESSAGE_APP_KEY
    java.lang.String KEY_UMENG_MESSAGE_APP_SECRET -> KEY_UMENG_MESSAGE_APP_SECRET
    java.lang.String KEY_UMENG_MESSAGE_APP_CHANNEL -> KEY_UMENG_MESSAGE_APP_CHANNEL
    java.lang.String KEY_TAG_SEND_POLICY -> KEY_TAG_SEND_POLICY
    java.lang.String KEY_APP_LAUNCH_LOG_SEND_POLICY -> KEY_APP_LAUNCH_LOG_SEND_POLICY
    java.lang.String KEY_CACHE_FILE_TRANSFER_TO_SQL -> KEY_CACHE_FILE_TRANSFER_TO_SQL
    java.lang.String KEY_SET_PUSH_INTENT_SERVICE_VERSION_CODE -> KEY_SET_PUSH_INTENT_SERVICE_VERSION_CODE
    java.lang.String KEY_MSG_RESOURCE_DOWNLOAD_PREFIX -> KEY_MSG_RESOURCE_DOWNLOAD_PREFIX
    java.lang.String KEY_SET_NOTIFICATION_ON_FOREGROUND -> KEY_SET_NOTIFICATION_ON_FOREGROUND
    java.lang.String KEY_SET_RESOURCE_PACKAGENAME -> KEY_SET_RESOURCE_PACKAGENAME
    java.lang.String KEY_SET_NOTIFICATION_PLAY_VIBRATE -> KEY_SET_NOTIFICATION_PLAY_VIBRATE
    java.lang.String KEY_SET_NOTIFICATION_PLAY_LIGHTS -> KEY_SET_NOTIFICATION_PLAY_LIGHTS
    java.lang.String KEY_SET_NOTIFICATION_PLAY_SOUND -> KEY_SET_NOTIFICATION_PLAY_SOUND
    java.lang.String KEY_SET_LOCALNOTIFICATION_INTERVAL_LIMIT -> KEY_SET_LOCALNOTIFICATION_INTERVAL_LIMIT
    java.lang.String KEY_DEVICETOKEN -> KEY_DEVICETOKEN
    java.lang.String KEY_REGISTERED_TO_UMENG -> KEY_REGISTERED_TO_UMENG
    java.lang.String CACHE_LOG_FILE_PREFIX -> CACHE_LOG_FILE_PREFIX
    java.lang.String CACHE_LOG_FILE_EXT -> CACHE_LOG_FILE_EXT
    int CACHE_LOG_COUNT_MAX -> CACHE_LOG_COUNT_MAX
    int APP_LAUNCH_BY_UNSET -> APP_LAUNCH_BY_UNSET
    int APP_LAUNCH_BY_MESSAGE -> APP_LAUNCH_BY_MESSAGE
    int APP_LAUNCH_BY_USER -> APP_LAUNCH_BY_USER
    java.lang.String KEY_TAGS -> KEY_TAGS
    java.lang.String KEY_TYPE -> KEY_TYPE
    java.lang.String KEY_ALIAS -> KEY_ALIAS
    java.lang.String KEY_LAST_ALIAS -> KEY_LAST_ALIAS
    java.lang.String KEY_TS -> KEY_TS
    java.lang.String KEY_ACTION_TYPE -> KEY_ACTION_TYPE
    java.lang.String KEY_MSG_ID -> KEY_MSG_ID
    java.lang.String KEY_LAST_MSG_ID -> KEY_LAST_MSG_ID
    java.lang.String KEY_MUTE_DURATION -> KEY_MUTE_DURATION
    java.lang.String KEY_SERIA_NO -> KEY_SERIA_NO
    java.lang.String KEY_DEVICE_TOKEN -> KEY_DEVICE_TOKEN
    java.lang.String KEY_UTDID -> KEY_UTDID
    java.lang.String KEY_HEADER -> KEY_HEADER
    java.lang.String KEY_REGISTRATION_ID -> KEY_REGISTRATION_ID
    int ACTION_TYPE_MSG_ARRIVAL -> ACTION_TYPE_MSG_ARRIVAL
    int ACTION_TYPE_MSG_CLICK -> ACTION_TYPE_MSG_CLICK
    int ACTION_TYPE_MSG_DISMISS -> ACTION_TYPE_MSG_DISMISS
    int ACTION_TYPE_MSG_DISPLAY -> ACTION_TYPE_MSG_DISPLAY
    java.lang.String MESSAGE_NOTIFY_ARRIVAL -> MESSAGE_NOTIFY_ARRIVAL
    java.lang.String MESSAGE_NOTIFY_CLICK -> MESSAGE_NOTIFY_CLICK
    java.lang.String MESSAGE_NOTIFY_DISMISS -> MESSAGE_NOTIFY_DISMISS
    long a -> a
    int NOTIFICATION_MERGE_ID -> NOTIFICATION_MERGE_ID
    java.lang.String PERMISSION_WRITE_SETTINGS -> PERMISSION_WRITE_SETTINGS
    java.lang.String PERMISSION_INTERNET -> PERMISSION_INTERNET
    java.lang.String PERMISSION_ACCESS_NETWORK_STATE -> PERMISSION_ACCESS_NETWORK_STATE
    java.lang.String PERMISSION_ACCESS_WIFI_STATE -> PERMISSION_ACCESS_WIFI_STATE
    java.lang.String PERMISSION_WRITE_EXTERNAL_STORAGE -> PERMISSION_WRITE_EXTERNAL_STORAGE
    java.lang.String PERMISSION_WAKE_LOCK -> PERMISSION_WAKE_LOCK
    java.lang.String PERMISSION_READ_PHONE_STATE -> PERMISSION_READ_PHONE_STATE
    java.lang.String PERMISSION_CHANGE_NETWORK_STATE -> PERMISSION_CHANGE_NETWORK_STATE
    java.lang.String PERMISSION_CHANGE_WIFI_STATE -> PERMISSION_CHANGE_WIFI_STATE
    java.lang.String PERMISSION_GET_TASKS -> PERMISSION_GET_TASKS
    java.lang.String PERMISSION_RECEIVE_BOOT_COMPLETED -> PERMISSION_RECEIVE_BOOT_COMPLETED
    java.lang.String MESSAGE_NOTIFY_FOR_AGOO_ACTION -> MESSAGE_NOTIFY_FOR_AGOO_ACTION
    java.lang.String MESSAGE_REGISTER_CALLBACK_ACTION -> MESSAGE_REGISTER_CALLBACK_ACTION
    java.lang.String MESSAGE_UNREGISTER_CALLBACK_ACTION -> MESSAGE_UNREGISTER_CALLBACK_ACTION
    java.lang.String MESSAGE_MESSAGE_HANDLER_ACTION -> MESSAGE_MESSAGE_HANDLER_ACTION
    java.lang.String MESSAGE_AUTOUPDATE_HANDLER_ACTION -> MESSAGE_AUTOUPDATE_HANDLER_ACTION
    java.lang.String PREF_XIAOMI -> PREF_XIAOMI
    java.lang.String XIAOMI_REGID -> XIAOMI_REGID
    java.lang.String MESSAGE_SYSTEM_SOURCE_XIAOMI -> MESSAGE_SYSTEM_SOURCE_XIAOMI
    int NOTIFICATION_PLAY_SERVER -> NOTIFICATION_PLAY_SERVER
    int NOTIFICATION_PLAY_SDK_ENABLE -> NOTIFICATION_PLAY_SDK_ENABLE
    int NOTIFICATION_PLAY_SDK_DISABLE -> NOTIFICATION_PLAY_SDK_DISABLE
    int FAILALIAS -> FAILALIAS
    int SUCCESS -> SUCCESS
    int FAILEXCLUSIVEALIAS -> FAILEXCLUSIVEALIAS
    int SUCCESSEXCLUSIVEALIAS -> SUCCESSEXCLUSIVEALIAS
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.umeng.message.MsgLogStore -> com.umeng.message.MsgLogStore:
    java.lang.String a -> a
    com.umeng.message.MsgLogStore b -> b
    android.database.sqlite.SQLiteDatabase c -> c
    com.umeng.message.MsgLogStore$a d -> d
    android.content.Context e -> e
    java.lang.String MsgId -> MsgId
    java.lang.String MsgType -> MsgType
    java.lang.String ActionType -> ActionType
    java.lang.String Time -> Time
    java.lang.String TaskId -> TaskId
    java.lang.String MsgStatus -> MsgStatus
    java.lang.String SerialNo -> SerialNo
    java.lang.String AppLaunchAt -> AppLaunchAt
    java.lang.String UpdateResponse -> UpdateResponse
    com.umeng.message.MsgLogStore getInstance(android.content.Context) -> getInstance
    void <init>(android.content.Context) -> <init>
    void b() -> b
    void a(java.io.File) -> a
    java.lang.String b(java.io.File) -> b
    boolean addLog(java.lang.String,int,long) -> addLog
    boolean removeLog(java.lang.String,int) -> removeLog
    com.umeng.message.MsgLogStore$MsgLog getMsgLog(java.lang.String) -> getMsgLog
    java.util.ArrayList getMsgLogs(int) -> getMsgLogs
    java.util.ArrayList getMsgLogs() -> getMsgLogs
    boolean addLogIdType(java.lang.String,java.lang.String) -> addLogIdType
    boolean removeLogIdType(java.lang.String) -> removeLogIdType
    java.util.ArrayList getMsgLogIdTypes(int) -> getMsgLogIdTypes
    java.util.ArrayList getMsgLogIdTypes() -> getMsgLogIdTypes
    boolean addLogForAgoo(java.lang.String,java.lang.String,java.lang.String,long) -> addLogForAgoo
    boolean removeLogForAgoo(java.lang.String,java.lang.String) -> removeLogForAgoo
    com.umeng.message.MsgLogStore$MsgLogForAgoo getMsgLogForAgoo(java.lang.String) -> getMsgLogForAgoo
    java.util.ArrayList getMsgLogsForAgoo(int) -> getMsgLogsForAgoo
    java.util.ArrayList getMsgLogsForAgoo() -> getMsgLogsForAgoo
    boolean addLogIdTypeForAgoo(java.lang.String,java.lang.String,java.lang.String) -> addLogIdTypeForAgoo
    boolean removeLogIdTypeForAgoo(java.lang.String) -> removeLogIdTypeForAgoo
    java.util.ArrayList getMsgLogIdTypesForAgoo(int) -> getMsgLogIdTypesForAgoo
    java.util.ArrayList getMsgLogIdTypesForAgoo() -> getMsgLogIdTypesForAgoo
    int getMsgConfigInfo_SerialNo() -> getMsgConfigInfo_SerialNo
    void setMsgConfigInfo_SerialNo(int) -> setMsgConfigInfo_SerialNo
    long getMsgConfigInfo_AppLaunchAt() -> getMsgConfigInfo_AppLaunchAt
    void setMsgConfigInfo_AppLaunchAt(long) -> setMsgConfigInfo_AppLaunchAt
    java.lang.Object getMsgConfigInfo_UpdateResponse() -> getMsgConfigInfo_UpdateResponse
    void setMsgConfigInfo_UpdateResponse(java.lang.Object) -> setMsgConfigInfo_UpdateResponse
    android.content.Context a(com.umeng.message.MsgLogStore) -> a
    java.lang.String a() -> a
    void <clinit>() -> <clinit>
com.umeng.message.MsgLogStore$1 -> com.umeng.message.MsgLogStore$1:
    com.umeng.message.MsgLogStore a -> a
    void <init>(com.umeng.message.MsgLogStore) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.umeng.message.MsgLogStore$MsgLog -> com.umeng.message.MsgLogStore$MsgLog:
    java.lang.String msgId -> msgId
    long time -> time
    int actionType -> actionType
    com.umeng.message.MsgLogStore a -> a
    void <init>(com.umeng.message.MsgLogStore,java.lang.String,int,long) -> <init>
    void <init>(com.umeng.message.MsgLogStore,android.database.Cursor) -> <init>
    android.content.ContentValues getContentValues() -> getContentValues
com.umeng.message.MsgLogStore$MsgLogForAgoo -> com.umeng.message.MsgLogStore$MsgLogForAgoo:
    java.lang.String msgId -> msgId
    java.lang.String taskId -> taskId
    java.lang.String msgStatus -> msgStatus
    long time -> time
    com.umeng.message.MsgLogStore a -> a
    void <init>(com.umeng.message.MsgLogStore,java.lang.String,java.lang.String,java.lang.String,long) -> <init>
    void <init>(com.umeng.message.MsgLogStore,android.database.Cursor) -> <init>
    android.content.ContentValues getContentValues() -> getContentValues
com.umeng.message.MsgLogStore$MsgLogIdType -> com.umeng.message.MsgLogStore$MsgLogIdType:
    java.lang.String msgId -> msgId
    java.lang.String msgType -> msgType
    com.umeng.message.MsgLogStore a -> a
    void <init>(com.umeng.message.MsgLogStore,java.lang.String,java.lang.String) -> <init>
    void <init>(com.umeng.message.MsgLogStore,android.database.Cursor) -> <init>
    android.content.ContentValues getContentValues() -> getContentValues
com.umeng.message.MsgLogStore$MsgLogIdTypeForAgoo -> com.umeng.message.MsgLogStore$MsgLogIdTypeForAgoo:
    java.lang.String msgId -> msgId
    java.lang.String taskId -> taskId
    java.lang.String msgStatus -> msgStatus
    com.umeng.message.MsgLogStore a -> a
    void <init>(com.umeng.message.MsgLogStore,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(com.umeng.message.MsgLogStore,android.database.Cursor) -> <init>
    android.content.ContentValues getContentValues() -> getContentValues
com.umeng.message.MsgLogStore$a -> com.umeng.message.MsgLogStore$a:
    com.umeng.message.MsgLogStore a -> a
    void <init>(com.umeng.message.MsgLogStore,android.content.Context) -> <init>
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
com.umeng.message.NotificationProxyBroadcastReceiver -> com.umeng.message.NotificationProxyBroadcastReceiver:
    java.lang.String a -> a
    java.lang.String EXTRA_KEY_ACTION -> EXTRA_KEY_ACTION
    java.lang.String EXTRA_KEY_MSG -> EXTRA_KEY_MSG
    java.lang.String EXTRA_KEY_MESSAGE_ID -> EXTRA_KEY_MESSAGE_ID
    java.lang.String EXTRA_KEY_TASK_ID -> EXTRA_KEY_TASK_ID
    int EXTRA_ACTION_CLICK -> EXTRA_ACTION_CLICK
    int EXTRA_ACTION_DISMISS -> EXTRA_ACTION_DISMISS
    int EXTRA_ACTION_NOT_EXIST -> EXTRA_ACTION_NOT_EXIST
    int LOCAL_ACTION_CLICK -> LOCAL_ACTION_CLICK
    com.umeng.message.UHandler b -> b
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
    void <clinit>() -> <clinit>
com.umeng.message.PushAgent -> com.umeng.message.PushAgent:
    com.umeng.message.PushAgent a -> a
    com.umeng.message.tag.TagManager b -> b
    android.content.Context c -> c
    boolean d -> d
    boolean DEBUG -> DEBUG
    java.lang.String e -> e
    com.umeng.message.UHandler f -> f
    com.umeng.message.UHandler g -> g
    boolean h -> h
    boolean i -> i
    android.os.Handler j -> j
    com.umeng.message.IUmengRegisterCallback k -> k
    com.umeng.message.IUmengUnregisterCallback l -> l
    void <init>(android.content.Context) -> <init>
    com.umeng.message.PushAgent getInstance(android.content.Context) -> getInstance
    void enable() -> enable
    void enable(com.umeng.message.IUmengRegisterCallback) -> enable
    void disable() -> disable
    void disable(com.umeng.message.IUmengUnregisterCallback) -> disable
    boolean isEnabled() -> isEnabled
    void setMessageHandler(com.umeng.message.UHandler) -> setMessageHandler
    com.umeng.message.UHandler getMessageHandler() -> getMessageHandler
    void setNotificationClickHandler(com.umeng.message.UHandler) -> setNotificationClickHandler
    com.umeng.message.UHandler getNotificationClickHandler() -> getNotificationClickHandler
    com.umeng.message.tag.TagManager getTagManager() -> getTagManager
    boolean addAlias(java.lang.String,java.lang.String) -> addAlias
    void setAlias(java.lang.String,java.lang.String) -> setAlias
    void setExclusiveAlias(java.lang.String,java.lang.String) -> setExclusiveAlias
    boolean addExclusiveAlias(java.lang.String,java.lang.String) -> addExclusiveAlias
    boolean removeAlias(java.lang.String,java.lang.String) -> removeAlias
    java.lang.String getMessageSecret() -> getMessageSecret
    java.lang.String getMessageAppkey() -> getMessageAppkey
    java.lang.String getMessageChannel() -> getMessageChannel
    void onAppStart() -> onAppStart
    void setPushIntentServiceClass(java.lang.Class) -> setPushIntentServiceClass
    java.lang.String getPushIntentServiceClass() -> getPushIntentServiceClass
    void setDebugMode(boolean) -> setDebugMode
    void setNoDisturbMode(int,int,int,int) -> setNoDisturbMode
    int getNoDisturbStartHour() -> getNoDisturbStartHour
    int getNoDisturbStartMinute() -> getNoDisturbStartMinute
    int getNoDisturbEndHour() -> getNoDisturbEndHour
    int getNoDisturbEndMinute() -> getNoDisturbEndMinute
    void setAppLaunchByMessage() -> setAppLaunchByMessage
    boolean isAppLaunchByMessage() -> isAppLaunchByMessage
    boolean isRegistered() -> isRegistered
    java.lang.String getRegistrationId() -> getRegistrationId
    boolean getMergeNotificaiton() -> getMergeNotificaiton
    void setMergeNotificaiton(boolean) -> setMergeNotificaiton
    void setAppkeyAndSecret(java.lang.String,java.lang.String) -> setAppkeyAndSecret
    void setMessageChannel(java.lang.String) -> setMessageChannel
    void setRegisterCallback(com.umeng.message.IUmengRegisterCallback) -> setRegisterCallback
    com.umeng.message.IUmengRegisterCallback getRegisterCallback() -> getRegisterCallback
    void setUnregisterCallback(com.umeng.message.IUmengUnregisterCallback) -> setUnregisterCallback
    com.umeng.message.IUmengUnregisterCallback getUnregisterCallback() -> getUnregisterCallback
    void setMuteDurationSeconds(int) -> setMuteDurationSeconds
    int getMuteDurationSeconds() -> getMuteDurationSeconds
    boolean isIncludesUmengUpdateSDK() -> isIncludesUmengUpdateSDK
    boolean getNotificationOnForeground() -> getNotificationOnForeground
    void setNotificaitonOnForeground(boolean) -> setNotificaitonOnForeground
    java.lang.String getResourcePackageName() -> getResourcePackageName
    void setResourcePackageName(java.lang.String) -> setResourcePackageName
    boolean isPushCheck() -> isPushCheck
    void setPushCheck(boolean) -> setPushCheck
    int getNotificationPlayVibrate() -> getNotificationPlayVibrate
    void setNotificationPlayVibrate(int) -> setNotificationPlayVibrate
    int getNotificationPlayLights() -> getNotificationPlayLights
    void setNotificationPlayLights(int) -> setNotificationPlayLights
    int getNotificationPlaySound() -> getNotificationPlaySound
    void setNotificationPlaySound(int) -> setNotificationPlaySound
    boolean addLocalNotification(com.umeng.message.local.UmengLocalNotification) -> addLocalNotification
    boolean updateLocalNotification(com.umeng.message.local.UmengLocalNotification) -> updateLocalNotification
    boolean deleteLocalNotification(java.lang.String) -> deleteLocalNotification
    boolean clearLocalNotifications() -> clearLocalNotifications
    com.umeng.message.local.UmengLocalNotification findLocalNotification(java.lang.String) -> findLocalNotification
    java.util.List findLocalNotifications(java.lang.String) -> findLocalNotifications
    java.util.List findAllLocalNotifications() -> findAllLocalNotifications
    boolean getLocalNotificationIntervalLimit() -> getLocalNotificationIntervalLimit
    void setLocalNotificationIntervalLimit(boolean) -> setLocalNotificationIntervalLimit
    android.content.Context a(com.umeng.message.PushAgent) -> a
    void <clinit>() -> <clinit>
com.umeng.message.PushAgent$1 -> com.umeng.message.PushAgent$1:
    com.umeng.message.PushAgent a -> a
    void <init>(com.umeng.message.PushAgent,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.message.PushAgent$2 -> com.umeng.message.PushAgent$2:
    com.umeng.message.PushAgent a -> a
    void <init>(com.umeng.message.PushAgent) -> <init>
    void run() -> run
com.umeng.message.RegistrationReceiver -> com.umeng.message.RegistrationReceiver:
    java.lang.String a -> a
    void <init>() -> <init>
    java.lang.String getIntentServiceClassName(android.content.Context) -> a
    void <clinit>() -> <clinit>
com.umeng.message.SystemReceiver -> com.umeng.message.SystemReceiver:
    java.lang.String a -> a
    void <init>() -> <init>
    java.lang.String getIntentServiceClassName(android.content.Context) -> a
    void <clinit>() -> <clinit>
com.umeng.message.UHandler -> com.umeng.message.UHandler:
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
com.umeng.message.UTrack -> com.umeng.message.UTrack:
    java.lang.String a -> a
    org.json.JSONObject b -> b
    org.json.JSONObject c -> c
    com.umeng.message.UTrack d -> d
    java.util.concurrent.ScheduledThreadPoolExecutor e -> e
    android.content.Context f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    void setClearPrevMessage(boolean) -> setClearPrevMessage
    void <init>(android.content.Context) -> <init>
    com.umeng.message.UTrack getInstance(android.content.Context) -> getInstance
    void a(com.umeng.message.entity.UMessage) -> a
    void trackMsgClick(com.umeng.message.entity.UMessage) -> trackMsgClick
    void trackMsgDismissed(com.umeng.message.entity.UMessage) -> trackMsgDismissed
    void trackMsgDisplay(com.umeng.message.entity.UMessage) -> trackMsgDisplay
    void a(java.lang.String,int,long) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void b(java.lang.String,int,long) -> b
    void sendMsgLogForAgoo(java.lang.String,java.lang.String,java.lang.String,long) -> sendMsgLogForAgoo
    void sendCachedMsgLog(long) -> sendCachedMsgLog
    void trackAppLaunch(long) -> trackAppLaunch
    void trackRegister() -> trackRegister
    void b() -> b
    org.json.JSONObject getHeader() -> getHeader
    void setAlias(java.lang.String,java.lang.String) -> setAlias
    void setExclusiveAlias(java.lang.String,java.lang.String) -> setExclusiveAlias
    boolean addAlias(java.lang.String,java.lang.String,boolean) -> addAlias
    void a(com.umeng.message.MessageSharedPrefs$a,java.lang.String,java.lang.String,int) -> a
    void b(com.umeng.message.MessageSharedPrefs$a,java.lang.String,java.lang.String,int) -> b
    boolean addExclusiveAlias(java.lang.String,java.lang.String,boolean) -> addExclusiveAlias
    void startCacheAlias(com.umeng.message.MessageSharedPrefs$a,int) -> startCacheAlias
    boolean removeAlias(java.lang.String,java.lang.String) -> removeAlias
    boolean c() -> c
    java.lang.String d() -> d
    org.json.JSONObject e() -> e
    org.json.JSONObject f() -> f
    void updateHeader() -> updateHeader
    void a(com.umeng.message.UTrack,java.lang.String,int,long) -> a
    android.content.Context a(com.umeng.message.UTrack) -> a
    java.lang.String a() -> a
    boolean a(boolean) -> a
    boolean b(boolean) -> b
    org.json.JSONObject b(com.umeng.message.UTrack) -> b
    boolean c(boolean) -> c
    java.lang.String c(com.umeng.message.UTrack) -> c
    boolean d(boolean) -> d
    void <clinit>() -> <clinit>
com.umeng.message.UTrack$1 -> com.umeng.message.UTrack$1:
    java.lang.String a -> a
    int b -> b
    long c -> c
    com.umeng.message.UTrack d -> d
    void <init>(com.umeng.message.UTrack,java.lang.String,int,long) -> <init>
    void run() -> run
com.umeng.message.UTrack$2 -> com.umeng.message.UTrack$2:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    com.umeng.message.UTrack e -> e
    void <init>(com.umeng.message.UTrack,java.lang.String,java.lang.String,java.lang.String,long) -> <init>
    void run() -> run
com.umeng.message.UTrack$3 -> com.umeng.message.UTrack$3:
    com.umeng.message.UTrack a -> a
    void <init>(com.umeng.message.UTrack) -> <init>
    void run() -> run
com.umeng.message.UTrack$4 -> com.umeng.message.UTrack$4:
    com.umeng.message.UTrack a -> a
    void <init>(com.umeng.message.UTrack) -> <init>
    void run() -> run
com.umeng.message.UTrack$5 -> com.umeng.message.UTrack$5:
    com.umeng.message.UTrack a -> a
    void <init>(com.umeng.message.UTrack) -> <init>
    void run() -> run
com.umeng.message.UTrack$6 -> com.umeng.message.UTrack$6:
    com.umeng.message.UTrack a -> a
    void <init>(com.umeng.message.UTrack) -> <init>
    void run() -> run
com.umeng.message.UTrack$7 -> com.umeng.message.UTrack$7:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.message.UTrack c -> c
    void <init>(com.umeng.message.UTrack,java.lang.String,java.lang.String) -> <init>
    void run() -> run
com.umeng.message.UTrack$8 -> com.umeng.message.UTrack$8:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.message.UTrack c -> c
    void <init>(com.umeng.message.UTrack,java.lang.String,java.lang.String) -> <init>
    void run() -> run
com.umeng.message.UmengBaseIntentService -> com.umeng.message.UmengBaseIntentService:
    java.lang.String a -> a
    void <init>() -> <init>
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onError(android.content.Context,java.lang.String) -> a
    void onRegistered(android.content.Context,java.lang.String) -> b
    void onUnregistered(android.content.Context,java.lang.String) -> c
    java.lang.Class getAgooService() -> a
    java.lang.Class callAgooElectionReceiver() -> callAgooElectionReceiver
    java.lang.Class callAgooMessageReceiver() -> callAgooMessageReceiver
    java.lang.Class callAgooRegistrationReceiver() -> callAgooRegistrationReceiver
    java.lang.Class callAgooSystemReceiver() -> callAgooSystemReceiver
    void <clinit>() -> <clinit>
com.umeng.message.UmengDownloadResourceService -> com.umeng.message.UmengDownloadResourceService:
    java.lang.String TAG -> TAG
    java.util.concurrent.ScheduledThreadPoolExecutor a -> a
    android.content.Context b -> b
    java.lang.Thread m -> d
    java.util.ArrayList c -> c
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void notification(com.umeng.message.entity.UMessage) -> notification
    void downloadResource(com.umeng.message.entity.UMessage,int) -> downloadResource
    void setAlarm(com.umeng.message.entity.UMessage,int) -> setAlarm
    void deleteAlarm(com.umeng.message.entity.UMessage,int) -> deleteAlarm
    android.app.PendingIntent a(com.umeng.message.entity.UMessage,int) -> a
    void close(java.io.Closeable) -> close
    void checkCache() -> checkCache
    void checkDir(java.io.File,long,long) -> checkDir
    long a(java.io.File) -> a
    void b(java.io.File,long) -> b
    java.lang.String getMessageResourceFolder(android.content.Context,com.umeng.message.entity.UMessage) -> getMessageResourceFolder
    void a(java.io.File,long) -> a
    java.lang.Thread a(java.lang.Thread) -> a
    void <clinit>() -> <clinit>
com.umeng.message.UmengDownloadResourceService$1 -> com.umeng.message.UmengDownloadResourceService$1:
    java.io.File a -> a
    long b -> b
    void <init>(java.io.File,long) -> <init>
    void run() -> run
com.umeng.message.UmengDownloadResourceService$DownloadResourceTask -> com.umeng.message.UmengDownloadResourceService$DownloadResourceTask:
    com.umeng.message.entity.UMessage a -> a
    java.util.ArrayList b -> b
    int c -> c
    com.umeng.message.UmengDownloadResourceService d -> d
    void <init>(com.umeng.message.UmengDownloadResourceService,com.umeng.message.entity.UMessage,int) -> <init>
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    boolean download(java.lang.String) -> download
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.message.UmengIntentService -> com.umeng.message.UmengIntentService:
    java.lang.String a -> a
    void <init>() -> <init>
    void onMessage(android.content.Context,android.content.Intent) -> a
    void <clinit>() -> <clinit>
com.umeng.message.UmengMessageBootReceiver -> com.umeng.message.UmengMessageBootReceiver:
    java.lang.String b -> b
    android.content.Context d -> c
    java.lang.Runnable a -> a
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    android.content.Context a(com.umeng.message.UmengMessageBootReceiver) -> a
    java.lang.String a() -> a
    void <clinit>() -> <clinit>
com.umeng.message.UmengMessageBootReceiver$1 -> com.umeng.message.UmengMessageBootReceiver$1:
    com.umeng.message.UmengMessageBootReceiver a -> a
    void <init>(com.umeng.message.UmengMessageBootReceiver) -> <init>
    void run() -> run
com.umeng.message.UmengMessageCallbackHandlerService -> com.umeng.message.UmengMessageCallbackHandlerService:
    java.lang.String TAG -> TAG
    android.content.Context a -> a
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void a(android.content.Context,com.umeng.message.entity.UMessage) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void <clinit>() -> <clinit>
com.umeng.message.UmengMessageCallbackHandlerService$1 -> com.umeng.message.UmengMessageCallbackHandlerService$1:
    com.umeng.message.UmengMessageCallbackHandlerService a -> a
    void <init>(com.umeng.message.UmengMessageCallbackHandlerService) -> <init>
    void run() -> run
com.umeng.message.UmengMessageHandler -> com.umeng.message.UmengMessageHandler:
    int a -> a
    java.lang.String b -> b
    java.util.Date c -> c
    java.lang.String d -> d
    com.umeng.message.entity.UMessage e -> e
    void <init>() -> <init>
    void setPrevMessage(com.umeng.message.entity.UMessage) -> setPrevMessage
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
    void dealWithNotificationMessage(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithNotificationMessage
    void a(android.content.Context,android.app.Notification,boolean,com.umeng.message.entity.UMessage) -> a
    void a(android.content.Context) -> a
    void dealWithCustomMessage(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithCustomMessage
    android.app.PendingIntent getClickPendingIntent(android.content.Context,com.umeng.message.entity.UMessage) -> getClickPendingIntent
    android.app.PendingIntent getDismissPendingIntent(android.content.Context,com.umeng.message.entity.UMessage) -> getDismissPendingIntent
    boolean isInNoDisturbTime(android.content.Context) -> isInNoDisturbTime
    int getNotificationDefaults(android.content.Context,com.umeng.message.entity.UMessage) -> getNotificationDefaults
    boolean startDownloadResourceService(android.content.Context,com.umeng.message.entity.UMessage) -> startDownloadResourceService
    boolean a(android.content.Context,android.support.v4.app.NotificationCompat$Builder,com.umeng.message.entity.UMessage) -> a
    int getSmallIconId(android.content.Context,com.umeng.message.entity.UMessage) -> getSmallIconId
    android.graphics.Bitmap getLargeIcon(android.content.Context,com.umeng.message.entity.UMessage) -> getLargeIcon
    android.net.Uri getSound(android.content.Context,com.umeng.message.entity.UMessage) -> getSound
    android.app.Notification getNotification(android.content.Context,com.umeng.message.entity.UMessage) -> getNotification
    void <clinit>() -> <clinit>
com.umeng.message.UmengMessageHandler$1 -> com.umeng.message.UmengMessageHandler$1:
    android.os.PowerManager a -> a
    com.umeng.message.UmengMessageHandler b -> b
    void <init>(com.umeng.message.UmengMessageHandler,android.os.PowerManager) -> <init>
    boolean a() -> a
com.umeng.message.UmengMessageIntentReceiverService -> com.umeng.message.UmengMessageIntentReceiverService:
    void <init>() -> <init>
    java.lang.String getIntentServiceClassName(android.content.Context) -> getIntentServiceClassName
com.umeng.message.UmengNotificationClickHandler -> com.umeng.message.UmengNotificationClickHandler:
    java.lang.String a -> a
    void <init>() -> <init>
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
    void dismissNotification(android.content.Context,com.umeng.message.entity.UMessage) -> dismissNotification
    void autoUpdate(android.content.Context,com.umeng.message.entity.UMessage) -> autoUpdate
    void openUrl(android.content.Context,com.umeng.message.entity.UMessage) -> openUrl
    void openActivity(android.content.Context,com.umeng.message.entity.UMessage) -> openActivity
    void launchApp(android.content.Context,com.umeng.message.entity.UMessage) -> launchApp
    void dealWithCustomAction(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithCustomAction
    android.content.Intent a(android.content.Intent,com.umeng.message.entity.UMessage) -> a
    void <clinit>() -> <clinit>
com.umeng.message.UmengRegistrar -> com.umeng.message.UmengRegistrar:
    java.lang.String b -> a
    void <init>() -> <init>
    org.android.agoo.IMtopService getIMtopService(android.content.Context) -> getIMtopService
    void checkManifest(android.content.Context) -> checkManifest
    void register(android.content.Context,java.lang.String,java.lang.String) -> register
    void a(android.content.Context,boolean) -> a
    boolean isRegisteredToUmeng(android.content.Context) -> isRegisteredToUmeng
    void registerToUmeng(android.content.Context) -> registerToUmeng
    void checkRegisteredToUmeng(android.content.Context) -> checkRegisteredToUmeng
    void <clinit>() -> <clinit>
com.umeng.message.UmengService -> com.umeng.message.UmengService:
    void <init>() -> <init>
com.umeng.message.UpdateActionReceiver -> com.umeng.message.UpdateActionReceiver:
    java.lang.String a -> a
    com.umeng.message.entity.UMessage b -> b
    void <init>(com.umeng.message.entity.UMessage) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <clinit>() -> <clinit>
com.umeng.message.entity.UMessage -> com.umeng.message.a.a:
    java.lang.String msg_id -> a
    java.lang.String message_id -> b
    java.lang.String task_id -> c
    java.lang.String display_type -> d
    java.lang.String alias -> e
    java.lang.String ticker -> f
    java.lang.String title -> g
    java.lang.String text -> h
    boolean play_vibrate -> i
    boolean play_lights -> j
    boolean play_sound -> k
    boolean screen_on -> l
    java.lang.String after_open -> m
    java.lang.String custom -> n
    java.lang.String url -> o
    java.lang.String sound -> p
    java.lang.String img -> q
    java.lang.String icon -> r
    java.lang.String activity -> s
    int builder_id -> t
    java.util.Map extra -> u
    org.json.JSONObject a -> y
    java.lang.String largeIcon -> v
    long random_min -> w
    boolean clickOrDismiss -> x
    void <init>(org.json.JSONObject) -> <init>
    org.json.JSONObject getRaw() -> a
    boolean hasResourceFromInternet() -> b
    boolean isLargeIconFromInternet() -> c
    boolean isSoundFromInternet() -> d
com.umeng.message.example.AddOrUpdateLocalNotificationActivity -> com.umeng.message.example.AddOrUpdateLocalNotificationActivity:
    int CREATE_LOCAL_NOTIFICATION -> b
    int UPDATE_LOCAL_NOTIFICATION -> c
    com.umeng.message.local.UmengLocalNotification localNotification -> d
    android.widget.TextView txvYear -> e
    android.widget.TextView txvMonth -> f
    android.widget.TextView txvDay -> g
    android.widget.EditText edtYear -> h
    android.widget.EditText edtMonth -> i
    android.widget.EditText edtDay -> j
    android.widget.EditText edtHour -> k
    android.widget.EditText edtMinute -> l
    android.widget.EditText edtSecond -> m
    android.widget.EditText edtRepeatingNum -> n
    android.widget.EditText edtRepeatingInterval -> o
    android.widget.Spinner spRepeatingUnit -> p
    android.widget.Spinner spSpecialDay -> q
    android.widget.EditText edtTitle -> r
    android.widget.EditText edtContent -> s
    android.widget.EditText edtTicker -> t
    android.widget.EditText edtFlags -> u
    android.widget.EditText edtDefaults -> v
    android.widget.EditText edtSmallIconDrawable -> w
    android.widget.EditText edtLargeIconDrawable -> x
    android.widget.EditText edtSoundDrawable -> y
    android.widget.Spinner spPlayVibrate -> z
    android.widget.Spinner spPlayLights -> A
    android.widget.Spinner spPlaySound -> B
    android.widget.Spinner spScreenOn -> C
    android.widget.EditText edtLayoutId -> D
    android.widget.EditText edtLayoutTitleId -> E
    android.widget.EditText edtLayoutContentId -> F
    android.widget.EditText edtLayoutIconId -> G
    android.widget.EditText edtLayoutIconDrawableId -> H
    android.os.Handler handler -> I
    android.content.Context mContext -> J
    boolean update -> K
    int specialDay -> L
    java.lang.Runnable runnable -> a
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void initData() -> a
    void initView() -> b
    boolean checkInput() -> c
    void resetDateTimeView(int) -> a
    android.os.Handler access$000(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> a
    android.widget.EditText access$100(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> b
    android.widget.EditText access$200(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> c
    android.widget.TextView access$300(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> d
    android.widget.TextView access$400(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> e
    android.widget.TextView access$500(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> f
    int access$600(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> g
    android.content.Context access$700(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> h
    void access$800(com.umeng.message.example.AddOrUpdateLocalNotificationActivity,int) -> a
    int access$602(com.umeng.message.example.AddOrUpdateLocalNotificationActivity,int) -> b
    boolean access$900(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> i
    android.widget.EditText access$1000(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> j
    com.umeng.message.local.UmengLocalNotification access$1100(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> k
    android.widget.EditText access$1200(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> l
    android.widget.EditText access$1300(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> m
    android.widget.EditText access$1400(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> n
    android.widget.EditText access$1500(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> o
    android.widget.EditText access$1600(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> p
    android.widget.Spinner access$1700(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> q
    android.widget.Spinner access$1800(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> r
    android.widget.EditText access$1900(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> s
    android.widget.EditText access$2000(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> t
    android.widget.EditText access$2100(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> u
    android.widget.EditText access$2200(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> v
    android.widget.EditText access$2300(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> w
    android.widget.EditText access$2400(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> x
    android.widget.EditText access$2500(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> y
    android.widget.EditText access$2600(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> z
    android.widget.Spinner access$2700(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> A
    android.widget.Spinner access$2800(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> B
    android.widget.Spinner access$2900(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> C
    android.widget.Spinner access$3000(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> D
    android.widget.EditText access$3100(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> E
    android.widget.EditText access$3200(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> F
    android.widget.EditText access$3300(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> G
    android.widget.EditText access$3400(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> H
    android.widget.EditText access$3500(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> I
    boolean access$3600(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> J
com.umeng.message.example.AddOrUpdateLocalNotificationActivity$1 -> com.umeng.message.example.a:
    com.umeng.message.example.AddOrUpdateLocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.message.example.AddOrUpdateLocalNotificationActivity$2 -> com.umeng.message.example.b:
    com.umeng.message.example.AddOrUpdateLocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.message.example.AddOrUpdateLocalNotificationActivity$3 -> com.umeng.message.example.c:
    com.umeng.message.example.AddOrUpdateLocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.message.example.AddOrUpdateLocalNotificationActivity$4 -> com.umeng.message.example.d:
    com.umeng.message.example.AddOrUpdateLocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.message.example.AddOrUpdateLocalNotificationActivity$5 -> com.umeng.message.example.e:
    com.umeng.message.example.AddOrUpdateLocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.umeng.message.example.AddOrUpdateLocalNotificationActivity$6 -> com.umeng.message.example.f:
    com.umeng.message.example.AddOrUpdateLocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.message.example.AddOrUpdateLocalNotificationActivity$7 -> com.umeng.message.example.g:
    com.umeng.message.example.AddOrUpdateLocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.AddOrUpdateLocalNotificationActivity) -> <init>
    void run() -> run
com.umeng.message.example.Helper -> com.umeng.message.example.h:
    boolean isServiceRunning(android.content.Context,java.lang.String) -> a
com.umeng.message.example.LocalNotificationActivity -> com.umeng.message.example.LocalNotificationActivity:
    int GET_LOCAL_NOTIFICATIONS -> g
    int CLEAR_LOCAL_NOTIFICATIONS -> h
    int DELETE_LOCAL_NOTIFICATION -> i
    int REFRESH_LOCAL_NOTIFICATIONS -> j
    java.util.List localNotifications -> k
    android.os.Handler handler -> l
    android.content.Context mContext -> m
    android.widget.ListView mListView1 -> n
    com.umeng.message.example.LocalNotificationActivity$MyAdapter myAdapter -> o
    android.widget.ImageView ivDeleteText -> p
    android.widget.EditText etSearch -> q
    android.widget.Button btnSearch -> r
    int mCurPos -> s
    java.lang.String searchText -> t
    java.lang.Runnable runnable -> a
    java.lang.Runnable runnable1 -> b
    java.lang.Runnable runnable2 -> c
    java.lang.Runnable runnable3 -> d
    java.lang.Runnable runnable4 -> e
    java.lang.Runnable runnable5 -> f
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.widget.EditText access$000(com.umeng.message.example.LocalNotificationActivity) -> a
    android.os.Handler access$100(com.umeng.message.example.LocalNotificationActivity) -> b
    android.widget.ImageView access$200(com.umeng.message.example.LocalNotificationActivity) -> c
    android.content.Context access$300(com.umeng.message.example.LocalNotificationActivity) -> d
    java.lang.String access$402(com.umeng.message.example.LocalNotificationActivity,java.lang.String) -> a
    com.umeng.message.example.LocalNotificationActivity$MyAdapter access$502(com.umeng.message.example.LocalNotificationActivity,com.umeng.message.example.LocalNotificationActivity$MyAdapter) -> a
    java.util.List access$600(com.umeng.message.example.LocalNotificationActivity) -> e
    com.umeng.message.example.LocalNotificationActivity$MyAdapter access$500(com.umeng.message.example.LocalNotificationActivity) -> f
    android.widget.ListView access$700(com.umeng.message.example.LocalNotificationActivity) -> g
    java.util.List access$602(com.umeng.message.example.LocalNotificationActivity,java.util.List) -> a
    int access$800(com.umeng.message.example.LocalNotificationActivity) -> h
    java.lang.String access$400(com.umeng.message.example.LocalNotificationActivity) -> i
com.umeng.message.example.LocalNotificationActivity$1 -> com.umeng.message.example.i:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
com.umeng.message.example.LocalNotificationActivity$10 -> com.umeng.message.example.j:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void run() -> run
com.umeng.message.example.LocalNotificationActivity$11 -> com.umeng.message.example.k:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void run() -> run
com.umeng.message.example.LocalNotificationActivity$12 -> com.umeng.message.example.l:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void run() -> run
com.umeng.message.example.LocalNotificationActivity$13 -> com.umeng.message.example.m:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void run() -> run
com.umeng.message.example.LocalNotificationActivity$14 -> com.umeng.message.example.n:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void run() -> run
com.umeng.message.example.LocalNotificationActivity$15 -> com.umeng.message.example.o:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void run() -> run
com.umeng.message.example.LocalNotificationActivity$2 -> com.umeng.message.example.p:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.umeng.message.example.LocalNotificationActivity$3 -> com.umeng.message.example.q:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.umeng.message.example.LocalNotificationActivity$4 -> com.umeng.message.example.s:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.umeng.message.example.LocalNotificationActivity$5 -> com.umeng.message.example.t:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.message.example.LocalNotificationActivity$6 -> com.umeng.message.example.u:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.message.example.LocalNotificationActivity$7 -> com.umeng.message.example.v:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.message.example.LocalNotificationActivity$8 -> com.umeng.message.example.w:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.message.example.LocalNotificationActivity$9 -> com.umeng.message.example.x:
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.message.example.LocalNotificationActivity$MyAdapter -> com.umeng.message.example.y:
    java.util.List localNotifications -> b
    int id_row_layout -> c
    android.view.LayoutInflater mInflater -> d
    com.umeng.message.example.LocalNotificationActivity this$0 -> a
    void <init>(com.umeng.message.example.LocalNotificationActivity,android.content.Context,int) -> <init>
    void setLocalNotifications(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.umeng.message.example.LocalNotificationActivity$MyAdapter$ViewHolder -> com.umeng.message.example.z:
    android.widget.TextView txt1 -> a
    android.widget.TextView txt2 -> b
    android.widget.TextView txt3 -> c
    com.umeng.message.example.LocalNotificationActivity$MyAdapter this$1 -> d
    void <init>(com.umeng.message.example.LocalNotificationActivity$MyAdapter) -> <init>
com.umeng.message.example.MainActivity -> com.umeng.message.example.MainActivity:
    java.lang.String TAG -> a
    android.widget.EditText edTag -> f
    android.widget.EditText edAlias -> g
    android.widget.EditText edExclusiveAlias -> h
    android.widget.EditText edAliasType -> i
    android.widget.TextView tvStatus -> j
    android.widget.TextView infoTextView -> k
    android.widget.ImageView btnEnable -> l
    android.widget.Button btnaAddTag -> m
    android.widget.Button btnListTag -> n
    android.widget.Button btnAddAlias -> o
    android.widget.Button btnAddExclusiveAlias -> p
    android.widget.Button btnLocalNotification -> q
    android.app.ProgressDialog dialog -> r
    android.widget.Spinner spAliasType -> s
    com.umeng.message.PushAgent mPushAgent -> t
    boolean edAliasTypeFocus -> u
    android.view.View$OnClickListener clickListener -> b
    android.os.Handler handler -> c
    com.umeng.message.IUmengRegisterCallback mRegisterCallback -> d
    com.umeng.message.IUmengUnregisterCallback mUnregisterCallback -> e
    android.widget.Toast mToast -> v
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void printKeyValue() -> c
    void switchPush() -> d
    void updateStatus() -> e
    void copyToClipBoard() -> f
    void addTag() -> g
    void listTags() -> h
    void localNotification() -> i
    void addAlias() -> j
    void addExclusiveAlias() -> k
    void showLoading() -> a
    void updateInfo(java.lang.String) -> a
    void toast(java.lang.String) -> b
    void hideInputKeyboard() -> b
    boolean access$002(com.umeng.message.example.MainActivity,boolean) -> a
    boolean access$000(com.umeng.message.example.MainActivity) -> a
    android.widget.Spinner access$100(com.umeng.message.example.MainActivity) -> b
    android.widget.EditText access$200(com.umeng.message.example.MainActivity) -> c
    android.widget.Button access$300(com.umeng.message.example.MainActivity) -> d
    void access$400(com.umeng.message.example.MainActivity) -> e
    android.widget.Button access$500(com.umeng.message.example.MainActivity) -> f
    void access$600(com.umeng.message.example.MainActivity) -> g
    android.widget.Button access$700(com.umeng.message.example.MainActivity) -> h
    void access$800(com.umeng.message.example.MainActivity) -> i
    android.widget.Button access$900(com.umeng.message.example.MainActivity) -> j
    void access$1000(com.umeng.message.example.MainActivity) -> k
    android.widget.ImageView access$1100(com.umeng.message.example.MainActivity) -> l
    void access$1200(com.umeng.message.example.MainActivity) -> m
    android.widget.TextView access$1300(com.umeng.message.example.MainActivity) -> n
    void access$1400(com.umeng.message.example.MainActivity) -> o
    android.widget.Button access$1500(com.umeng.message.example.MainActivity) -> p
    void access$1600(com.umeng.message.example.MainActivity) -> q
    com.umeng.message.PushAgent access$1700(com.umeng.message.example.MainActivity) -> r
    android.widget.EditText access$1800(com.umeng.message.example.MainActivity) -> s
    android.widget.EditText access$1900(com.umeng.message.example.MainActivity) -> t
    android.widget.EditText access$2000(com.umeng.message.example.MainActivity) -> u
    void <clinit>() -> <clinit>
com.umeng.message.example.MainActivity$1 -> com.umeng.message.example.aa:
    com.umeng.message.example.MainActivity this$0 -> a
    void <init>(com.umeng.message.example.MainActivity) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.umeng.message.example.MainActivity$2 -> com.umeng.message.example.ab:
    com.umeng.message.example.MainActivity this$0 -> a
    void <init>(com.umeng.message.example.MainActivity) -> <init>
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.umeng.message.example.MainActivity$3 -> com.umeng.message.example.ac:
    com.umeng.message.example.MainActivity this$0 -> a
    void <init>(com.umeng.message.example.MainActivity) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.umeng.message.example.MainActivity$4 -> com.umeng.message.example.ad:
    com.umeng.message.example.MainActivity this$0 -> a
    void <init>(com.umeng.message.example.MainActivity) -> <init>
    void onRegistered(java.lang.String) -> onRegistered
com.umeng.message.example.MainActivity$5 -> com.umeng.message.example.ae:
    com.umeng.message.example.MainActivity this$0 -> a
    void <init>(com.umeng.message.example.MainActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.umeng.message.example.MainActivity$6 -> com.umeng.message.example.af:
    com.umeng.message.example.MainActivity this$0 -> a
    void <init>(com.umeng.message.example.MainActivity) -> <init>
    void onRegistered(java.lang.String) -> onRegistered
com.umeng.message.example.MainActivity$6$1 -> com.umeng.message.example.ag:
    com.umeng.message.example.MainActivity$6 this$1 -> a
    void <init>(com.umeng.message.example.MainActivity$6) -> <init>
    void run() -> run
com.umeng.message.example.MainActivity$7 -> com.umeng.message.example.ah:
    com.umeng.message.example.MainActivity this$0 -> a
    void <init>(com.umeng.message.example.MainActivity) -> <init>
    void onUnregistered(java.lang.String) -> onUnregistered
com.umeng.message.example.MainActivity$7$1 -> com.umeng.message.example.ai:
    com.umeng.message.example.MainActivity$7 this$1 -> a
    void <init>(com.umeng.message.example.MainActivity$7) -> <init>
    void run() -> run
com.umeng.message.example.MainActivity$AddAliasTask -> com.umeng.message.example.aj:
    java.lang.String alias -> a
    java.lang.String aliasType -> b
    com.umeng.message.example.MainActivity this$0 -> c
    void <init>(com.umeng.message.example.MainActivity,java.lang.String,java.lang.String) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.message.example.MainActivity$AddExclusiveAliasTask -> com.umeng.message.example.ak:
    java.lang.String exclusiveAlias -> a
    java.lang.String aliasType -> b
    com.umeng.message.example.MainActivity this$0 -> c
    void <init>(com.umeng.message.example.MainActivity,java.lang.String,java.lang.String) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.message.example.MainActivity$AddTagTask -> com.umeng.message.example.al:
    java.lang.String tagString -> a
    java.lang.String[] tags -> b
    com.umeng.message.example.MainActivity this$0 -> c
    void <init>(com.umeng.message.example.MainActivity,java.lang.String) -> <init>
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.message.example.MainActivity$ListTagTask -> com.umeng.message.example.am:
    com.umeng.message.example.MainActivity this$0 -> a
    void <init>(com.umeng.message.example.MainActivity) -> <init>
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.message.example.MyApplication -> com.umeng.message.example.MyApplication:
    java.lang.String TAG -> a
    com.umeng.message.PushAgent mPushAgent -> b
    void <init>() -> <init>
    void onCreate() -> onCreate
    void <clinit>() -> <clinit>
com.umeng.message.example.MyApplication$1 -> com.umeng.message.example.an:
    com.umeng.message.example.MyApplication this$0 -> a
    void <init>(com.umeng.message.example.MyApplication) -> <init>
    void dealWithCustomMessage(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithCustomMessage
    android.app.Notification getNotification(android.content.Context,com.umeng.message.entity.UMessage) -> getNotification
com.umeng.message.example.MyApplication$1$1 -> com.umeng.message.example.ao:
    com.umeng.message.entity.UMessage val$msg -> a
    android.content.Context val$context -> b
    com.umeng.message.example.MyApplication$1 this$1 -> c
    void <init>(com.umeng.message.example.MyApplication$1,com.umeng.message.entity.UMessage,android.content.Context) -> <init>
    void run() -> run
com.umeng.message.example.MyApplication$2 -> com.umeng.message.example.ap:
    com.umeng.message.example.MyApplication this$0 -> a
    void <init>(com.umeng.message.example.MyApplication) -> <init>
    void dealWithCustomAction(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithCustomAction
com.umeng.message.example.MyPushIntentService -> com.umeng.message.example.MyPushIntentService:
    java.lang.String TAG -> a
    void <init>() -> <init>
    void onMessage(android.content.Context,android.content.Intent) -> a
    void <clinit>() -> <clinit>
com.umeng.message.example.NotificationService -> com.umeng.message.example.NotificationService:
    void <init>() -> <init>
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.umeng.message.example.R -> com.umeng.message.example.R:
com.umeng.message.example.R$array -> com.umeng.message.example.R$array:
    int playLights -> playLights
    int playSound -> playSound
    int playVibrate -> playVibrate
    int repeatingUnit -> repeatingUnit
    int screenOn -> screenOn
    int specialDay -> specialDay
    void <init>() -> <init>
com.umeng.message.example.R$attr -> com.umeng.message.example.R$attr:
    void <init>() -> <init>
com.umeng.message.example.R$color -> com.umeng.message.example.R$color:
    int black -> black
    int green -> green
    int white -> white
    void <init>() -> <init>
com.umeng.message.example.R$dimen -> com.umeng.message.example.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    void <init>() -> <init>
com.umeng.message.example.R$drawable -> com.umeng.message.example.R$drawable:
    int close_button -> close_button
    int delete -> delete
    int ic_launcher -> ic_launcher
    int list_item_color_bg -> list_item_color_bg
    int open_button -> open_button
    int search_btn_background -> search_btn_background
    int search_frame -> search_frame
    int search_top_background -> search_top_background
    int top_background -> top_background
    int umeng_push_notification_default_large_icon -> umeng_push_notification_default_large_icon
    int umeng_push_notification_default_small_below5 -> umeng_push_notification_default_small_below5
    int umeng_push_notification_default_small_icon -> umeng_push_notification_default_small_icon
    void <init>() -> <init>
com.umeng.message.example.R$id -> com.umeng.message.example.R$id:
    int Content -> Content
    int Datetime -> Datetime
    int Title -> Title
    int btnAddAlias -> btnAddAlias
    int btnAddExclusiveAlias -> btnAddExclusiveAlias
    int btnAddTags -> btnAddTags
    int btnEnable -> btnEnable
    int btnListTags -> btnListTags
    int btnLocalNotification -> btnLocalNotification
    int btnSearch -> btnSearch
    int builderLl -> builderLl
    int contentLl -> contentLl
    int dayTxv -> dayTxv
    int edAlias -> edAlias
    int edAliasType -> edAliasType
    int edExclusiveAlias -> edExclusiveAlias
    int edTag -> edTag
    int edtContent -> edtContent
    int edtDay -> edtDay
    int edtDefaults -> edtDefaults
    int edtFlags -> edtFlags
    int edtHour -> edtHour
    int edtLargeIconDrawable -> edtLargeIconDrawable
    int edtLayoutContentId -> edtLayoutContentId
    int edtLayoutIconDrawableId -> edtLayoutIconDrawableId
    int edtLayoutIconId -> edtLayoutIconId
    int edtLayoutId -> edtLayoutId
    int edtLayoutTitleId -> edtLayoutTitleId
    int edtMinute -> edtMinute
    int edtMonth -> edtMonth
    int edtRepeatingInterval -> edtRepeatingInterval
    int edtRepeatingNum -> edtRepeatingNum
    int edtSecond -> edtSecond
    int edtSmallIconDrawable -> edtSmallIconDrawable
    int edtSoundDrawable -> edtSoundDrawable
    int edtTicker -> edtTicker
    int edtTitle -> edtTitle
    int edtYear -> edtYear
    int etSearch -> etSearch
    int flagsLl -> flagsLl
    int hmsLl -> hmsLl
    int info -> info
    int ivDeleteText -> ivDeleteText
    int largeIconDrawableLl -> largeIconDrawableLl
    int layoutContentLl -> layoutContentLl
    int layoutIconDrawableLl -> layoutIconDrawableLl
    int layoutIconLl -> layoutIconLl
    int layoutIdLl -> layoutIdLl
    int layoutTitleLl -> layoutTitleLl
    int lv -> lv
    int monthTxv -> monthTxv
    int notificationLl -> notificationLl
    int notification_large_icon -> notification_large_icon
    int notification_small_icon -> notification_small_icon
    int notification_text -> notification_text
    int notification_title -> notification_title
    int play1Ll -> play1Ll
    int play2Ll -> play2Ll
    int repeatingLl -> repeatingLl
    int rlSearchFrameDelete -> rlSearchFrameDelete
    int smallIconDrawableLl -> smallIconDrawableLl
    int soundDrawableLl -> soundDrawableLl
    int spAliasType -> spAliasType
    int spPlayLights -> spPlayLights
    int spPlaySound -> spPlaySound
    int spPlayVibrate -> spPlayVibrate
    int spRepeatingUnit -> spRepeatingUnit
    int spScreenOn -> spScreenOn
    int spSpecialDay -> spSpecialDay
    int specialDayLl -> specialDayLl
    int tickerLl -> tickerLl
    int titleLl -> titleLl
    int top -> top
    int tvStatus -> tvStatus
    int yearTxv -> yearTxv
    int ymdLl -> ymdLl
    void <init>() -> <init>
com.umeng.message.example.R$layout -> com.umeng.message.example.R$layout:
    int activity_add_localnotification -> activity_add_localnotification
    int activity_localnotification -> activity_localnotification
    int activity_main -> activity_main
    int activity_test -> activity_test
    int localnotification_item -> localnotification_item
    int notification_view -> notification_view
    void <init>() -> <init>
com.umeng.message.example.R$raw -> com.umeng.message.example.R$raw:
    int umeng_push_notification_default_sound -> umeng_push_notification_default_sound
    int xinwenlianbo -> xinwenlianbo
    void <init>() -> <init>
com.umeng.message.example.R$string -> com.umeng.message.example.R$string:
    int add_local_notification -> add_local_notification
    int app_name -> app_name
    int builderSetting -> builderSetting
    int clear_local_notification -> clear_local_notification
    int content -> content
    int create_local_notification -> create_local_notification
    int day -> day
    int defaults -> defaults
    int flags -> flags
    int hour -> hour
    int largeIconDrawable -> largeIconDrawable
    int layoutContentId -> layoutContentId
    int layoutIconDrawableId -> layoutIconDrawableId
    int layoutIconId -> layoutIconId
    int layoutId -> layoutId
    int layoutTitleId -> layoutTitleId
    int local_notification -> local_notification
    int local_notification_content -> local_notification_content
    int local_notification_datetime -> local_notification_datetime
    int local_notification_repeatinginterval -> local_notification_repeatinginterval
    int local_notification_repeatingnum -> local_notification_repeatingnum
    int local_notification_repeatingunit -> local_notification_repeatingunit
    int local_notification_specialday -> local_notification_specialday
    int local_notification_ticker -> local_notification_ticker
    int local_notification_title -> local_notification_title
    int lunarDay -> lunarDay
    int lunarMonth -> lunarMonth
    int lunarYear -> lunarYear
    int minute -> minute
    int modify_local_notification -> modify_local_notification
    int month -> month
    int needed -> needed
    int new_local_notification -> new_local_notification
    int notificationSetting -> notificationSetting
    int playLights -> playLights
    int playSound -> playSound
    int playVibrate -> playVibrate
    int repeatingInterval -> repeatingInterval
    int repeatingNum -> repeatingNum
    int repeatingNumHint -> repeatingNumHint
    int repeatingUnit -> repeatingUnit
    int screenOn -> screenOn
    int search -> search
    int search_text -> search_text
    int second -> second
    int smallIconDrawable -> smallIconDrawable
    int soundDrawable -> soundDrawable
    int specialDay -> specialDay
    int ticker -> ticker
    int title -> title
    int update_local_notification -> update_local_notification
    int year -> year
    void <init>() -> <init>
com.umeng.message.example.R$style -> com.umeng.message.example.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    void <init>() -> <init>
com.umeng.message.example.TestActivity -> com.umeng.message.example.TestActivity:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void gotoMainActivity(android.view.View) -> gotoMainActivity
    void onBackPressed() -> onBackPressed
com.umeng.message.local.UmengCalendar -> com.umeng.message.local.a:
    int[] a -> a
    char[] b -> b
    int[] c -> c
    int[][] d -> d
    int[][] e -> e
    int a(int) -> a
    int iGetLMonthDays(int,int) -> a
    java.lang.String a(java.util.Date,int) -> a
    java.lang.String lunarTosolar(java.lang.String) -> a
    java.lang.String solarTolunar(java.lang.String) -> b
    java.util.Date a(java.lang.String) -> c
    java.util.Date b(java.lang.String) -> d
    java.util.Calendar c(java.lang.String) -> e
    java.util.Date d(java.lang.String) -> f
    boolean b(int) -> b
    void <clinit>() -> <clinit>
com.umeng.message.local.UmengLocalNotification -> com.umeng.message.local.b:
    java.lang.String a -> a
    java.lang.String p -> b
    int q -> c
    int s -> d
    int u -> e
    int w -> f
    int x -> g
    int y -> h
    int z -> i
    int A -> j
    int B -> k
    int C -> l
    java.lang.String D -> m
    java.lang.String E -> n
    java.lang.String F -> o
    com.umeng.message.local.UmengNotificationBuilder G -> p
    void <init>() -> <init>
    void <init>(android.database.Cursor) -> <init>
    java.lang.String getId() -> a
    int getYear() -> b
    void setYear(int) -> a
    int getMonth() -> c
    void setMonth(int) -> b
    int getDay() -> d
    void setDay(int) -> c
    int getHour() -> e
    void setHour(int) -> d
    int getMinute() -> f
    void setMinute(int) -> e
    int getSecond() -> g
    void setSecond(int) -> f
    int getRepeatingNum() -> h
    void setRepeatingNum(int) -> g
    int getRepeatingUnit() -> i
    void setRepeatingUnit(int) -> h
    int getRepeatingInterval() -> j
    void setRepeatingInterval(int) -> i
    int getSpecialDay() -> k
    void setSpecialDay(int) -> j
    java.lang.String getTitle() -> l
    void setTitle(java.lang.String) -> a
    java.lang.String getContent() -> m
    void setContent(java.lang.String) -> b
    java.lang.String getTicker() -> n
    void setTicker(java.lang.String) -> c
    com.umeng.message.local.UmengNotificationBuilder getNotificationBuilder() -> o
    void setNotificationBuilder(com.umeng.message.local.UmengNotificationBuilder) -> a
    java.lang.String getDateTime() -> p
    boolean validateDateTime() -> q
    boolean validateData(android.content.Context) -> a
    android.content.ContentValues getContentValues() -> r
    void <clinit>() -> <clinit>
com.umeng.message.local.UmengLocalNotificationHelper -> com.umeng.message.local.c:
    java.lang.String a -> a
    void <init>() -> <init>
    long getTimeAndUpdateLocalNotification(android.content.Context,com.umeng.message.local.UmengLocalNotification) -> a
    long getTimeFromDate(java.lang.String) -> a
    java.lang.String getDateFromTime(long) -> a
    long getQingMingTime(int,int,int,int) -> a
    java.lang.String getDateTime(int,int,int,int,int,int) -> a
    void <clinit>() -> <clinit>
com.umeng.message.local.UmengLocalNotificationManager -> com.umeng.message.local.d:
    java.lang.String a -> a
    com.umeng.message.local.UmengLocalNotificationManager b -> b
    android.content.Context c -> c
    void <init>(android.content.Context) -> <init>
    com.umeng.message.local.UmengLocalNotificationManager getInstance(android.content.Context) -> a
    com.umeng.message.local.UmengLocalNotification findLocalNotification(java.lang.String) -> a
    java.util.List findLocalNotifications(java.lang.String) -> b
    java.util.List findAllLocalNotifications() -> a
    boolean addLocalNotification(com.umeng.message.local.UmengLocalNotification) -> a
    boolean updateLocalNotification(com.umeng.message.local.UmengLocalNotification) -> b
    boolean deleteLocalNotification(java.lang.String) -> c
    boolean deleteAllLocalNotifications() -> b
    void resetLocalNotifications() -> c
    void a(java.lang.String,java.lang.String) -> a
    void <clinit>() -> <clinit>
com.umeng.message.local.UmengLocalNotificationService -> com.umeng.message.local.UmengLocalNotificationService:
    java.lang.String a -> a
    android.content.Context b -> b
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void onDestroy() -> onDestroy
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    android.app.PendingIntent d(java.lang.String,java.lang.String) -> d
    void <clinit>() -> <clinit>
com.umeng.message.local.UmengLocalNotificationStore -> com.umeng.message.local.e:
    java.lang.String a -> a
    com.umeng.message.local.UmengLocalNotificationStore b -> b
    android.database.sqlite.SQLiteDatabase c -> c
    com.umeng.message.local.UmengLocalNotificationStore$a d -> d
    android.content.Context e -> e
    com.umeng.message.local.UmengLocalNotificationStore getInstance(android.content.Context) -> a
    void <init>(android.content.Context) -> <init>
    com.umeng.message.local.UmengLocalNotification findLocalNotification(java.lang.String) -> a
    java.util.List findLocalNotifications(java.lang.String) -> b
    java.util.List findAllLocalNotifications() -> a
    boolean addLocalNotification(com.umeng.message.local.UmengLocalNotification) -> a
    boolean updateLocalNotification(com.umeng.message.local.UmengLocalNotification) -> b
    boolean deleteLocalNotification(java.lang.String) -> c
    void deleteAllLocalNotifications() -> b
    void <clinit>() -> <clinit>
com.umeng.message.local.UmengLocalNotificationStore$a -> com.umeng.message.local.f:
    com.umeng.message.local.UmengLocalNotificationStore a -> a
    void <init>(com.umeng.message.local.UmengLocalNotificationStore,android.content.Context) -> <init>
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.message.local.UmengNotificationBuilder -> com.umeng.message.local.g:
    java.lang.String a -> a
    java.lang.String v -> b
    java.lang.String w -> c
    int x -> d
    int y -> e
    java.lang.String z -> f
    java.lang.String A -> g
    java.lang.String B -> h
    boolean C -> i
    boolean D -> j
    boolean E -> k
    boolean F -> l
    int G -> m
    int H -> n
    int I -> o
    int J -> p
    int K -> q
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(android.database.Cursor) -> <init>
    android.app.Notification builder(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void showNotification(android.content.Context,android.app.Notification) -> a
    android.app.PendingIntent a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    android.graphics.Bitmap d(android.content.Context) -> d
    android.net.Uri e(android.content.Context) -> e
    boolean f(android.content.Context) -> f
    void g(android.content.Context) -> g
    java.lang.String getId() -> a
    java.lang.String getLocalNotificationId() -> b
    void setLocalNotificationId(java.lang.String) -> a
    int getDefaults() -> c
    void setDefaults(int) -> a
    int getFlags() -> d
    void setFlags(int) -> b
    int getLayoutId() -> e
    void setLayoutId(int) -> c
    int getLayoutTitleId() -> f
    void setLayoutTitleId(int) -> d
    int getLayoutContentId() -> g
    void setLayoutContentId(int) -> e
    int getLayoutIconId() -> h
    void setLayoutIconId(int) -> f
    int getLayoutIconDrawableId() -> i
    void setLayoutIconDrawableId(int) -> g
    java.lang.String getSmallIconDrawable() -> j
    void setSmallIconDrawable(java.lang.String) -> b
    java.lang.String getLargeIconDrawable() -> k
    void setLargeIconDrawable(java.lang.String) -> c
    java.lang.String getSoundDrawable() -> l
    void setSoundDrawable(java.lang.String) -> d
    boolean isPlayVibrate() -> m
    void setPlayVibrate(boolean) -> a
    boolean isPlayLights() -> n
    void setPlayLights(boolean) -> b
    boolean isPlaySound() -> o
    void setPlaySound(boolean) -> c
    boolean isScreenOn() -> p
    void setScreenOn(boolean) -> d
    android.content.ContentValues getContentValues() -> q
    void <clinit>() -> <clinit>
com.umeng.message.local.UmengNotificationBuilder$1 -> com.umeng.message.local.h:
    android.os.PowerManager a -> a
    com.umeng.message.local.UmengNotificationBuilder b -> b
    void <init>(com.umeng.message.local.UmengNotificationBuilder,android.os.PowerManager) -> <init>
    boolean a() -> a
com.umeng.message.proguard.A -> com.umeng.message.b.a:
    android.database.sqlite.SQLiteOpenHelper q -> a
    com.umeng.message.proguard.A r -> b
    android.content.Context s -> c
    void <init>(android.content.Context) -> <init>
    com.umeng.message.proguard.A a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,int,long,int,int) -> a
    boolean b(java.lang.String) -> a
    boolean a(java.lang.String,int) -> a
    long a(long,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,long,int,int) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.A$a -> com.umeng.message.b.b:
    void <init>(android.content.Context) -> <init>
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.message.proguard.B -> com.umeng.message.b.c:
    boolean a -> a
    java.lang.String b -> b
    void <init>(boolean,java.lang.String) -> <init>
    long a() -> a
    long b() -> b
    long c() -> c
    long f() -> d
    long a(long) -> a
    long g() -> e
    long h() -> f
    long i() -> g
    long j() -> h
com.umeng.message.proguard.C -> com.umeng.message.b.d:
    java.lang.String l -> f
    long J -> g
    long K -> h
    long L -> i
    long M -> j
    long N -> k
    long O -> l
    long P -> m
    long Q -> n
    long R -> o
    long S -> p
    long T -> q
    long U -> r
    org.android.agoo.net.channel.ChannelManager V -> s
    org.android.agoo.net.channel.ChannelManager$Builder W -> t
    com.umeng.message.proguard.B X -> u
    java.lang.String Y -> v
    boolean Z -> w
    boolean aa -> x
    boolean ab -> y
    org.android.agoo.net.channel.ChannelType ac -> z
    java.lang.String ad -> A
    int af -> B
    org.android.agoo.net.channel.IPushHandler ag -> C
    java.util.Random ah -> D
    void <init>(android.content.Context,com.umeng.message.proguard.z) -> <init>
    void m() -> l
    void a(android.content.Context,android.content.Intent) -> a
    void b(android.content.Context,android.content.Intent) -> b
    void n() -> m
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void c(android.content.Context,android.content.Intent) -> c
    void a(java.util.Map) -> a
    void d(android.content.Context) -> d
    void o() -> n
    void a(java.lang.Object,org.android.agoo.net.channel.ChannelError,java.util.Map,java.lang.Throwable) -> a
    void b(java.lang.Object,org.android.agoo.net.channel.ChannelError,java.util.Map,java.lang.Throwable) -> b
    long p() -> o
    void a(java.lang.Object,long,java.lang.String) -> a
    void a(long,java.lang.String) -> a
    void a(long,java.lang.String,int) -> a
    void a(long,java.lang.String,boolean,boolean,int) -> a
    void e(android.content.Context,android.content.Intent) -> d
    void e() -> a
    boolean f() -> b
    void i() -> c
    void f(android.content.Context,android.content.Intent) -> e
    boolean e(android.content.Context) -> e
    void f(java.lang.String) -> a
    android.os.Bundle a(long) -> a
    long a(com.umeng.message.proguard.C,long) -> a
    java.lang.String j() -> d
    long a(com.umeng.message.proguard.C) -> a
    org.android.agoo.net.channel.ChannelManager$Builder b(com.umeng.message.proguard.C) -> b
    int k() -> e
    int l() -> f
    long c(com.umeng.message.proguard.C) -> c
    long b(com.umeng.message.proguard.C,long) -> b
    org.android.agoo.net.channel.ChannelManager d(com.umeng.message.proguard.C) -> d
    org.android.agoo.net.channel.ChannelType e(com.umeng.message.proguard.C) -> e
    void a(com.umeng.message.proguard.C,java.lang.Object,long,java.lang.String) -> a
    void a(com.umeng.message.proguard.C,java.lang.Object,org.android.agoo.net.channel.ChannelError,java.util.Map,java.lang.Throwable) -> a
    long c(com.umeng.message.proguard.C,long) -> c
    void <clinit>() -> <clinit>
com.umeng.message.proguard.C$1 -> com.umeng.message.b.e:
    com.umeng.message.proguard.C a -> a
    void <init>(com.umeng.message.proguard.C) -> <init>
    void onPing(java.lang.Object,long) -> a
    void a(java.lang.Object,long) -> c
    void onDisconnected(java.lang.Object,long) -> b
    void onData(java.lang.Object,long,java.lang.String,byte[]) -> a
    void onConnected(java.lang.Object,long,long,java.util.Map) -> a
    void onError(java.lang.Object,long,org.android.agoo.net.channel.ChannelError,java.util.Map,java.lang.Throwable) -> a
com.umeng.message.proguard.C$2 -> com.umeng.message.b.f:
    com.umeng.message.proguard.C a -> a
    void <init>(com.umeng.message.proguard.C) -> <init>
    void onResponse(java.lang.Object,java.lang.String,int,java.util.Map,byte[]) -> a
com.umeng.message.proguard.C$3 -> com.umeng.message.b.g:
    int[] a -> a
    int[] b -> b
    int[] c -> c
    void <clinit>() -> <clinit>
com.umeng.message.proguard.D -> com.umeng.message.b.h:
    java.lang.String A -> a
    int B -> b
    java.lang.String C -> c
    boolean D -> d
    java.lang.String E -> e
    java.lang.String F -> f
    void <init>(android.content.Context) -> <init>
    void a(android.content.Context,android.net.NetworkInfo) -> a
    void c(android.content.Context) -> b
    boolean a(android.content.Context) -> a
    void a(java.lang.String) -> a
    boolean a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    int e() -> e
    java.lang.String f() -> f
com.umeng.message.proguard.E -> com.umeng.message.b.i:
    com.umeng.message.proguard.E a -> a
    com.umeng.message.proguard.E b -> b
    com.umeng.message.proguard.E c -> c
    com.umeng.message.proguard.E d -> d
    java.lang.String e -> e
    com.umeng.message.proguard.E[] f -> f
    com.umeng.message.proguard.E[] values() -> values
    com.umeng.message.proguard.E valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String a() -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.F -> com.umeng.message.b.j:
    java.lang.String f -> b
    android.content.Context i -> c
    java.lang.String j -> d
    int k -> e
    int l -> f
    int m -> g
    java.util.concurrent.locks.ReentrantLock n -> h
    com.umeng.message.proguard.F o -> i
    boolean e -> a
    java.lang.String p -> j
    java.lang.String q -> k
    java.lang.String r -> l
    java.lang.String s -> m
    java.lang.String t -> n
    java.lang.String u -> o
    java.lang.String v -> p
    java.lang.String w -> q
    int x -> r
    boolean y -> s
    void <init>(android.content.Context,int,boolean) -> <init>
    java.lang.String c() -> c
    java.lang.String a(android.os.Build,java.lang.String) -> a
    com.umeng.message.proguard.F a(android.content.Context,int,boolean) -> a
    java.lang.String d() -> d
    void a(java.io.FileOutputStream) -> a
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    void a() -> a
    void a(int) -> a
    void b() -> b
    android.app.PendingIntent a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,android.app.AlarmManager,android.app.PendingIntent,long) -> a
    void b(android.content.Context,android.app.AlarmManager,android.app.PendingIntent,long) -> b
    void <clinit>() -> <clinit>
com.umeng.message.proguard.G -> com.umeng.message.b.k:
    java.lang.String a(java.lang.String) -> a
com.umeng.message.proguard.H -> com.umeng.message.b.l:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.I -> com.umeng.message.b.m:
    int a() -> a
    void a(android.content.Context,java.lang.String) -> a
com.umeng.message.proguard.J -> com.umeng.message.b.n:
    boolean a(java.lang.String,java.lang.String,java.lang.StringBuilder) -> a
com.umeng.message.proguard.K -> com.umeng.message.b.o:
    byte[] n -> a
    byte[] o -> b
    byte[] p -> c
    byte[] q -> d
    byte[] r -> e
    byte[] s -> f
    byte[] a(int) -> a
    byte[] b(int) -> b
    byte[] a(byte[],int,int,byte[],int,int) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],int) -> a
    java.lang.String a(byte[],int,int,int) -> a
    int a(byte[],int,byte[],int,int) -> a
    byte[] b(byte[],int,int,int) -> b
    byte[] a(java.lang.String,int) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.L -> com.umeng.message.b.p:
    java.lang.String a(long) -> a
com.umeng.message.proguard.M -> com.umeng.message.b.q:
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.io.InputStream,java.lang.String) -> a
com.umeng.message.proguard.N -> com.umeng.message.b.r:
    byte[] f -> a
    java.lang.ThreadLocal g -> b
    java.security.spec.AlgorithmParameterSpec h -> c
    java.security.SecureRandom i -> d
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.lang.String,int) -> b
    byte[] a(byte[],javax.crypto.spec.SecretKeySpec) -> a
    byte[] b(byte[],javax.crypto.spec.SecretKeySpec) -> b
    javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,int) -> a
    javax.crypto.Cipher a() -> a
    javax.crypto.spec.SecretKeySpec a(byte[],int) -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    void <clinit>() -> <clinit>
com.umeng.message.proguard.Q -> com.umeng.message.b.s:
    java.lang.String a(byte[]) -> a
com.umeng.message.proguard.R -> com.umeng.message.b.t:
    int a(byte[],int,int,int) -> a
    int a(long) -> a
    int a(long,java.lang.String) -> a
com.umeng.message.proguard.S -> com.umeng.message.b.u:
    java.lang.String b() -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> f
    java.util.LinkedHashMap g(android.content.Context) -> g
com.umeng.message.proguard.T -> com.umeng.message.b.v:
    boolean a(java.lang.String) -> a
    boolean a(java.util.Map,int) -> a
com.umeng.message.proguard.U -> com.umeng.message.b.w:
    java.nio.charset.Charset b -> a
    java.lang.String a(java.lang.Object[]) -> a
    boolean a(java.lang.String) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.V -> com.umeng.message.b.x:
    int b -> a
    int a() -> a
    void a(java.lang.Runnable) -> a
com.umeng.message.proguard.X -> com.umeng.message.b.y:
    void a(java.lang.String) -> a
com.umeng.message.proguard.X$a -> com.umeng.message.b.z:
    com.umeng.message.proguard.X a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.umeng.message.proguard.X$a$a -> com.umeng.message.b.aa:
    android.os.IBinder a -> a
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    void a(java.lang.String) -> a
com.umeng.message.proguard.a -> com.umeng.message.b.ab:
    java.lang.IllegalStateException a(java.lang.String,java.io.UnsupportedEncodingException) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    java.lang.String f(byte[]) -> a
com.umeng.message.proguard.b -> com.umeng.message.b.ac:
    byte[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String[]) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.c -> com.umeng.message.b.ad:
    byte[] a -> a
    byte[] p -> i
    byte[] q -> j
    byte[] r -> k
    byte[] t -> l
    byte[] u -> m
    byte[] v -> n
    int w -> o
    int x -> p
    int y -> q
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    void <init>(int) -> <init>
    void <init>(int,byte[]) -> <init>
    void <init>(int,byte[],boolean) -> <init>
    void a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] c(byte[]) -> a
    java.lang.String d(byte[]) -> b
    byte[] a(byte[],boolean) -> a
    byte[] a(byte[],boolean,boolean) -> a
    byte[] a(byte[],boolean,boolean,int) -> a
    byte[] h(byte[]) -> c
    boolean b(byte) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.d -> com.umeng.message.b.ae:
    byte f -> b
    int n -> a
    int o -> i
    int g -> c
    int p -> j
    byte[] h -> d
    int i -> e
    int q -> k
    boolean j -> f
    int k -> g
    int l -> h
    void <init>(int,int,int,int) -> <init>
    int c() -> a
    int d() -> b
    void a() -> c
    void a(int) -> a
    int c(byte[],int,int) -> c
    void e() -> d
    byte[] k(byte[]) -> d
    byte[] l(byte[]) -> e
    void a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    boolean b(byte) -> a
    boolean n(byte[]) -> f
    long o(byte[]) -> g
com.umeng.message.proguard.g -> com.umeng.message.b.af:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    boolean d(java.lang.String) -> b
    byte[] a(java.io.InputStream) -> a
    void b(java.io.InputStream) -> b
    boolean b(android.content.Context) -> a
    boolean c(android.content.Context) -> b
    boolean c(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,int) -> a
    void a(android.content.Context,java.lang.Class) -> a
    void b(android.content.Context,java.lang.Class) -> b
    java.lang.Object f(java.lang.String) -> c
    java.lang.String a(java.lang.Object) -> a
    java.lang.String b() -> a
    boolean a(android.content.Context,android.os.Handler) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.g$1 -> com.umeng.message.b.ag:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$10 -> com.umeng.message.b.ah:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$11 -> com.umeng.message.b.ai:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$12 -> com.umeng.message.b.aj:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$13 -> com.umeng.message.b.ak:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$14 -> com.umeng.message.b.al:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$15 -> com.umeng.message.b.am:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$16 -> com.umeng.message.b.an:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$17 -> com.umeng.message.b.ao:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$18 -> com.umeng.message.b.ap:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$19 -> com.umeng.message.b.aq:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$2 -> com.umeng.message.b.ar:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$20 -> com.umeng.message.b.as:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$21 -> com.umeng.message.b.at:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$22 -> com.umeng.message.b.au:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$23 -> com.umeng.message.b.av:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$24 -> com.umeng.message.b.aw:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$3 -> com.umeng.message.b.ax:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$4 -> com.umeng.message.b.ay:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$5 -> com.umeng.message.b.az:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$6 -> com.umeng.message.b.ba:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$7 -> com.umeng.message.b.bb:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$8 -> com.umeng.message.b.bc:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.g$9 -> com.umeng.message.b.bd:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.i -> com.umeng.message.b.be:
    float a -> a
    int a(float) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.k -> com.umeng.message.b.bf:
    java.lang.String[] H -> a
    com.umeng.message.proguard.k$c K -> b
    java.net.HttpURLConnection L -> c
    java.net.URL M -> d
    java.lang.String N -> e
    java.lang.String U -> f
    int V -> g
    java.net.Proxy T() -> d
    java.net.HttpURLConnection U() -> e
    java.lang.String toString() -> toString
    java.net.HttpURLConnection a() -> a
    java.net.URL P() -> b
    java.lang.String Q() -> c
    void <clinit>() -> <clinit>
com.umeng.message.proguard.k$c -> com.umeng.message.b.bg:
    com.umeng.message.proguard.k$c a -> a
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.net.HttpURLConnection a(java.net.URL,java.net.Proxy) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.k$c$1 -> com.umeng.message.b.bh:
    void <init>() -> <init>
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.net.HttpURLConnection a(java.net.URL,java.net.Proxy) -> a
com.umeng.message.proguard.k$e -> com.umeng.message.b.bi:
    void <init>(java.io.IOException) -> <init>
    java.io.IOException a() -> a
    java.lang.Throwable getCause() -> getCause
com.umeng.message.proguard.l -> com.umeng.message.b.bj:
    int d -> a
    java.lang.String e -> b
    java.lang.String f -> c
    int g -> d
    android.content.Context h -> e
    java.lang.String i -> f
    void <init>(android.content.Context) -> <init>
    com.umeng.message.protobuffer.PushResponse a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
    java.lang.String a(android.content.Context) -> a
    com.umeng.message.protobuffer.PushResponse a(byte[]) -> a
    byte[] a(org.json.JSONObject) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.o -> com.umeng.message.b.bk:
    java.lang.String a -> a
    java.lang.String f -> b
    java.lang.String g -> c
    void a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void <clinit>() -> <clinit>
com.umeng.message.proguard.o$1 -> com.umeng.message.b.bl:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    void run() -> run
com.umeng.message.proguard.p -> com.umeng.message.b.bm:
    boolean a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.Class[]) -> a
    void a(android.content.Context,java.lang.Class) -> a
    void b(android.content.Context,java.lang.Class) -> b
    boolean a(android.content.Context) -> a
com.umeng.message.proguard.q -> com.umeng.message.b.bn:
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.umeng.message.proguard.r -> com.umeng.message.b.bo:
    boolean L -> a
    org.android.agoo.ut.UT M -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,long) -> a
    void d(android.content.Context) -> d
    void b(android.content.Context,java.lang.String) -> a
    void d(android.content.Context,java.lang.String) -> b
    void e(android.content.Context,java.lang.String) -> c
    void b(android.content.Context,java.lang.String,java.lang.String) -> a
    void g(android.content.Context) -> e
    void g(android.content.Context,java.lang.String) -> d
    void h(android.content.Context,java.lang.String) -> e
    void a(android.content.Context,long,long) -> a
    void a(android.content.Context,long,java.lang.String) -> a
    void a(android.content.Context,long,java.lang.String,java.lang.String) -> a
    void i(android.content.Context) -> f
    void i(android.content.Context,java.lang.String) -> f
    void a(android.content.Context,java.lang.Throwable) -> a
    void k(android.content.Context) -> g
    void c(android.content.Context,java.lang.String,java.lang.String) -> b
    void l(android.content.Context) -> h
    void m(android.content.Context) -> i
    void n(android.content.Context) -> j
    void d(android.content.Context,java.lang.String,java.lang.String) -> c
    void e(android.content.Context,java.lang.String,java.lang.String) -> d
    void o(android.content.Context) -> k
    void j(android.content.Context,java.lang.String) -> g
    void k(android.content.Context,java.lang.String) -> h
    void <clinit>() -> <clinit>
com.umeng.message.proguard.s -> com.umeng.message.b.bp:
    java.util.concurrent.locks.ReentrantLock a -> a
    void <init>() -> <init>
    void a() -> a
    void b() -> b
    boolean c() -> c
    void d() -> d
    boolean a(long,java.util.concurrent.TimeUnit) -> a
    void lock() -> lock
    void lockInterruptibly() -> lockInterruptibly
    boolean tryLock() -> tryLock
    boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    void unlock() -> unlock
    java.util.concurrent.locks.Condition newCondition() -> newCondition
com.umeng.message.proguard.u -> com.umeng.message.b.bq:
    java.lang.String d -> b
    android.net.LocalServerSocket e -> c
    java.lang.String e() -> e
    void <init>(java.lang.String,int) -> <init>
    void a() -> a
    void d() -> d
    boolean c() -> c
    boolean a(long,java.util.concurrent.TimeUnit) -> a
    void b() -> b
com.umeng.message.proguard.v -> com.umeng.message.b.br:
    com.umeng.message.proguard.w a -> a
    void <init>() -> <init>
    void a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.Object[]) -> a
    void c(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void <clinit>() -> <clinit>
com.umeng.message.proguard.w -> com.umeng.message.b.bs:
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> d
com.umeng.message.proguard.x -> com.umeng.message.b.bt:
    boolean c -> a
    boolean d -> b
    java.util.logging.Logger e -> c
    void <init>() -> <init>
    void <init>(boolean,boolean) -> <init>
    boolean a() -> a
    void b() -> b
    void a(java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    java.lang.String b(java.lang.Throwable) -> b
    java.lang.String c() -> c
    java.lang.String a(int) -> a
    java.lang.String a(long) -> a
    java.lang.String a(java.lang.Throwable) -> a
com.umeng.message.proguard.x$1 -> com.umeng.message.b.bu:
com.umeng.message.proguard.x$a -> com.umeng.message.b.bv:
    java.lang.String a -> a
    void <init>() -> <init>
    void a(java.util.logging.LogRecord) -> a
    java.lang.String format(java.util.logging.LogRecord) -> format
    void <init>(com.umeng.message.proguard.x$1) -> <init>
com.umeng.message.proguard.y -> com.umeng.message.b.bw:
    java.util.concurrent.locks.Lock g -> f
    java.lang.String i -> g
    com.umeng.message.proguard.y$a j -> h
    android.content.IntentFilter k -> i
    android.app.AlarmManager l -> j
    com.umeng.message.proguard.z b -> a
    android.content.Context c -> b
    java.lang.String d -> c
    java.lang.String e -> d
    java.lang.String f -> e
    android.content.BroadcastReceiver m -> k
    boolean n -> l
    void <init>(android.content.Context,com.umeng.message.proguard.z) -> <init>
    void a(java.lang.String) -> b
    java.lang.String a() -> g
    void b(java.lang.String) -> c
    java.lang.String b() -> h
    void c(java.lang.String) -> d
    void d(java.lang.String) -> e
    java.lang.String d() -> i
    void a(java.lang.String,android.os.Bundle) -> a
    void a(java.lang.String,long) -> a
    void a(java.lang.String,android.os.Bundle,long) -> a
    void b(java.lang.String,long) -> b
    void b(java.lang.String,android.os.Bundle,long) -> b
    void e(java.lang.String) -> f
    void a(android.content.Context,android.content.Intent) -> a
    void a(java.lang.String[]) -> a
    void g() -> j
    java.util.concurrent.locks.Lock h() -> k
    com.umeng.message.proguard.y$a a(com.umeng.message.proguard.y) -> a
    void <clinit>() -> <clinit>
com.umeng.message.proguard.y$1 -> com.umeng.message.b.bx:
    com.umeng.message.proguard.y a -> a
    void <init>(com.umeng.message.proguard.y) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.umeng.message.proguard.y$1$1 -> com.umeng.message.b.by:
    android.content.Intent a -> a
    com.umeng.message.proguard.y$1 b -> b
    void <init>(com.umeng.message.proguard.y$1,android.content.Intent) -> <init>
    void run() -> run
com.umeng.message.proguard.y$a -> com.umeng.message.b.bz:
    com.umeng.message.proguard.y a -> a
    void <init>(com.umeng.message.proguard.y,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.message.proguard.z -> com.umeng.message.b.ca:
    void onHandleMessage(java.lang.String,android.os.Bundle) -> onHandleMessage
    void onHandleError(java.lang.String) -> onHandleError
com.umeng.message.protobuffer.PushRequest -> com.umeng.message.protobuffer.PushRequest:
    java.lang.String DEFAULT_VERSION -> DEFAULT_VERSION
    java.lang.String DEFAULT_SIGNATURE -> DEFAULT_SIGNATURE
    java.lang.Integer DEFAULT_SERIALNO -> DEFAULT_SERIALNO
    java.lang.Integer DEFAULT_TIMESTAMP -> DEFAULT_TIMESTAMP
    java.lang.String DEFAULT_CHECKSUM -> DEFAULT_CHECKSUM
    java.lang.String DEFAULT_SALT -> DEFAULT_SALT
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat DEFAULT_ENCRYPTION -> DEFAULT_ENCRYPTION
    okio.ByteString DEFAULT_ENTITY -> DEFAULT_ENTITY
    java.lang.String version -> version
    java.lang.String signature -> signature
    java.lang.Integer serialNo -> serialNo
    java.lang.Integer timestamp -> timestamp
    java.lang.String checksum -> checksum
    java.lang.String salt -> salt
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat encryption -> encryption
    okio.ByteString entity -> entity
    void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,com.umeng.message.protobuffer.PushRequest$entityEncodingFormat,okio.ByteString) -> <init>
    void <init>(com.umeng.message.protobuffer.PushRequest$Builder) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <init>(com.umeng.message.protobuffer.PushRequest$Builder,com.umeng.message.protobuffer.PushRequest$1) -> <init>
    void <clinit>() -> <clinit>
com.umeng.message.protobuffer.PushRequest$1 -> com.umeng.message.protobuffer.PushRequest$1:
com.umeng.message.protobuffer.PushRequest$Builder -> com.umeng.message.protobuffer.PushRequest$Builder:
    java.lang.String version -> version
    java.lang.String signature -> signature
    java.lang.Integer serialNo -> serialNo
    java.lang.Integer timestamp -> timestamp
    java.lang.String checksum -> checksum
    java.lang.String salt -> salt
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat encryption -> encryption
    okio.ByteString entity -> entity
    void <init>() -> <init>
    void <init>(com.umeng.message.protobuffer.PushRequest) -> <init>
    com.umeng.message.protobuffer.PushRequest$Builder version(java.lang.String) -> version
    com.umeng.message.protobuffer.PushRequest$Builder signature(java.lang.String) -> signature
    com.umeng.message.protobuffer.PushRequest$Builder serialNo(java.lang.Integer) -> serialNo
    com.umeng.message.protobuffer.PushRequest$Builder timestamp(java.lang.Integer) -> timestamp
    com.umeng.message.protobuffer.PushRequest$Builder checksum(java.lang.String) -> checksum
    com.umeng.message.protobuffer.PushRequest$Builder salt(java.lang.String) -> salt
    com.umeng.message.protobuffer.PushRequest$Builder encryption(com.umeng.message.protobuffer.PushRequest$entityEncodingFormat) -> encryption
    com.umeng.message.protobuffer.PushRequest$Builder entity(okio.ByteString) -> entity
    com.umeng.message.protobuffer.PushRequest build() -> build
    com.squareup.wire.Message build() -> build
com.umeng.message.protobuffer.PushRequest$entityEncodingFormat -> com.umeng.message.protobuffer.PushRequest$entityEncodingFormat:
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat JSON -> JSON
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat JSON_AES -> JSON_AES
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat JSON_RSA -> JSON_RSA
    int a -> a
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat[] b -> b
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat[] values() -> values
    com.umeng.message.protobuffer.PushRequest$entityEncodingFormat valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getValue() -> getValue
    void <clinit>() -> <clinit>
com.umeng.message.protobuffer.PushResponse -> com.umeng.message.protobuffer.PushResponse:
    com.umeng.message.protobuffer.PushResponse$responseCode DEFAULT_CODE -> DEFAULT_CODE
    java.lang.String DEFAULT_DESCRIPTION -> DEFAULT_DESCRIPTION
    com.umeng.message.protobuffer.PushResponse$responseCode code -> code
    java.lang.String description -> description
    com.umeng.message.protobuffer.PushResponse$Info info -> info
    void <init>(com.umeng.message.protobuffer.PushResponse$responseCode,java.lang.String,com.umeng.message.protobuffer.PushResponse$Info) -> <init>
    void <init>(com.umeng.message.protobuffer.PushResponse$Builder) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <init>(com.umeng.message.protobuffer.PushResponse$Builder,com.umeng.message.protobuffer.PushResponse$1) -> <init>
    void <clinit>() -> <clinit>
com.umeng.message.protobuffer.PushResponse$1 -> com.umeng.message.protobuffer.PushResponse$1:
com.umeng.message.protobuffer.PushResponse$Builder -> com.umeng.message.protobuffer.PushResponse$Builder:
    com.umeng.message.protobuffer.PushResponse$responseCode code -> code
    java.lang.String description -> description
    com.umeng.message.protobuffer.PushResponse$Info info -> info
    void <init>() -> <init>
    void <init>(com.umeng.message.protobuffer.PushResponse) -> <init>
    com.umeng.message.protobuffer.PushResponse$Builder code(com.umeng.message.protobuffer.PushResponse$responseCode) -> code
    com.umeng.message.protobuffer.PushResponse$Builder description(java.lang.String) -> description
    com.umeng.message.protobuffer.PushResponse$Builder info(com.umeng.message.protobuffer.PushResponse$Info) -> info
    com.umeng.message.protobuffer.PushResponse build() -> build
    com.squareup.wire.Message build() -> build
com.umeng.message.protobuffer.PushResponse$Info -> com.umeng.message.protobuffer.PushResponse$Info:
    java.lang.Integer DEFAULT_LAUNCHPOLICY -> DEFAULT_LAUNCHPOLICY
    java.lang.Integer DEFAULT_TAGPOLICY -> DEFAULT_TAGPOLICY
    java.lang.String DEFAULT_DEVICETOKENS -> DEFAULT_DEVICETOKENS
    java.lang.Integer DEFAULT_TAGREMAINCOUNT -> DEFAULT_TAGREMAINCOUNT
    java.lang.String DEFAULT_TAGS -> DEFAULT_TAGS
    java.lang.Integer launchPolicy -> launchPolicy
    java.lang.Integer tagPolicy -> tagPolicy
    java.lang.String deviceTokens -> deviceTokens
    java.lang.Integer tagRemainCount -> tagRemainCount
    java.lang.String tags -> tags
    void <init>(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String) -> <init>
    void <init>(com.umeng.message.protobuffer.PushResponse$Info$Builder) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <init>(com.umeng.message.protobuffer.PushResponse$Info$Builder,com.umeng.message.protobuffer.PushResponse$1) -> <init>
    void <clinit>() -> <clinit>
com.umeng.message.protobuffer.PushResponse$Info$Builder -> com.umeng.message.protobuffer.PushResponse$Info$Builder:
    java.lang.Integer launchPolicy -> launchPolicy
    java.lang.Integer tagPolicy -> tagPolicy
    java.lang.String deviceTokens -> deviceTokens
    java.lang.Integer tagRemainCount -> tagRemainCount
    java.lang.String tags -> tags
    void <init>() -> <init>
    void <init>(com.umeng.message.protobuffer.PushResponse$Info) -> <init>
    com.umeng.message.protobuffer.PushResponse$Info$Builder launchPolicy(java.lang.Integer) -> launchPolicy
    com.umeng.message.protobuffer.PushResponse$Info$Builder tagPolicy(java.lang.Integer) -> tagPolicy
    com.umeng.message.protobuffer.PushResponse$Info$Builder deviceTokens(java.lang.String) -> deviceTokens
    com.umeng.message.protobuffer.PushResponse$Info$Builder tagRemainCount(java.lang.Integer) -> tagRemainCount
    com.umeng.message.protobuffer.PushResponse$Info$Builder tags(java.lang.String) -> tags
    com.umeng.message.protobuffer.PushResponse$Info build() -> build
    com.squareup.wire.Message build() -> build
com.umeng.message.protobuffer.PushResponse$responseCode -> com.umeng.message.protobuffer.PushResponse$responseCode:
    com.umeng.message.protobuffer.PushResponse$responseCode SUCCESS -> SUCCESS
    com.umeng.message.protobuffer.PushResponse$responseCode INVALID_REQUEST -> INVALID_REQUEST
    com.umeng.message.protobuffer.PushResponse$responseCode SERVER_EXCEPTION -> SERVER_EXCEPTION
    int a -> a
    com.umeng.message.protobuffer.PushResponse$responseCode[] b -> b
    com.umeng.message.protobuffer.PushResponse$responseCode[] values() -> values
    com.umeng.message.protobuffer.PushResponse$responseCode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getValue() -> getValue
    void <clinit>() -> <clinit>
com.umeng.message.tag.TagManager -> com.umeng.message.c.a:
    java.lang.String a -> a
    com.umeng.message.tag.TagManager d -> b
    android.content.Context e -> c
    void <init>(android.content.Context) -> <init>
    com.umeng.message.tag.TagManager getInstance(android.content.Context) -> a
    com.umeng.message.tag.TagManager$Result add(java.lang.String[]) -> a
    java.util.List list() -> a
    java.lang.String a(java.util.List) -> a
    org.json.JSONObject a() -> b
    boolean b() -> c
    boolean c() -> d
    com.umeng.message.tag.TagManager$Result d() -> e
    void <clinit>() -> <clinit>
com.umeng.message.tag.TagManager$Result -> com.umeng.message.c.b:
    java.lang.String status -> a
    int remain -> b
    java.lang.String errors -> c
    java.lang.String jsonString -> d
    void <init>(org.json.JSONObject) -> <init>
    void <init>(com.umeng.message.protobuffer.PushResponse) -> <init>
    java.lang.String toString() -> toString
okio.AsyncTimeout -> okio.AsyncTimeout:
    okio.AsyncTimeout head -> head
    boolean inQueue -> inQueue
    okio.AsyncTimeout next -> next
    long timeoutAt -> timeoutAt
    void <init>() -> <init>
    void enter() -> enter
    void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
    boolean exit() -> exit
    boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    long remainingNanos(long) -> remainingNanos
    void timedOut() -> timedOut
    okio.Sink sink(okio.Sink) -> sink
    okio.Source source(okio.Source) -> source
    void exit(boolean) -> exit
    java.io.IOException exit(java.io.IOException) -> exit
    okio.AsyncTimeout awaitTimeout() -> awaitTimeout
    okio.AsyncTimeout access$000() -> access$000
okio.AsyncTimeout$1 -> okio.AsyncTimeout$1:
    okio.Sink val$sink -> val$sink
    okio.AsyncTimeout this$0 -> this$0
    void <init>(okio.AsyncTimeout,okio.Sink) -> <init>
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.AsyncTimeout$2 -> okio.AsyncTimeout$2:
    okio.Source val$source -> val$source
    okio.AsyncTimeout this$0 -> this$0
    void <init>(okio.AsyncTimeout,okio.Source) -> <init>
    long read(okio.Buffer,long) -> read
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
    void <init>() -> <init>
    void run() -> run
okio.Base64 -> okio.Base64:
    byte[] MAP -> MAP
    void <init>() -> <init>
    byte[] decode(java.lang.String) -> decode
    java.lang.String encode(byte[]) -> encode
    void <clinit>() -> <clinit>
okio.Buffer -> okio.Buffer:
    okio.Segment head -> head
    long size -> size
    void <init>() -> <init>
    long size() -> size
    okio.Buffer buffer() -> buffer
    java.io.OutputStream outputStream() -> outputStream
    okio.Buffer emitCompleteSegments() -> emitCompleteSegments
    okio.BufferedSink emit() -> emit
    boolean exhausted() -> exhausted
    void require(long) -> require
    boolean request(long) -> request
    java.io.InputStream inputStream() -> inputStream
    okio.Buffer copyTo(java.io.OutputStream) -> copyTo
    okio.Buffer copyTo(java.io.OutputStream,long,long) -> copyTo
    okio.Buffer copyTo(okio.Buffer,long,long) -> copyTo
    okio.Buffer writeTo(java.io.OutputStream) -> writeTo
    okio.Buffer writeTo(java.io.OutputStream,long) -> writeTo
    okio.Buffer readFrom(java.io.InputStream) -> readFrom
    okio.Buffer readFrom(java.io.InputStream,long) -> readFrom
    void readFrom(java.io.InputStream,long,boolean) -> readFrom
    long completeSegmentByteCount() -> completeSegmentByteCount
    byte readByte() -> readByte
    byte getByte(long) -> getByte
    short readShort() -> readShort
    int readInt() -> readInt
    long readLong() -> readLong
    short readShortLe() -> readShortLe
    int readIntLe() -> readIntLe
    long readLongLe() -> readLongLe
    okio.ByteString readByteString() -> readByteString
    okio.ByteString readByteString(long) -> readByteString
    void readFully(okio.Buffer,long) -> readFully
    long readAll(okio.Sink) -> readAll
    java.lang.String readUtf8() -> readUtf8
    java.lang.String readUtf8(long) -> readUtf8
    java.lang.String readString(java.nio.charset.Charset) -> readString
    java.lang.String readString(long,java.nio.charset.Charset) -> readString
    java.lang.String readUtf8Line() -> readUtf8Line
    java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    java.lang.String readUtf8Line(long) -> readUtf8Line
    byte[] readByteArray() -> readByteArray
    byte[] readByteArray(long) -> readByteArray
    int read(byte[]) -> read
    void readFully(byte[]) -> readFully
    int read(byte[],int,int) -> read
    void clear() -> clear
    void skip(long) -> skip
    okio.Buffer write(okio.ByteString) -> write
    okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    okio.Buffer writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    okio.Buffer write(byte[]) -> write
    okio.Buffer write(byte[],int,int) -> write
    long writeAll(okio.Source) -> writeAll
    okio.BufferedSink write(okio.Source,long) -> write
    okio.Buffer writeByte(int) -> writeByte
    okio.Buffer writeShort(int) -> writeShort
    okio.Buffer writeShortLe(int) -> writeShortLe
    okio.Buffer writeInt(int) -> writeInt
    okio.Buffer writeIntLe(int) -> writeIntLe
    okio.Buffer writeLong(long) -> writeLong
    okio.Buffer writeLongLe(long) -> writeLongLe
    okio.Segment writableSegment(int) -> writableSegment
    void write(okio.Buffer,long) -> write
    long read(okio.Buffer,long) -> read
    long indexOf(byte) -> indexOf
    long indexOf(byte,long) -> indexOf
    long indexOfElement(okio.ByteString) -> indexOfElement
    long indexOfElement(okio.ByteString,long) -> indexOfElement
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.util.List segmentSizes() -> segmentSizes
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    okio.Buffer clone() -> clone
    java.lang.Object clone() -> clone
    okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    okio.BufferedSink writeLongLe(long) -> writeLongLe
    okio.BufferedSink writeLong(long) -> writeLong
    okio.BufferedSink writeIntLe(int) -> writeIntLe
    okio.BufferedSink writeInt(int) -> writeInt
    okio.BufferedSink writeShortLe(int) -> writeShortLe
    okio.BufferedSink writeShort(int) -> writeShort
    okio.BufferedSink writeByte(int) -> writeByte
    okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    okio.BufferedSink write(byte[],int,int) -> write
    okio.BufferedSink write(byte[]) -> write
    okio.BufferedSink write(okio.ByteString) -> write
okio.Buffer$1 -> okio.Buffer$1:
    okio.Buffer this$0 -> this$0
    void <init>(okio.Buffer) -> <init>
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    java.lang.String toString() -> toString
okio.Buffer$2 -> okio.Buffer$2:
    okio.Buffer this$0 -> this$0
    void <init>(okio.Buffer) -> <init>
    int read() -> read
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
    java.lang.String toString() -> toString
okio.BufferedSink -> okio.BufferedSink:
    okio.Buffer buffer() -> buffer
    okio.BufferedSink write(okio.ByteString) -> write
    okio.BufferedSink write(byte[]) -> write
    okio.BufferedSink write(byte[],int,int) -> write
    long writeAll(okio.Source) -> writeAll
    okio.BufferedSink write(okio.Source,long) -> write
    okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    okio.BufferedSink writeByte(int) -> writeByte
    okio.BufferedSink writeShort(int) -> writeShort
    okio.BufferedSink writeShortLe(int) -> writeShortLe
    okio.BufferedSink writeInt(int) -> writeInt
    okio.BufferedSink writeIntLe(int) -> writeIntLe
    okio.BufferedSink writeLong(long) -> writeLong
    okio.BufferedSink writeLongLe(long) -> writeLongLe
    okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    okio.BufferedSink emit() -> emit
    java.io.OutputStream outputStream() -> outputStream
okio.BufferedSource -> okio.BufferedSource:
    okio.Buffer buffer() -> buffer
    boolean exhausted() -> exhausted
    void require(long) -> require
    boolean request(long) -> request
    byte readByte() -> readByte
    short readShort() -> readShort
    short readShortLe() -> readShortLe
    int readInt() -> readInt
    int readIntLe() -> readIntLe
    long readLong() -> readLong
    long readLongLe() -> readLongLe
    void skip(long) -> skip
    okio.ByteString readByteString() -> readByteString
    okio.ByteString readByteString(long) -> readByteString
    byte[] readByteArray() -> readByteArray
    byte[] readByteArray(long) -> readByteArray
    int read(byte[]) -> read
    void readFully(byte[]) -> readFully
    int read(byte[],int,int) -> read
    void readFully(okio.Buffer,long) -> readFully
    long readAll(okio.Sink) -> readAll
    java.lang.String readUtf8() -> readUtf8
    java.lang.String readUtf8(long) -> readUtf8
    java.lang.String readUtf8Line() -> readUtf8Line
    java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    java.lang.String readString(java.nio.charset.Charset) -> readString
    java.lang.String readString(long,java.nio.charset.Charset) -> readString
    long indexOf(byte) -> indexOf
    long indexOf(byte,long) -> indexOf
    long indexOfElement(okio.ByteString) -> indexOfElement
    long indexOfElement(okio.ByteString,long) -> indexOfElement
    java.io.InputStream inputStream() -> inputStream
okio.ByteString -> okio.ByteString:
    char[] HEX_DIGITS -> HEX_DIGITS
    long serialVersionUID -> serialVersionUID
    okio.ByteString EMPTY -> EMPTY
    byte[] data -> data
    int hashCode -> hashCode
    java.lang.String utf8 -> utf8
    void <init>(byte[]) -> <init>
    okio.ByteString of(byte[]) -> of
    okio.ByteString of(byte[],int,int) -> of
    okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    java.lang.String utf8() -> utf8
    java.lang.String base64() -> base64
    okio.ByteString decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String hex() -> hex
    okio.ByteString decodeHex(java.lang.String) -> decodeHex
    int decodeHexDigit(char) -> decodeHexDigit
    okio.ByteString read(java.io.InputStream,int) -> read
    okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    okio.ByteString toAsciiUppercase() -> toAsciiUppercase
    byte getByte(int) -> getByte
    int size() -> size
    byte[] toByteArray() -> toByteArray
    void write(java.io.OutputStream) -> write
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void <clinit>() -> <clinit>
okio.DeflaterSink -> okio.DeflaterSink:
    okio.BufferedSink sink -> sink
    java.util.zip.Deflater deflater -> deflater
    boolean closed -> closed
    void <init>(okio.Sink,java.util.zip.Deflater) -> <init>
    void <init>(okio.BufferedSink,java.util.zip.Deflater) -> <init>
    void write(okio.Buffer,long) -> write
    void deflate(boolean) -> deflate
    void flush() -> flush
    void finishDeflate() -> finishDeflate
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.ForwardingSink -> okio.ForwardingSink:
    okio.Sink delegate -> delegate
    void <init>(okio.Sink) -> <init>
    okio.Sink delegate() -> delegate
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    okio.Timeout timeout() -> timeout
    void close() -> close
    java.lang.String toString() -> toString
okio.ForwardingSource -> okio.ForwardingSource:
    okio.Source delegate -> delegate
    void <init>(okio.Source) -> <init>
    okio.Source delegate() -> delegate
    long read(okio.Buffer,long) -> read
    okio.Timeout timeout() -> timeout
    void close() -> close
    java.lang.String toString() -> toString
okio.GzipSink -> okio.GzipSink:
    okio.BufferedSink sink -> sink
    java.util.zip.Deflater deflater -> deflater
    okio.DeflaterSink deflaterSink -> deflaterSink
    boolean closed -> closed
    java.util.zip.CRC32 crc -> crc
    void <init>(okio.Sink) -> <init>
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    okio.Timeout timeout() -> timeout
    void close() -> close
    void writeHeader() -> writeHeader
    void writeFooter() -> writeFooter
    void updateCrc(okio.Buffer,long) -> updateCrc
okio.GzipSource -> okio.GzipSource:
    byte FHCRC -> FHCRC
    byte FEXTRA -> FEXTRA
    byte FNAME -> FNAME
    byte FCOMMENT -> FCOMMENT
    byte SECTION_HEADER -> SECTION_HEADER
    byte SECTION_BODY -> SECTION_BODY
    byte SECTION_TRAILER -> SECTION_TRAILER
    byte SECTION_DONE -> SECTION_DONE
    int section -> section
    okio.BufferedSource source -> source
    java.util.zip.Inflater inflater -> inflater
    okio.InflaterSource inflaterSource -> inflaterSource
    java.util.zip.CRC32 crc -> crc
    void <init>(okio.Source) -> <init>
    long read(okio.Buffer,long) -> read
    void consumeHeader() -> consumeHeader
    void consumeTrailer() -> consumeTrailer
    okio.Timeout timeout() -> timeout
    void close() -> close
    void updateCrc(okio.Buffer,long,long) -> updateCrc
    void checkEqual(java.lang.String,int,int) -> checkEqual
okio.InflaterSource -> okio.InflaterSource:
    okio.BufferedSource source -> source
    java.util.zip.Inflater inflater -> inflater
    int bufferBytesHeldByInflater -> bufferBytesHeldByInflater
    boolean closed -> closed
    void <init>(okio.Source,java.util.zip.Inflater) -> <init>
    void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    long read(okio.Buffer,long) -> read
    boolean refill() -> refill
    void releaseInflatedBytes() -> releaseInflatedBytes
    okio.Timeout timeout() -> timeout
    void close() -> close
okio.Okio -> okio.Okio:
    java.util.logging.Logger logger -> logger
    void <init>() -> <init>
    okio.BufferedSource buffer(okio.Source) -> buffer
    okio.BufferedSink buffer(okio.Sink) -> buffer
    okio.Sink sink(java.io.OutputStream) -> sink
    okio.Sink sink(java.io.OutputStream,okio.Timeout) -> sink
    okio.Sink sink(java.net.Socket) -> sink
    okio.Source source(java.io.InputStream) -> source
    okio.Source source(java.io.InputStream,okio.Timeout) -> source
    okio.Source source(java.io.File) -> source
    okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[]) -> source
    okio.Sink sink(java.io.File) -> sink
    okio.Sink appendingSink(java.io.File) -> appendingSink
    okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[]) -> sink
    okio.Source source(java.net.Socket) -> source
    okio.AsyncTimeout timeout(java.net.Socket) -> timeout
    java.util.logging.Logger access$000() -> access$000
    void <clinit>() -> <clinit>
okio.Okio$1 -> okio.Okio$1:
    okio.Timeout val$timeout -> val$timeout
    java.io.OutputStream val$out -> val$out
    void <init>(okio.Timeout,java.io.OutputStream) -> <init>
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.Okio$2 -> okio.Okio$2:
    okio.Timeout val$timeout -> val$timeout
    java.io.InputStream val$in -> val$in
    void <init>(okio.Timeout,java.io.InputStream) -> <init>
    long read(okio.Buffer,long) -> read
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
okio.Okio$3 -> okio.Okio$3:
    java.net.Socket val$socket -> val$socket
    void <init>(java.net.Socket) -> <init>
    void timedOut() -> timedOut
okio.RealBufferedSink -> okio.RealBufferedSink:
    okio.Buffer buffer -> buffer
    okio.Sink sink -> sink
    boolean closed -> closed
    void <init>(okio.Sink,okio.Buffer) -> <init>
    void <init>(okio.Sink) -> <init>
    okio.Buffer buffer() -> buffer
    void write(okio.Buffer,long) -> write
    okio.BufferedSink write(okio.ByteString) -> write
    okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    okio.BufferedSink write(byte[]) -> write
    okio.BufferedSink write(byte[],int,int) -> write
    long writeAll(okio.Source) -> writeAll
    okio.BufferedSink write(okio.Source,long) -> write
    okio.BufferedSink writeByte(int) -> writeByte
    okio.BufferedSink writeShort(int) -> writeShort
    okio.BufferedSink writeShortLe(int) -> writeShortLe
    okio.BufferedSink writeInt(int) -> writeInt
    okio.BufferedSink writeIntLe(int) -> writeIntLe
    okio.BufferedSink writeLong(long) -> writeLong
    okio.BufferedSink writeLongLe(long) -> writeLongLe
    okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    okio.BufferedSink emit() -> emit
    java.io.OutputStream outputStream() -> outputStream
    void flush() -> flush
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
    boolean access$000(okio.RealBufferedSink) -> access$000
okio.RealBufferedSink$1 -> okio.RealBufferedSink$1:
    okio.RealBufferedSink this$0 -> this$0
    void <init>(okio.RealBufferedSink) -> <init>
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    java.lang.String toString() -> toString
okio.RealBufferedSource -> okio.RealBufferedSource:
    okio.Buffer buffer -> buffer
    okio.Source source -> source
    boolean closed -> closed
    void <init>(okio.Source,okio.Buffer) -> <init>
    void <init>(okio.Source) -> <init>
    okio.Buffer buffer() -> buffer
    long read(okio.Buffer,long) -> read
    boolean exhausted() -> exhausted
    void require(long) -> require
    boolean request(long) -> request
    byte readByte() -> readByte
    okio.ByteString readByteString() -> readByteString
    okio.ByteString readByteString(long) -> readByteString
    byte[] readByteArray() -> readByteArray
    byte[] readByteArray(long) -> readByteArray
    int read(byte[]) -> read
    void readFully(byte[]) -> readFully
    int read(byte[],int,int) -> read
    void readFully(okio.Buffer,long) -> readFully
    long readAll(okio.Sink) -> readAll
    java.lang.String readUtf8() -> readUtf8
    java.lang.String readUtf8(long) -> readUtf8
    java.lang.String readString(java.nio.charset.Charset) -> readString
    java.lang.String readString(long,java.nio.charset.Charset) -> readString
    java.lang.String readUtf8Line() -> readUtf8Line
    java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    short readShort() -> readShort
    short readShortLe() -> readShortLe
    int readInt() -> readInt
    int readIntLe() -> readIntLe
    long readLong() -> readLong
    long readLongLe() -> readLongLe
    void skip(long) -> skip
    long indexOf(byte) -> indexOf
    long indexOf(byte,long) -> indexOf
    long indexOfElement(okio.ByteString) -> indexOfElement
    long indexOfElement(okio.ByteString,long) -> indexOfElement
    java.io.InputStream inputStream() -> inputStream
    void close() -> close
    okio.Timeout timeout() -> timeout
    java.lang.String toString() -> toString
    boolean access$000(okio.RealBufferedSource) -> access$000
okio.RealBufferedSource$1 -> okio.RealBufferedSource$1:
    okio.RealBufferedSource this$0 -> this$0
    void <init>(okio.RealBufferedSource) -> <init>
    int read() -> read
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
    java.lang.String toString() -> toString
okio.Segment -> okio.Segment:
    int SIZE -> SIZE
    byte[] data -> data
    int pos -> pos
    int limit -> limit
    okio.Segment next -> next
    okio.Segment prev -> prev
    void <init>() -> <init>
    okio.Segment pop() -> pop
    okio.Segment push(okio.Segment) -> push
    okio.Segment split(int) -> split
    void compact() -> compact
    void writeTo(okio.Segment,int) -> writeTo
okio.SegmentPool -> okio.SegmentPool:
    okio.SegmentPool INSTANCE -> INSTANCE
    long MAX_SIZE -> MAX_SIZE
    okio.Segment next -> next
    long byteCount -> byteCount
    void <init>() -> <init>
    okio.Segment take() -> take
    void recycle(okio.Segment) -> recycle
    void <clinit>() -> <clinit>
okio.Sink -> okio.Sink:
    void write(okio.Buffer,long) -> write
    void flush() -> flush
    okio.Timeout timeout() -> timeout
    void close() -> close
okio.Source -> okio.Source:
    long read(okio.Buffer,long) -> read
    okio.Timeout timeout() -> timeout
    void close() -> close
okio.Timeout -> okio.Timeout:
    okio.Timeout NONE -> NONE
    boolean hasDeadline -> hasDeadline
    long deadlineNanoTime -> deadlineNanoTime
    long timeoutNanos -> timeoutNanos
    void <init>() -> <init>
    okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    long timeoutNanos() -> timeoutNanos
    boolean hasDeadline() -> hasDeadline
    long deadlineNanoTime() -> deadlineNanoTime
    okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    okio.Timeout deadline(long,java.util.concurrent.TimeUnit) -> deadline
    okio.Timeout clearTimeout() -> clearTimeout
    okio.Timeout clearDeadline() -> clearDeadline
    void throwIfReached() -> throwIfReached
    void <clinit>() -> <clinit>
okio.Timeout$1 -> okio.Timeout$1:
    void <init>() -> <init>
    okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    void throwIfReached() -> throwIfReached
okio.Util -> okio.Util:
    java.nio.charset.Charset UTF_8 -> UTF_8
    void <init>() -> <init>
    void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    short reverseBytesShort(short) -> reverseBytesShort
    int reverseBytesInt(int) -> reverseBytesInt
    long reverseBytesLong(long) -> reverseBytesLong
    void sneakyRethrow(java.lang.Throwable) -> sneakyRethrow
    void sneakyThrow2(java.lang.Throwable) -> sneakyThrow2
    void <clinit>() -> <clinit>
org.android.Config -> org.android.a:
    void clearXToken(android.content.Context) -> a
    java.lang.String getXToken(android.content.Context) -> b
    android.content.SharedPreferences getAgooPreferences(android.content.Context) -> A
    java.lang.String getAppKey(android.content.Context) -> c
    java.lang.String getTtId(android.content.Context) -> d
    java.lang.String getAppSecret(android.content.Context) -> e
    java.lang.String getDeviceToken(android.content.Context) -> f
    void clear(android.content.Context) -> g
    java.lang.String getPushUserToken(android.content.Context) -> h
    void setPushUserToken(android.content.Context,java.lang.String) -> a
    void clearPushUserToken(android.content.Context) -> i
    void setAppInfo(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getLoggerClassName(android.content.Context) -> j
    void setDebug(android.content.Context,boolean,boolean) -> a
    void setAgooSecurityMode(android.content.Context,boolean) -> a
    void setAgooMode(android.content.Context,int) -> a
    void setAgooGroup(android.content.Context,java.lang.String) -> b
    java.lang.String getAgooGroup(android.content.Context) -> k
    boolean isAgooSoSecurityMode(android.content.Context) -> l
    int getAppVersion(android.content.Context) -> m
    boolean isEnableSwitchConfig(android.content.Context) -> n
    void set(android.content.Context,boolean,boolean,boolean,long,boolean) -> a
    void setUpdateTime(android.content.Context,long) -> a
    boolean isTimeToUpdate(android.content.Context,long) -> b
    void setAgooReleaseTime(android.content.Context,long) -> c
    long getAgooReleaseTime(android.content.Context) -> o
    void setIfNeedAutoUpdate(android.content.Context,boolean) -> b
    boolean isEnableUpdate_ByApp(android.content.Context) -> p
    void setPingMessage(android.content.Context,boolean) -> c
    void setHttpConnectTimes(android.content.Context,int) -> b
    int getHttpConnectTimes(android.content.Context) -> q
    void setSpdyConnectTimes(android.content.Context,int) -> c
    int getSpdyConnectTimes(android.content.Context) -> r
    void setServiceProtect(android.content.Context,boolean) -> d
    boolean getServiceProtect(android.content.Context) -> s
    java.util.LinkedHashMap getPushServiceErrorId(android.content.Context) -> t
    java.util.LinkedHashMap getDnsErrorId(android.content.Context) -> u
    java.util.LinkedHashMap getConnectHeader(android.content.Context) -> v
    void setNoticeResult(android.content.Context,boolean) -> e
    boolean hasNoticeElection(android.content.Context) -> w
    int getAgooMode(android.content.Context) -> x
    void setUnregisterFlag(android.content.Context,boolean) -> f
    boolean getUnregisterFlag(android.content.Context) -> y
    void setSoManagerTimeout(android.content.Context,int) -> d
    int getSomanagerTimeout(android.content.Context) -> z
org.android.agoo.IControlService -> org.android.agoo.a:
    void onHandleIntent(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> onHandleIntent
org.android.agoo.IMtopService -> org.android.agoo.b:
    void sendMtop(android.content.Context,org.android.agoo.client.MtopProxyRequest,org.android.agoo.client.MtopProxyResponseHandler) -> sendMtop
    void sendMtop(android.content.Context,org.android.agoo.client.MtopProxyRequest) -> sendMtop
    org.android.agoo.client.MtopSyncResult getV3(android.content.Context,org.android.agoo.client.MtopProxyRequest) -> getV3
org.android.agoo.IPushService -> org.android.agoo.c:
org.android.agoo.IService -> org.android.agoo.d:
    android.os.IBinder bind(android.content.Intent) -> bind
    boolean unbind(android.content.Intent) -> unbind
    void create(android.content.Context,org.android.agoo.callback.IServiceCallBack) -> create
    int startCommand(android.content.Intent,int,int) -> startCommand
    void destroy(android.content.Context) -> destroy
org.android.agoo.IUpdateService -> org.android.agoo.e:
    void downloadUpdate(android.content.Context,java.lang.String,java.lang.String) -> a
org.android.agoo.a -> org.android.agoo.f:
    java.lang.String a(android.content.Context) -> a
    android.content.SharedPreferences b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    void e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    java.lang.String l(android.content.Context) -> l
    boolean m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    java.lang.String o(android.content.Context) -> o
    void a(android.content.Context,long,java.lang.String) -> a
    java.lang.String p(android.content.Context) -> p
    long q(android.content.Context) -> q
    int r(android.content.Context) -> r
    void s(android.content.Context) -> s
    void a(android.content.Context,int) -> a
    void t(android.content.Context) -> t
    int u(android.content.Context) -> u
    void v(android.content.Context) -> v
    java.lang.String a(long) -> a
    boolean w(android.content.Context) -> w
    void b(android.content.Context,java.lang.String) -> a
    void x(android.content.Context) -> x
    void y(android.content.Context) -> y
    boolean z(android.content.Context) -> z
    boolean a(android.content.Context,boolean) -> a
    java.lang.String B(android.content.Context) -> A
    void c(android.content.Context,java.lang.String) -> b
    void C(android.content.Context) -> B
    long D(android.content.Context) -> C
    boolean E(android.content.Context) -> D
    boolean F(android.content.Context) -> E
    java.lang.String G(android.content.Context) -> F
    void a(android.content.Context,boolean,boolean) -> a
    void e(android.content.Context,java.lang.String) -> c
    org.android.agoo.a$a H(android.content.Context) -> G
    long a() -> a
org.android.agoo.a$1 -> org.android.agoo.g:
org.android.agoo.a$a -> org.android.agoo.h:
    org.android.agoo.a$a a -> a
    org.android.agoo.a$a b -> b
    org.android.agoo.a$a c -> c
    org.android.agoo.a$a d -> d
    org.android.agoo.a$a e -> e
    int f -> f
    org.android.agoo.a$a[] g -> g
    org.android.agoo.a$a[] values() -> values
    org.android.agoo.a$a valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int a() -> a
    int b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    void <init>(java.lang.String,int,int,org.android.agoo.a$1) -> <init>
    void <clinit>() -> <clinit>
org.android.agoo.a$a$1 -> org.android.agoo.i:
    void <init>(java.lang.String,int,int) -> <init>
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String c() -> c
    int b() -> b
org.android.agoo.a$a$2 -> org.android.agoo.j:
    void <init>(java.lang.String,int,int) -> <init>
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String c() -> c
    int b() -> b
org.android.agoo.a$a$3 -> org.android.agoo.k:
    void <init>(java.lang.String,int,int) -> <init>
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String c() -> c
    int b() -> b
org.android.agoo.a$a$4 -> org.android.agoo.l:
    void <init>(java.lang.String,int,int) -> <init>
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String c() -> c
    int b() -> b
org.android.agoo.a$a$5 -> org.android.agoo.m:
    void <init>(java.lang.String,int,int) -> <init>
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String c() -> c
    int b() -> b
org.android.agoo.callback.IControlCallBack -> org.android.agoo.a.a:
    java.lang.Class callAgooService() -> callAgooService
    java.lang.Class callAgooElectionReceiver() -> callAgooElectionReceiver
    java.lang.Class callAgooSystemReceiver() -> callAgooSystemReceiver
    java.lang.Class callAgooRegistrationReceiver() -> callAgooRegistrationReceiver
    java.lang.Class callAgooMessageReceiver() -> callAgooMessageReceiver
    boolean callShouldProcessMessage(android.content.Context,android.content.Intent) -> callShouldProcessMessage
    void callUserCommand(android.content.Context,android.content.Intent) -> callUserCommand
    void callMessage(android.content.Context,android.content.Intent) -> callMessage
    void callError(android.content.Context,java.lang.String) -> callError
    void callRegistered(android.content.Context,java.lang.String) -> callRegistered
    void callUnregistered(android.content.Context,java.lang.String) -> callUnregistered
    boolean callRecoverableError(android.content.Context,java.lang.String) -> callRecoverableError
org.android.agoo.callback.IServiceCallBack -> org.android.agoo.a.b:
    void stop() -> stop
org.android.agoo.client.BaseBroadcastReceiver -> org.android.agoo.b.a:
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onUserReceive(android.content.Context,android.content.Intent) -> a
    java.lang.String getIntentServiceClassName(android.content.Context) -> a
org.android.agoo.client.BaseIntentService -> org.android.agoo.b.b:
    void <init>() -> <init>
    java.lang.Class getAgooService() -> a
    boolean shouldProcessMessage(android.content.Context,android.content.Intent) -> b
    void onUserCommand(android.content.Context,android.content.Intent) -> c
    void onUserHandleIntent(android.content.Context,android.content.Intent) -> d
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onError(android.content.Context,java.lang.String) -> a
    void onRegistered(android.content.Context,java.lang.String) -> b
    void onUnregistered(android.content.Context,java.lang.String) -> c
    void onDeletedMessages(android.content.Context,int) -> a
    boolean callRecoverableError(android.content.Context,java.lang.String) -> callRecoverableError
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void autoUpdate(android.content.Context,java.lang.String) -> d
    void runIntentInService(android.content.Context,android.content.Intent,java.lang.String) -> a
    java.lang.Class callAgooService() -> callAgooService
    boolean callShouldProcessMessage(android.content.Context,android.content.Intent) -> callShouldProcessMessage
    void callUserCommand(android.content.Context,android.content.Intent) -> callUserCommand
    void callUserHandleIntent(android.content.Context,android.content.Intent) -> callUserHandleIntent
    void callMessage(android.content.Context,android.content.Intent) -> callMessage
    void callError(android.content.Context,java.lang.String) -> callError
    void callRegistered(android.content.Context,java.lang.String) -> callRegistered
    void callUnregistered(android.content.Context,java.lang.String) -> callUnregistered
    void callDeletedMessages(android.content.Context,int) -> callDeletedMessages
    void getSwitchConfig(android.content.Context) -> a
org.android.agoo.client.BaseRegistrar -> org.android.agoo.b.c:
    java.lang.String AGOO_COMMAND_SOMANAGER -> AGOO_COMMAND_SOMANAGER
    void <init>() -> <init>
    void checkDevice(android.content.Context) -> checkDevice
    org.android.agoo.IMtopService getMtopService(android.content.Context) -> a
    void baseRegister(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void baseRegister(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void unregister(android.content.Context) -> unregister
    java.lang.String getRegistrationId(android.content.Context) -> getRegistrationId
    boolean isRegistered(android.content.Context) -> isRegistered
    void setDebug(android.content.Context,boolean,boolean) -> setDebug
    void setAgooMode(android.content.Context,org.android.agoo.client.Mode) -> setAgooMode
    void sendAsynMtop(android.content.Context,org.android.agoo.client.MtopProxyRequest,org.android.agoo.client.MtopProxyResponseHandler) -> sendAsynMtop
    void sendAsynMtop(android.content.Context,org.android.agoo.client.MtopProxyRequest) -> sendAsynMtop
    void sendSynMtop(android.content.Context,org.android.agoo.client.MtopProxyRequest) -> sendSynMtop
    void setAutoUpdate(android.content.Context,boolean) -> setAutoUpdate
    void pingMessage(android.content.Context,boolean) -> pingMessage
    void setServiceProtect(android.content.Context,boolean) -> setServiceProtect
    void sendSoTimeout(android.content.Context,int) -> sendSoTimeout
org.android.agoo.client.MessageReceiverService -> org.android.agoo.b.d:
    org.android.agoo.service.SendMessage$Stub binderMsgRecv -> a
    org.android.agoo.service.ElectionReceiverService$Stub binderElecRecv -> b
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    java.lang.String getIntentServiceClassName(android.content.Context) -> getIntentServiceClassName
org.android.agoo.client.MessageReceiverService$1 -> org.android.agoo.b.e:
    org.android.agoo.client.MessageReceiverService a -> a
    void <init>(org.android.agoo.client.MessageReceiverService) -> <init>
    int doSend(android.content.Intent) -> doSend
org.android.agoo.client.MessageReceiverService$2 -> org.android.agoo.b.f:
    org.android.agoo.client.MessageReceiverService a -> a
    void <init>(org.android.agoo.client.MessageReceiverService) -> <init>
    boolean sendElectionResult(android.content.Intent) -> sendElectionResult
org.android.agoo.client.Mode -> org.android.agoo.b.g:
    org.android.agoo.client.Mode TEST_SINGLE -> a
    org.android.agoo.client.Mode TEST -> b
    org.android.agoo.client.Mode PREVIEW -> c
    org.android.agoo.client.Mode RELEASE -> d
    org.android.agoo.client.Mode TAOBAO -> e
    int value -> f
    org.android.agoo.client.Mode[] $VALUES -> g
    org.android.agoo.client.Mode[] values() -> values
    org.android.agoo.client.Mode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getValue() -> a
    void <clinit>() -> <clinit>
org.android.agoo.client.MtopProxyRequest -> org.android.agoo.b.h:
    java.lang.String api -> a
    java.lang.String v -> b
    java.lang.String sId -> c
    long time -> d
    boolean hasSigin -> e
    java.util.Map params -> f
    java.util.Map sysParams -> g
    void <init>() -> <init>
    java.util.Map getSysParams() -> a
    java.lang.String getApi() -> b
    void setApi(java.lang.String) -> a
    java.lang.String getV() -> c
    void setV(java.lang.String) -> b
    java.lang.String getSId() -> d
    java.util.Map getParams() -> e
    void putParams(java.lang.String,java.lang.Object) -> a
org.android.agoo.client.MtopProxyResponseHandler -> org.android.agoo.b.i:
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.String,java.lang.String) -> a
org.android.agoo.client.MtopSyncResult -> org.android.agoo.b.j:
    boolean isSuccess -> a
    java.lang.String data -> b
    java.lang.String retDesc -> c
    java.lang.String retCode -> d
    void <init>() -> <init>
    boolean isSuccess() -> a
    void setSuccess(boolean) -> a
    java.lang.String getData() -> b
    void setData(java.lang.String) -> a
    void setRetDesc(java.lang.String) -> b
    void setRetCode(java.lang.String) -> c
    java.lang.String toString() -> toString
org.android.agoo.impl.ControlService -> org.android.agoo.impl.ControlService:
    java.util.Random e -> a
    android.content.Context i -> b
    org.android.agoo.net.mtop.IMtopSynClient j -> c
    android.content.ServiceConnection k -> d
    android.content.ServiceConnection l -> e
    void <init>() -> <init>
    void a(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> a
    void b(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> b
    java.lang.String a(android.content.Context,long) -> a
    void c(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> c
    void d(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> d
    void e(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> e
    void f(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> f
    void g(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> g
    void h(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> h
    void a(android.content.Context,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void onHandleIntent(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> onHandleIntent
    void a(android.content.Context,java.lang.String,org.android.agoo.callback.IControlCallBack) -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,android.content.Intent,java.lang.String,org.android.agoo.callback.IControlCallBack) -> a
    boolean a(android.content.Context,org.android.agoo.callback.IControlCallBack) -> a
    void b(android.content.Context) -> b
    void i(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> i
    void c(android.content.Context) -> c
    void a(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack,java.lang.String,boolean) -> a
    void j(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> j
    void k(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> k
    boolean a(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack,org.android.agoo.net.mtop.Result) -> a
    void a(android.content.Context,org.android.agoo.net.mtop.Result,org.android.agoo.net.mtop.MtopRequest,java.lang.String) -> a
    void l(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> l
    void m(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> m
    void a(android.content.Context,android.content.Intent) -> a
    void b(android.content.Context,org.android.agoo.callback.IControlCallBack) -> b
    void a(android.content.Context,java.lang.String) -> a
    void n(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> n
    void o(android.content.Context,android.content.Intent,org.android.agoo.callback.IControlCallBack) -> o
    boolean a(java.lang.Class) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,org.android.agoo.callback.IControlCallBack,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,org.android.agoo.callback.IControlCallBack) -> a
    void b(android.content.Context,java.lang.String) -> b
    void e(android.content.Context) -> d
    android.content.Context a(org.android.agoo.impl.ControlService) -> a
    android.content.ServiceConnection b(org.android.agoo.impl.ControlService) -> b
    android.content.ServiceConnection c(org.android.agoo.impl.ControlService) -> c
    void <clinit>() -> <clinit>
org.android.agoo.impl.ControlService$1 -> org.android.agoo.impl.ControlService$1:
    org.android.agoo.impl.ControlService a -> a
    void <init>(org.android.agoo.impl.ControlService) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.android.agoo.impl.ControlService$2 -> org.android.agoo.impl.ControlService$2:
    org.android.agoo.impl.ControlService a -> a
    void <init>(org.android.agoo.impl.ControlService) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.android.agoo.impl.MtopService -> org.android.agoo.impl.MtopService:
    void <init>() -> <init>
    void sendMtop(android.content.Context,org.android.agoo.client.MtopProxyRequest,org.android.agoo.client.MtopProxyResponseHandler) -> sendMtop
    void sendMtop(android.content.Context,org.android.agoo.client.MtopProxyRequest) -> sendMtop
    org.android.agoo.client.MtopSyncResult getV3(android.content.Context,org.android.agoo.client.MtopProxyRequest) -> getV3
org.android.agoo.impl.MtopService$1 -> org.android.agoo.impl.MtopService$1:
    org.android.agoo.client.MtopProxyResponseHandler a -> a
    org.android.agoo.impl.MtopService b -> b
    void <init>(org.android.agoo.impl.MtopService,org.android.agoo.client.MtopProxyResponseHandler) -> <init>
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.String,java.lang.String) -> onFailure
org.android.agoo.impl.MtopService$2 -> org.android.agoo.impl.MtopService$2:
    org.android.agoo.impl.MtopService a -> a
    void <init>(org.android.agoo.impl.MtopService) -> <init>
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.String,java.lang.String) -> onFailure
org.android.agoo.impl.PushService -> org.android.agoo.impl.PushService:
    android.content.Context n -> a
    android.os.HandlerThread o -> b
    android.os.Handler p -> c
    boolean q -> d
    android.app.PendingIntent r -> e
    boolean s -> f
    com.umeng.message.proguard.C t -> g
    long u -> h
    android.app.AlarmManager v -> i
    java.lang.String w -> j
    java.lang.String x -> k
    java.lang.String y -> l
    java.lang.String z -> m
    java.util.concurrent.atomic.AtomicBoolean A -> n
    com.umeng.message.proguard.F B -> o
    org.android.agoo.callback.IServiceCallBack D -> p
    android.content.BroadcastReceiver E -> q
    org.android.agoo.service.IMessageService$Stub F -> r
    void <init>() -> <init>
    android.os.IBinder bind(android.content.Intent) -> bind
    boolean unbind(android.content.Intent) -> unbind
    void destroy(android.content.Context) -> destroy
    int startCommand(android.content.Intent,int,int) -> startCommand
    void a(android.content.Intent,int,int) -> a
    void create(android.content.Context,org.android.agoo.callback.IServiceCallBack) -> create
    void d() -> d
    boolean handleMessage(android.os.Message) -> handleMessage
    boolean e() -> e
    void a() -> a
    void b() -> b
    boolean f() -> f
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void g() -> g
    boolean hasComeFromCock(android.content.Intent) -> hasComeFromCock
    void c() -> c
    int a(int,int) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void onHandleCommand(java.lang.String) -> onHandleCommand
    void onHandleError(java.lang.String) -> onHandleError
    void onHandleMessage(java.lang.String,android.os.Bundle) -> onHandleMessage
    android.content.Context a(org.android.agoo.impl.PushService) -> a
    long b(org.android.agoo.impl.PushService) -> b
    android.os.Handler c(org.android.agoo.impl.PushService) -> c
    com.umeng.message.proguard.C d(org.android.agoo.impl.PushService) -> d
org.android.agoo.impl.PushService$1 -> org.android.agoo.impl.PushService$1:
    org.android.agoo.impl.PushService a -> a
    void <init>(org.android.agoo.impl.PushService) -> <init>
    void run() -> run
org.android.agoo.impl.PushService$2 -> org.android.agoo.impl.PushService$2:
    org.android.agoo.impl.PushService a -> a
    void <init>(org.android.agoo.impl.PushService) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.android.agoo.impl.PushService$3 -> org.android.agoo.impl.PushService$3:
    org.android.agoo.impl.PushService a -> a
    void <init>(org.android.agoo.impl.PushService) -> <init>
    boolean ping() -> ping
    void probe() -> probe
org.android.agoo.impl.PushService$3$1 -> org.android.agoo.impl.PushService$3$1:
    org.android.agoo.impl.PushService$3 a -> a
    void <init>(org.android.agoo.impl.PushService$3) -> <init>
    void run() -> run
org.android.agoo.impl.PushService$a -> org.android.agoo.impl.PushService$a:
    android.content.Intent b -> b
    com.umeng.message.proguard.C c -> c
    java.lang.String d -> d
    org.android.agoo.service.SendMessage e -> e
    android.content.ServiceConnection f -> f
    org.android.agoo.impl.PushService a -> a
    void <init>(org.android.agoo.impl.PushService,java.lang.String,android.content.Intent,com.umeng.message.proguard.C) -> <init>
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    android.content.Intent a(org.android.agoo.impl.PushService$a) -> a
    org.android.agoo.service.SendMessage b(org.android.agoo.impl.PushService$a) -> b
    java.lang.String c(org.android.agoo.impl.PushService$a) -> c
    com.umeng.message.proguard.C d(org.android.agoo.impl.PushService$a) -> d
    org.android.agoo.service.SendMessage a(org.android.agoo.impl.PushService$a,org.android.agoo.service.SendMessage) -> a
    android.content.ServiceConnection e(org.android.agoo.impl.PushService$a) -> e
org.android.agoo.impl.PushService$a$1 -> org.android.agoo.impl.PushService$a$1:
    org.android.agoo.impl.PushService$a a -> a
    void <init>(org.android.agoo.impl.PushService$a) -> <init>
    void run() -> run
org.android.agoo.impl.PushService$b -> org.android.agoo.impl.PushService$b:
    java.lang.String b -> b
    android.os.Bundle c -> c
    com.umeng.message.proguard.C d -> d
    org.android.agoo.impl.PushService a -> a
    void <init>(org.android.agoo.impl.PushService,java.lang.String,android.os.Bundle,com.umeng.message.proguard.C) -> <init>
    void run() -> run
org.android.agoo.impl.a -> org.android.agoo.impl.a:
    org.android.agoo.net.mtop.IMtopSynClient b -> a
    java.util.Random c -> b
    java.lang.String f -> c
    java.lang.String g -> d
    java.util.Map h -> e
    android.content.Context i -> f
    android.os.HandlerThread j -> g
    android.os.Handler k -> h
    void <init>() -> <init>
    int b(android.content.Context) -> b
    int a(android.content.pm.PackageInfo) -> a
    void a(android.content.Context,java.lang.Class) -> a
    long c(android.content.Context) -> c
    long b(android.content.pm.PackageInfo) -> b
    void d(android.content.Context) -> d
    void b(android.content.Context,java.lang.Class) -> b
    void e(android.content.Context) -> e
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,long,java.util.Map,org.android.agoo.impl.a$d,org.android.agoo.impl.a$d,java.lang.String) -> a
    org.android.agoo.impl.a$d a(android.content.Context,java.util.Map) -> a
    org.android.agoo.impl.a$d b(android.content.Context,java.util.Map) -> b
    void a(android.content.Context,java.util.Map,java.lang.String,long,java.lang.String) -> a
    void a(java.lang.String,android.content.Intent) -> a
    java.lang.String f(android.content.Context) -> f
    void b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    boolean a(android.content.Context,java.lang.String,int) -> a
    org.android.agoo.impl.a$a a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    java.lang.String a(android.content.Context) -> a
    boolean g(android.content.Context) -> g
    android.content.Context a() -> a
    android.os.Handler b() -> b
    void <clinit>() -> <clinit>
org.android.agoo.impl.a$a -> org.android.agoo.impl.a$a:
    long a -> a
    long b -> b
    int c -> c
    java.lang.String d -> d
    void <init>() -> <init>
    java.lang.String toString() -> toString
    int a() -> a
    void a(int) -> a
    org.android.agoo.impl.a$a a(java.lang.String) -> a
    long b() -> b
    void a(long) -> a
    long c() -> c
    void b(long) -> b
    java.lang.String d() -> d
    void b(java.lang.String) -> b
org.android.agoo.impl.a$b -> org.android.agoo.impl.a$b:
    void <init>() -> <init>
    boolean handleMessage(android.os.Message) -> handleMessage
org.android.agoo.impl.a$c -> org.android.agoo.impl.a$c:
    android.content.Intent a -> a
    org.android.agoo.service.ElectionReceiverService b -> b
    android.content.ServiceConnection c -> c
    void <init>(android.content.Intent) -> <init>
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    android.content.Intent a(org.android.agoo.impl.a$c) -> a
    org.android.agoo.service.ElectionReceiverService b(org.android.agoo.impl.a$c) -> b
    android.content.ServiceConnection c(org.android.agoo.impl.a$c) -> c
org.android.agoo.impl.a$c$1 -> org.android.agoo.impl.a$c$1:
    org.android.agoo.impl.a$c a -> a
    void <init>(org.android.agoo.impl.a$c) -> <init>
    void run() -> run
org.android.agoo.impl.a$d -> org.android.agoo.impl.a$d:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void <init>() -> <init>
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    boolean b() -> b
    void a(boolean) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
org.android.agoo.impl.a$e -> org.android.agoo.impl.a$e:
    java.lang.String a -> a
    android.content.Intent b -> b
    void <init>(java.lang.String,android.content.Intent) -> <init>
    void run() -> run
org.android.agoo.intent.IntentUtil -> org.android.agoo.c.a:
    java.lang.String getAgooSendAction(android.content.Context) -> a
    android.content.Intent createComandIntent(android.content.Context,java.lang.String) -> a
    java.lang.String getAgooCommand(android.content.Context) -> b
    java.lang.String getAgooStart(android.content.Context) -> c
    java.lang.String getAgooCockroach(android.content.Context) -> d
org.android.agoo.net.async.AsyncHttpClient -> org.android.agoo.d.a.a:
    java.util.concurrent.ThreadPoolExecutor a -> a
    java.util.Map b -> b
    void <init>() -> <init>
    void get(android.content.Context,java.lang.String,org.android.agoo.net.async.RequestParams,org.android.agoo.net.async.AsyncHttpResponseHandler) -> a
    void get(android.content.Context,org.apache.http.HttpHost,java.lang.String,org.apache.http.Header[],org.android.agoo.net.async.RequestParams,org.android.agoo.net.async.AsyncHttpResponseHandler) -> a
    void a(android.content.Context,org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,java.lang.String,org.android.agoo.net.async.AsyncHttpResponseHandler) -> a
org.android.agoo.net.async.AsyncHttpResponseHandler -> org.android.agoo.d.a.b:
    android.os.Handler b -> a
    void <init>() -> <init>
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onFailure(java.lang.Throwable,java.util.Map,java.lang.String) -> onFailure
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void onFailure(java.lang.Throwable) -> onFailure
    void onSuccess(java.util.Map,java.lang.String) -> onSuccess
    void onSuccess(java.lang.String) -> onSuccess
    void a(org.android.agoo.net.async.AsyncHttpResponseHandler$a) -> a
    void a(java.lang.Throwable) -> a
    void a() -> a
    void b() -> b
    void b(java.lang.Throwable) -> b
    void a(java.util.Map,java.lang.String) -> a
    void a(java.lang.Object) -> a
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    android.os.Message a(int,java.lang.Object) -> a
    void a(org.apache.http.HttpResponse) -> a
    java.util.Map a(org.apache.http.Header[]) -> a
org.android.agoo.net.async.AsyncHttpResponseHandler$1 -> org.android.agoo.d.a.c:
    org.android.agoo.net.async.AsyncHttpResponseHandler a -> a
    void <init>(org.android.agoo.net.async.AsyncHttpResponseHandler) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
org.android.agoo.net.async.AsyncHttpResponseHandler$a -> org.android.agoo.d.a.d:
    int a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    java.lang.String d -> d
    org.android.agoo.net.async.AsyncHttpResponseHandler e -> e
    void <init>(org.android.agoo.net.async.AsyncHttpResponseHandler) -> <init>
    void <init>(org.android.agoo.net.async.AsyncHttpResponseHandler,org.android.agoo.net.async.AsyncHttpResponseHandler$1) -> <init>
org.android.agoo.net.async.RequestParams -> org.android.agoo.d.a.e:
    java.util.concurrent.ConcurrentHashMap a -> a
    void <init>() -> <init>
    void put(java.lang.String,java.lang.String) -> a
    java.lang.String toString() -> toString
    void b() -> b
    java.lang.String getParamString() -> a
    java.lang.String format(java.util.Map) -> a
    java.lang.String a(java.lang.String) -> a
org.android.agoo.net.async.SyncHttpClient -> org.android.agoo.d.a.f:
    void <init>() -> <init>
    org.android.agoo.net.async.SyncHttpClient$a get(android.content.Context,java.lang.String,org.android.agoo.net.async.RequestParams) -> a
    org.android.agoo.net.async.SyncHttpClient$a get(android.content.Context,org.apache.http.HttpHost,java.lang.String,org.android.agoo.net.async.RequestParams) -> a
    java.util.Map a(org.apache.http.Header[]) -> a
org.android.agoo.net.async.SyncHttpClient$a -> org.android.agoo.d.a.g:
    int a -> a
    java.util.Map b -> b
    java.lang.String c -> c
    void <init>() -> <init>
org.android.agoo.net.async.a -> org.android.agoo.d.a.h:
    int g -> a
    int h -> b
    org.apache.http.impl.client.DefaultHttpClient i -> c
    org.apache.http.protocol.HttpContext j -> d
    java.util.Map k -> e
    void <init>() -> <init>
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> a
    org.apache.http.protocol.HttpContext getHttpContext() -> b
    java.lang.String a(java.lang.String,org.android.agoo.net.async.RequestParams) -> a
    java.util.Map a(org.android.agoo.net.async.a) -> a
    void <clinit>() -> <clinit>
org.android.agoo.net.async.a$1 -> org.android.agoo.d.a.i:
    org.android.agoo.net.async.a a -> a
    void <init>(org.android.agoo.net.async.a) -> <init>
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.android.agoo.net.async.a$2 -> org.android.agoo.d.a.j:
    org.android.agoo.net.async.a a -> a
    void <init>(org.android.agoo.net.async.a) -> <init>
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.android.agoo.net.async.a$3 -> org.android.agoo.d.a.k:
    org.android.agoo.net.async.a a -> a
    void <init>(org.android.agoo.net.async.a) -> <init>
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.lang.String a(org.apache.http.HttpResponse) -> a
org.android.agoo.net.async.a$a -> org.android.agoo.d.a.l:
    void <init>(org.apache.http.HttpEntity) -> <init>
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
org.android.agoo.net.async.b -> org.android.agoo.d.a.m:
    org.apache.http.impl.client.AbstractHttpClient b -> a
    org.apache.http.protocol.HttpContext c -> b
    org.apache.http.client.methods.HttpUriRequest d -> c
    org.android.agoo.net.async.AsyncHttpResponseHandler e -> d
    boolean f -> e
    android.content.Context g -> f
    void <init>(android.content.Context,org.apache.http.impl.client.AbstractHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,org.android.agoo.net.async.AsyncHttpResponseHandler) -> <init>
    void run() -> run
    void a() -> a
    void b() -> b
org.android.agoo.net.async.c -> org.android.agoo.d.a.n:
    void <init>(android.content.Context,java.lang.String) -> <init>
    void a(java.util.LinkedHashMap) -> a
org.android.agoo.net.channel.AndroidEvent -> org.android.agoo.d.b.a:
    org.android.agoo.net.channel.AndroidEvent a -> a
    int b -> b
    org.android.agoo.net.channel.AndroidEvent[] c -> c
    org.android.agoo.net.channel.AndroidEvent[] values() -> values
    org.android.agoo.net.channel.AndroidEvent valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getValue() -> a
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.ChannelError -> org.android.agoo.d.b.b:
    org.android.agoo.net.channel.ChannelError a -> a
    org.android.agoo.net.channel.ChannelError b -> b
    org.android.agoo.net.channel.ChannelError c -> c
    org.android.agoo.net.channel.ChannelError d -> d
    org.android.agoo.net.channel.ChannelError e -> e
    org.android.agoo.net.channel.ChannelError f -> f
    org.android.agoo.net.channel.ChannelError g -> g
    org.android.agoo.net.channel.ChannelError h -> h
    org.android.agoo.net.channel.ChannelError i -> i
    org.android.agoo.net.channel.ChannelError j -> j
    org.android.agoo.net.channel.ChannelError k -> k
    org.android.agoo.net.channel.ChannelError l -> l
    org.android.agoo.net.channel.ChannelError m -> m
    org.android.agoo.net.channel.ChannelError n -> n
    org.android.agoo.net.channel.ChannelError o -> o
    org.android.agoo.net.channel.ChannelError p -> p
    org.android.agoo.net.channel.ChannelError q -> q
    org.android.agoo.net.channel.ChannelError r -> r
    org.android.agoo.net.channel.ChannelError s -> s
    org.android.agoo.net.channel.ChannelError t -> t
    org.android.agoo.net.channel.ChannelError u -> u
    org.android.agoo.net.channel.ChannelError v -> v
    org.android.agoo.net.channel.ChannelError w -> w
    org.android.agoo.net.channel.ChannelError x -> x
    org.android.agoo.net.channel.ChannelError y -> y
    org.android.agoo.net.channel.ChannelError z -> z
    int A -> A
    org.android.agoo.net.channel.ChannelError$Level B -> B
    org.android.agoo.net.channel.ChannelError[] C -> C
    org.android.agoo.net.channel.ChannelError[] values() -> values
    org.android.agoo.net.channel.ChannelError valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int,org.android.agoo.net.channel.ChannelError$Level) -> <init>
    void <init>(java.lang.String,int,int) -> <init>
    org.android.agoo.net.channel.ChannelError$Level getChannelLevel() -> a
    int getErrorCode() -> b
    org.android.agoo.net.channel.ChannelError getEasySpdy(int) -> a
    org.android.agoo.net.channel.ChannelError get(int) -> b
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.ChannelError$Level -> org.android.agoo.d.b.c:
    org.android.agoo.net.channel.ChannelError$Level a -> a
    org.android.agoo.net.channel.ChannelError$Level b -> b
    org.android.agoo.net.channel.ChannelError$Level c -> c
    org.android.agoo.net.channel.ChannelError$Level d -> d
    org.android.agoo.net.channel.ChannelError$Level e -> e
    org.android.agoo.net.channel.ChannelError$Level f -> f
    org.android.agoo.net.channel.ChannelError$Level g -> g
    org.android.agoo.net.channel.ChannelError$Level h -> h
    org.android.agoo.net.channel.ChannelError$Level[] i -> i
    org.android.agoo.net.channel.ChannelError$Level[] values() -> values
    org.android.agoo.net.channel.ChannelError$Level valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.ChannelManager -> org.android.agoo.d.b.d:
    java.util.Map k -> a
    long l -> b
    java.util.Map m -> c
    org.android.agoo.net.channel.ChannelType n -> d
    org.android.agoo.net.channel.AndroidEvent o -> e
    android.content.Context p -> f
    org.android.agoo.net.channel.IPushHandler q -> g
    java.lang.String r -> h
    java.lang.String s -> i
    java.lang.String t -> j
    java.lang.String u -> k
    boolean v -> l
    org.android.agoo.net.channel.DNSManager w -> m
    org.android.agoo.net.channel.VoteResult x -> n
    boolean y -> o
    java.lang.String z -> p
    int A -> q
    org.android.agoo.net.channel.IDataChannel B -> r
    short C -> s
    long D -> t
    long E -> u
    org.android.agoo.net.channel.DNSManager$IHostHandler F -> v
    boolean G -> w
    java.lang.Object H -> x
    void <init>() -> <init>
    org.android.agoo.net.channel.ChannelType readyChannelType() -> a
    org.android.agoo.net.channel.ChannelState readyChannelState() -> b
    void send(java.lang.String,byte[],org.android.agoo.net.channel.IPullHandler) -> a
    void hisMessage() -> c
    int ACK(java.lang.String,java.lang.String,java.lang.String) -> a
    void g() -> m
    void setConnectContext(java.lang.Object) -> a
    void connenct(java.lang.String) -> a
    void e(java.lang.String) -> f
    void disconnect() -> d
    void shutdown() -> e
    long ping() -> f
    java.lang.String a(java.lang.String,java.util.Map,java.lang.String) -> a
    int h() -> n
    void i() -> o
    void a(org.android.agoo.net.channel.ChannelError,java.lang.String) -> a
    boolean a(boolean) -> a
    java.lang.String a(org.android.agoo.net.channel.ChannelManager,java.lang.String) -> a
    int a(org.android.agoo.net.channel.ChannelManager,int) -> a
    org.android.agoo.net.channel.ChannelType a(org.android.agoo.net.channel.ChannelType) -> a
    void a(org.android.agoo.net.channel.ChannelManager,org.android.agoo.net.channel.ChannelError,java.lang.String) -> a
    boolean a(org.android.agoo.net.channel.ChannelManager,boolean) -> a
    android.content.Context a(android.content.Context) -> a
    org.android.agoo.net.channel.DNSManager a(org.android.agoo.net.channel.DNSManager) -> a
    java.util.Map a(java.util.Map) -> a
    java.util.Map b(java.util.Map) -> b
    java.lang.String a(java.lang.String) -> b
    java.lang.String b(java.lang.String) -> c
    org.android.agoo.net.channel.IPushHandler a(org.android.agoo.net.channel.IPushHandler) -> a
    java.lang.String a() -> g
    java.lang.String b() -> h
    org.android.agoo.net.channel.DNSManager c() -> i
    java.lang.String c(java.lang.String) -> d
    java.lang.String d(java.lang.String) -> e
    long a(long) -> a
    boolean b(boolean) -> b
    java.util.Map d() -> j
    android.content.Context e() -> k
    org.android.agoo.net.channel.VoteResult a(org.android.agoo.net.channel.VoteResult) -> a
    org.android.agoo.net.channel.AndroidEvent a(org.android.agoo.net.channel.AndroidEvent) -> a
    java.util.Map f() -> l
    void <init>(org.android.agoo.net.channel.ChannelManager$1) -> <init>
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.ChannelManager$1 -> org.android.agoo.d.b.e:
    org.android.agoo.net.channel.ChannelManager a -> a
    void <init>(org.android.agoo.net.channel.ChannelManager) -> <init>
    void onHost(org.android.agoo.net.channel.ChannelType,java.lang.String,int,java.lang.String) -> a
    void onFailure(org.android.agoo.net.channel.ChannelError,java.lang.String) -> a
org.android.agoo.net.channel.ChannelManager$2 -> org.android.agoo.d.b.f:
    int[] a -> a
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.ChannelManager$Builder -> org.android.agoo.d.b.g:
    void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    org.android.agoo.net.channel.ChannelManager$Builder addPushHandler(org.android.agoo.net.channel.IPushHandler) -> a
    org.android.agoo.net.channel.ChannelManager$Builder setDNS(java.lang.String,long) -> a
    org.android.agoo.net.channel.ChannelManager$Builder setRequestInfo(java.lang.String,java.lang.String,java.lang.String) -> a
    org.android.agoo.net.channel.ChannelManager$Builder setDNSProxy(java.lang.String,int) -> a
    org.android.agoo.net.channel.ChannelManager$Builder setApi(java.lang.String) -> a
    org.android.agoo.net.channel.ChannelManager$Builder setAppSecret(java.lang.String) -> b
    org.android.agoo.net.channel.ChannelManager$Builder setTimeout(long) -> a
    org.android.agoo.net.channel.ChannelManager$Builder refreshHost() -> a
    org.android.agoo.net.channel.ChannelManager$Builder forceInit() -> b
    org.android.agoo.net.channel.ChannelManager$Builder setIfNeedMore(boolean) -> a
    org.android.agoo.net.channel.ChannelManager$Builder setChannel(org.android.agoo.net.channel.ChannelType) -> a
    org.android.agoo.net.channel.ChannelManager$Builder setVote(org.android.agoo.net.channel.VoteResult) -> a
    org.android.agoo.net.channel.ChannelManager$Builder setlastEventType(org.android.agoo.net.channel.AndroidEvent) -> a
    org.android.agoo.net.channel.ChannelManager$Builder removeHeader(java.lang.String) -> c
    org.android.agoo.net.channel.ChannelManager$Builder addHeader(java.lang.String,java.lang.String) -> a
    org.android.agoo.net.channel.ChannelManager$Builder addLastTcpConnectedSuccessfully(long,long) -> a
    org.android.agoo.net.channel.ChannelManager$Builder addLastTcpConnectedEndTime(long) -> b
    org.android.agoo.net.channel.ChannelManager build() -> c
org.android.agoo.net.channel.ChannelState -> org.android.agoo.d.b.h:
    org.android.agoo.net.channel.ChannelState a -> a
    org.android.agoo.net.channel.ChannelState b -> b
    org.android.agoo.net.channel.ChannelState c -> c
    org.android.agoo.net.channel.ChannelState d -> d
    org.android.agoo.net.channel.ChannelState[] e -> e
    org.android.agoo.net.channel.ChannelState[] values() -> values
    org.android.agoo.net.channel.ChannelState valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.ChannelType -> org.android.agoo.d.b.i:
    org.android.agoo.net.channel.ChannelType a -> a
    org.android.agoo.net.channel.ChannelType b -> b
    int c -> c
    java.lang.String d -> d
    org.android.agoo.net.channel.ChannelType[] e -> e
    org.android.agoo.net.channel.ChannelType[] values() -> values
    org.android.agoo.net.channel.ChannelType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    java.lang.String getDesc() -> a
    int getValue() -> b
    org.android.agoo.net.channel.ChannelType get(int) -> a
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.DNSManager -> org.android.agoo.d.b.j:
    java.lang.String k -> a
    java.lang.String l -> b
    java.lang.String m -> c
    java.lang.String n -> d
    java.lang.String o -> e
    java.lang.String p -> f
    java.lang.String q -> g
    int r -> h
    long s -> i
    org.android.agoo.net.channel.DNSManager$IHostHandler t -> j
    org.android.agoo.net.channel.ChannelType u -> k
    org.android.agoo.net.channel.ChannelType v -> l
    android.content.Context w -> m
    int x -> n
    boolean y -> o
    org.android.agoo.net.channel.DNSManager$a z -> p
    double A -> q
    double B -> r
    org.android.agoo.net.async.SyncHttpClient C -> s
    void <init>(android.content.Context) -> <init>
    void a(org.android.agoo.net.channel.DNSManager$IHostHandler) -> a
    void a(org.android.agoo.net.channel.ChannelType) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void b(org.android.agoo.net.channel.ChannelType) -> b
    boolean a() -> a
    void b() -> b
    java.util.LinkedHashMap a(android.content.Context) -> a
    void a(java.lang.String[],org.android.agoo.net.channel.ChannelType) -> a
    java.lang.String[] a(java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void a(org.android.agoo.net.channel.ChannelType,java.lang.String,java.lang.String) -> a
    void a(org.android.agoo.net.channel.ChannelError,java.lang.String) -> a
    org.android.agoo.net.channel.ChannelType a(org.android.agoo.net.channel.DNSManager) -> a
    org.android.agoo.net.channel.ChannelType a(org.android.agoo.net.channel.DNSManager,org.android.agoo.net.channel.ChannelType) -> a
    void b(org.android.agoo.net.channel.DNSManager) -> b
org.android.agoo.net.channel.DNSManager$1 -> org.android.agoo.d.b.k:
    int[] a -> a
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.DNSManager$IHostHandler -> org.android.agoo.d.b.l:
    void onHost(org.android.agoo.net.channel.ChannelType,java.lang.String,int,java.lang.String) -> a
    void onFailure(org.android.agoo.net.channel.ChannelError,java.lang.String) -> a
org.android.agoo.net.channel.DNSManager$a -> org.android.agoo.d.b.m:
    boolean b -> b
    org.android.agoo.net.channel.ChannelType c -> c
    org.android.agoo.net.channel.DNSManager a -> a
    void <init>(org.android.agoo.net.channel.DNSManager) -> <init>
    void a(org.android.agoo.net.channel.ChannelType) -> a
    void run() -> run
org.android.agoo.net.channel.IDataChannel -> org.android.agoo.d.b.n:
    void connect(java.lang.Object,android.content.Context,java.lang.String,java.util.Map,long,org.android.agoo.net.channel.IPushHandler,java.lang.String) -> a
    int send(java.lang.String,byte[],org.android.agoo.net.channel.IPullHandler) -> a
    void asyncDisconnect() -> a
    long ping() -> b
    void close() -> c
    void shutdown() -> d
    org.android.agoo.net.channel.ChannelState readyChannelState() -> e
org.android.agoo.net.channel.IPullHandler -> org.android.agoo.d.b.o:
    void onResponse(java.lang.Object,java.lang.String,int,java.util.Map,byte[]) -> a
org.android.agoo.net.channel.IPushHandler -> org.android.agoo.d.b.p:
    void onConnected(java.lang.Object,long,long,java.util.Map) -> a
    void onPing(java.lang.Object,long) -> a
    void onDisconnected(java.lang.Object,long) -> b
    void onData(java.lang.Object,long,java.lang.String,byte[]) -> a
    void onError(java.lang.Object,long,org.android.agoo.net.channel.ChannelError,java.util.Map,java.lang.Throwable) -> a
org.android.agoo.net.channel.SignHelper -> org.android.agoo.d.b.q:
    android.net.Uri e -> a
    java.lang.String a() -> a
    java.lang.String a(long) -> a
    java.lang.String generatorClient(android.content.Context,int,short,long,long,int,int) -> a
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
    byte[] a(java.lang.String) -> a
    java.lang.String generatorSign(android.content.Context,java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.util.Map) -> a
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.VoteResult -> org.android.agoo.d.b.r:
    org.android.agoo.net.channel.VoteResult a -> a
    org.android.agoo.net.channel.VoteResult b -> b
    int c -> c
    org.android.agoo.net.channel.VoteResult[] d -> d
    org.android.agoo.net.channel.VoteResult[] values() -> values
    org.android.agoo.net.channel.VoteResult valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getValue() -> a
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.chunked.HttpURLChunkedChannel -> org.android.agoo.d.b.a.a:
    java.net.HttpURLConnection l -> g
    void <init>() -> <init>
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.util.Map) -> a
    java.util.Map a(java.net.HttpURLConnection) -> a
    java.lang.String a(java.util.List) -> a
    void b(java.net.HttpURLConnection) -> b
    void d() -> f
    void c() -> g
org.android.agoo.net.channel.chunked.a -> org.android.agoo.d.b.a.b:
    java.util.concurrent.ThreadPoolExecutor l -> g
    org.android.agoo.net.channel.IPushHandler m -> h
    java.util.concurrent.Future n -> i
    java.util.concurrent.Future o -> j
    java.lang.String p -> k
    int q -> l
    java.lang.String r -> m
    org.android.agoo.net.channel.ChannelState a -> a
    java.io.InputStream b -> b
    int c -> c
    boolean d -> d
    long e -> e
    int s -> n
    java.lang.Object t -> o
    java.util.concurrent.atomic.AtomicBoolean u -> p
    android.content.Context f -> f
    char[] v -> q
    void <init>() -> <init>
    void callError(boolean) -> a
    boolean hasCallError() -> h
    void a() -> i
    void l() -> s
    int b() -> j
    void a(android.content.Context) -> a
    void connect(java.lang.Object,android.content.Context,java.lang.String,java.util.Map,long,org.android.agoo.net.channel.IPushHandler,java.lang.String) -> a
    void syncDisconnect() -> k
    void asyncDisconnect() -> a
    org.android.agoo.net.channel.ChannelState readyChannelState() -> e
    void a(java.lang.String,java.util.Map) -> a
    void c() -> g
    void d() -> f
    void e() -> l
    void f() -> m
    void g() -> n
    void a(char[]) -> a
    void a(java.lang.String) -> a
    void a(long,java.util.Map) -> a
    boolean m() -> t
    void h() -> o
    void a(org.android.agoo.net.channel.ChannelError,java.lang.Throwable) -> a
    void a(org.android.agoo.net.channel.ChannelError,java.util.Map,java.lang.Throwable) -> a
    java.lang.String i() -> p
    int j() -> q
    boolean k() -> r
    long ping() -> b
    int send(java.lang.String,byte[],org.android.agoo.net.channel.IPullHandler) -> a
    void shutdown() -> d
    void close() -> c
    void a(org.android.agoo.net.channel.chunked.a) -> a
    void <clinit>() -> <clinit>
org.android.agoo.net.channel.chunked.a$1 -> org.android.agoo.d.b.a.c:
    java.lang.String a -> a
    java.util.Map b -> b
    org.android.agoo.net.channel.chunked.a c -> c
    void <init>(org.android.agoo.net.channel.chunked.a,java.lang.String,java.util.Map) -> <init>
    void run() -> run
org.android.agoo.net.channel.chunked.a$2 -> org.android.agoo.d.b.a.d:
    long a -> a
    org.android.agoo.net.channel.chunked.a b -> b
    void <init>(org.android.agoo.net.channel.chunked.a,long) -> <init>
    void run() -> run
org.android.agoo.net.channel.chunked.a$3 -> org.android.agoo.d.b.a.e:
    org.android.agoo.net.channel.chunked.a a -> a
    void <init>(org.android.agoo.net.channel.chunked.a) -> <init>
    void run() -> run
org.android.agoo.net.channel.chunked.a$4 -> org.android.agoo.d.b.a.f:
    org.android.agoo.net.channel.chunked.a a -> a
    void <init>(org.android.agoo.net.channel.chunked.a) -> <init>
    void run() -> run
org.android.agoo.net.channel.spdy.SpdyChannel -> org.android.agoo.d.b.b.a:
    org.android.spdy.SpdyAgent h -> c
    org.android.spdy.SpdySession i -> d
    java.lang.String j -> e
    org.android.agoo.net.channel.IPushHandler k -> f
    java.util.Map l -> g
    java.util.Map m -> h
    java.util.concurrent.atomic.AtomicBoolean n -> i
    long o -> j
    java.net.URL p -> k
    java.lang.Object q -> l
    org.android.agoo.net.channel.ChannelState a -> a
    android.content.Context e -> b
    long r -> m
    long s -> n
    org.android.spdy.SessionCb t -> o
    void <init>() -> <init>
    void callError(boolean) -> a
    boolean hasCallError() -> f
    void connect(java.lang.Object,android.content.Context,java.lang.String,java.util.Map,long,org.android.agoo.net.channel.IPushHandler,java.lang.String) -> a
    long ping() -> b
    int send(java.lang.String,byte[],org.android.agoo.net.channel.IPullHandler) -> a
    void a() -> g
    void asyncDisconnect() -> a
    void close() -> c
    void shutdown() -> d
    org.android.agoo.net.channel.ChannelState readyChannelState() -> e
    void spdyDataSendCallback(org.android.spdy.SpdySession,boolean,long,int,java.lang.Object) -> spdyDataSendCallback
    void spdyDataRecvCallback(org.android.spdy.SpdySession,boolean,long,int,java.lang.Object) -> spdyDataRecvCallback
    void spdyRequestRecvCallback(org.android.spdy.SpdySession,long,java.lang.Object) -> spdyRequestRecvCallback
    void spdyDataChunkRecvCB(org.android.spdy.SpdySession,boolean,long,byte[],int,java.lang.Object) -> spdyDataChunkRecvCB
    void spdyOnStreamResponse(org.android.spdy.SpdySession,long,java.util.Map,java.lang.Object) -> spdyOnStreamResponse
    boolean hasPushSteam(java.lang.String) -> a
    void a(java.lang.String,java.util.Map) -> a
    java.util.Map a(java.util.Map) -> a
    java.lang.String a(java.util.List) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(org.android.agoo.net.channel.ChannelError,java.util.Map,java.lang.Throwable) -> a
    void spdyStreamCloseCallback(org.android.spdy.SpdySession,long,int,java.lang.Object,org.android.spdy.SuperviseData) -> spdyStreamCloseCallback
    long a(org.android.agoo.net.channel.spdy.SpdyChannel,long) -> a
    java.lang.String a(org.android.agoo.net.channel.spdy.SpdyChannel) -> a
    void b(org.android.agoo.net.channel.spdy.SpdyChannel) -> b
    void a(org.android.agoo.net.channel.spdy.SpdyChannel,android.content.Context,java.lang.String,java.lang.String) -> a
    void a(org.android.agoo.net.channel.spdy.SpdyChannel,org.android.agoo.net.channel.ChannelError,java.util.Map,java.lang.Throwable) -> a
    long c(org.android.agoo.net.channel.spdy.SpdyChannel) -> c
    long b(org.android.agoo.net.channel.spdy.SpdyChannel,long) -> b
    java.lang.Object d(org.android.agoo.net.channel.spdy.SpdyChannel) -> d
    org.android.agoo.net.channel.IPushHandler e(org.android.agoo.net.channel.spdy.SpdyChannel) -> e
    long f(org.android.agoo.net.channel.spdy.SpdyChannel) -> f
org.android.agoo.net.channel.spdy.SpdyChannel$1 -> org.android.agoo.d.b.b.b:
    org.android.agoo.net.channel.spdy.SpdyChannel a -> a
    void <init>(org.android.agoo.net.channel.spdy.SpdyChannel) -> <init>
    void run() -> run
org.android.agoo.net.channel.spdy.SpdyChannel$2 -> org.android.agoo.d.b.b.c:
    org.android.agoo.net.channel.spdy.SpdyChannel a -> a
    void <init>(org.android.agoo.net.channel.spdy.SpdyChannel) -> <init>
    void spdySessionConnectCB(org.android.spdy.SpdySession,org.android.spdy.SuperviseConnectInfo) -> spdySessionConnectCB
    void spdySessionFailedError(org.android.spdy.SpdySession,int,java.lang.Object) -> spdySessionFailedError
    void spdyPingRecvCallback(org.android.spdy.SpdySession,long,java.lang.Object) -> spdyPingRecvCallback
    void spdySessionCloseCallback(org.android.spdy.SpdySession,java.lang.Object,org.android.spdy.SuperviseConnectInfo,int) -> spdySessionCloseCallback
org.android.agoo.net.channel.spdy.SpdyChannel$a -> org.android.agoo.d.b.b.d:
    int b -> b
    java.util.Map c -> c
    java.io.ByteArrayOutputStream d -> d
    org.android.agoo.net.channel.spdy.SpdyChannel a -> a
    void <init>(org.android.agoo.net.channel.spdy.SpdyChannel,int,java.util.Map) -> <init>
    void a(byte[]) -> a
    byte[] a() -> a
    int b() -> b
    java.util.Map c() -> c
org.android.agoo.net.mtop.IMtopAsynClient -> org.android.agoo.d.c.a:
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void setBaseUrl(java.lang.String) -> c
    void getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest,org.android.agoo.net.mtop.MtopResponseHandler) -> a
org.android.agoo.net.mtop.IMtopSynClient -> org.android.agoo.d.c.b:
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void setBaseUrl(java.lang.String) -> c
    org.android.agoo.net.mtop.Result getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
    java.util.Map getV3ForRegister(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> b
org.android.agoo.net.mtop.MtopAsyncClientV3 -> org.android.agoo.d.c.c:
    java.lang.String b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    void <init>() -> <init>
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest,org.android.agoo.net.mtop.MtopResponseHandler) -> a
    void setBaseUrl(java.lang.String) -> c
org.android.agoo.net.mtop.MtopRequest -> org.android.agoo.d.c.d:
    java.lang.String b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    java.lang.String e -> d
    java.lang.String f -> e
    java.lang.String g -> f
    java.lang.String h -> g
    long i -> h
    boolean j -> i
    java.lang.String k -> j
    java.util.Map l -> k
    java.util.Map m -> l
    boolean isHasSigin() -> a
    long getTime() -> b
    java.lang.String getDeviceId() -> c
    void setDeviceId(java.lang.String) -> a
    void <init>() -> <init>
    java.util.Map getSysParams() -> d
    void putSysParams(java.util.Map) -> a
    void putParams(java.lang.String,java.lang.Object) -> a
    void putParams(java.util.Map) -> b
    java.lang.String getTtId() -> e
    void setTtId(java.lang.String) -> b
    java.lang.String getApi() -> f
    void setApi(java.lang.String) -> c
    java.lang.String getV() -> g
    void setV(java.lang.String) -> d
    java.lang.String getSId() -> h
    void setSId(java.lang.String) -> e
    java.lang.String getEcode() -> i
    java.util.Map getParams() -> j
    java.lang.String getAppKey() -> k
    void setAppKey(java.lang.String) -> f
    java.lang.String getAppSecret() -> l
    void setAppSecret(java.lang.String) -> g
org.android.agoo.net.mtop.MtopRequestHelper -> org.android.agoo.d.c.e:
    void checkAppKeyAndAppSecret(org.android.agoo.net.mtop.MtopRequest,java.lang.String,java.lang.String) -> a
    org.android.agoo.net.async.RequestParams getUrlWithRequestParams(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
    long a() -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.util.Map) -> a
org.android.agoo.net.mtop.MtopResponseHandler -> org.android.agoo.d.c.f:
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    void <init>() -> <init>
    void a(java.util.Map,java.lang.String) -> a
    void onFailure(java.lang.String,java.lang.String) -> onFailure
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
org.android.agoo.net.mtop.MtopResponseHelper -> org.android.agoo.d.c.g:
    org.android.agoo.net.mtop.Result parse(java.lang.String) -> a
org.android.agoo.net.mtop.MtopSyncClientV3 -> org.android.agoo.d.c.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void <init>() -> <init>
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void setBaseUrl(java.lang.String) -> c
    java.lang.String b(java.lang.String,org.android.agoo.net.async.RequestParams) -> b
    org.android.agoo.net.mtop.Result getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
    java.util.Map getV3ForRegister(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> b
org.android.agoo.net.mtop.Result -> org.android.agoo.d.c.i:
    boolean a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    void <init>() -> <init>
    java.util.Map getHeaders() -> a
    void setHeaders(java.util.Map) -> a
    boolean isSuccess() -> b
    void setSuccess(boolean) -> a
    java.lang.String getData() -> c
    void setData(java.lang.String) -> a
    java.lang.String getRetDesc() -> d
    void setRetDesc(java.lang.String) -> b
    java.lang.String getRetCode() -> e
    void setRetCode(java.lang.String) -> c
    int getHttpCode() -> f
    void setHttpCode(int) -> a
    java.lang.String toString() -> toString
org.android.agoo.proxy.ProxyFactroy -> org.android.agoo.e.a:
    java.lang.Object getInstance(android.content.Context,java.lang.String) -> a
    java.lang.Object getBaseService(android.content.Context,java.lang.String,java.lang.Object) -> a
org.android.agoo.service.AgooService -> org.android.agoo.service.AgooService:
    java.lang.String TAG -> TAG
    org.android.agoo.IPushService pushService -> pushService
    android.content.Context mContext -> mContext
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
org.android.agoo.service.AgooService$1 -> org.android.agoo.service.AgooService$1:
    org.android.agoo.service.AgooService a -> a
    void <init>(org.android.agoo.service.AgooService) -> <init>
    void stop() -> stop
org.android.agoo.service.ElectionReceiverService -> org.android.agoo.service.ElectionReceiverService:
    boolean sendElectionResult(android.content.Intent) -> sendElectionResult
org.android.agoo.service.ElectionReceiverService$Stub -> org.android.agoo.service.ElectionReceiverService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_sendElectionResult -> TRANSACTION_sendElectionResult
    void <init>() -> <init>
    org.android.agoo.service.ElectionReceiverService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.android.agoo.service.ElectionReceiverService$Stub$a -> org.android.agoo.service.ElectionReceiverService$Stub$a:
    android.os.IBinder a -> a
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    boolean sendElectionResult(android.content.Intent) -> sendElectionResult
org.android.agoo.service.IMessageService -> org.android.agoo.service.IMessageService:
    boolean ping() -> ping
    void probe() -> probe
org.android.agoo.service.IMessageService$Stub -> org.android.agoo.service.IMessageService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_ping -> TRANSACTION_ping
    int TRANSACTION_probe -> TRANSACTION_probe
    void <init>() -> <init>
    org.android.agoo.service.IMessageService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.android.agoo.service.IMessageService$Stub$a -> org.android.agoo.service.IMessageService$Stub$a:
    android.os.IBinder a -> a
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    boolean ping() -> ping
    void probe() -> probe
org.android.agoo.service.SendMessage -> org.android.agoo.service.SendMessage:
    int doSend(android.content.Intent) -> doSend
org.android.agoo.service.SendMessage$Stub -> org.android.agoo.service.SendMessage$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_doSend -> TRANSACTION_doSend
    void <init>() -> <init>
    org.android.agoo.service.SendMessage asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.android.agoo.service.SendMessage$Stub$a -> org.android.agoo.service.SendMessage$Stub$a:
    android.os.IBinder a -> a
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    int doSend(android.content.Intent) -> doSend
org.android.agoo.ut.UT -> org.android.agoo.f.a:
    void start(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void stop(android.content.Context) -> a
    void commitEvent(int,java.lang.Object,java.lang.Object) -> a
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String[]) -> a
org.android.agoo.ut.UTFactroy -> org.android.agoo.f.b:
    org.android.agoo.ut.UTFactroy instance -> a
    org.android.agoo.ut.UT logger -> b
    void <init>() -> <init>
    org.android.agoo.ut.UTFactroy getInstance() -> a
    org.android.agoo.ut.UT getLogger(android.content.Context) -> a
    void commitEvent(android.content.Context,java.lang.Object,java.lang.String[]) -> a
    void <clinit>() -> <clinit>
org.android.spdy.Intenalcb -> org.android.spdy.Intenalcb:
    void spdySessionConnectCB(org.android.spdy.SpdySession,org.android.spdy.SuperviseConnectInfo) -> spdySessionConnectCB
    void spdyDataChunkRecvCB(org.android.spdy.SpdySession,boolean,long,byte[],int,int) -> spdyDataChunkRecvCB
    void spdyDataRecvCallback(org.android.spdy.SpdySession,boolean,long,int,int) -> spdyDataRecvCallback
    void spdyDataSendCallback(org.android.spdy.SpdySession,boolean,long,int,int) -> spdyDataSendCallback
    void spdyStreamCloseCallback(org.android.spdy.SpdySession,long,int,int,org.android.spdy.SuperviseData) -> spdyStreamCloseCallback
    void spdyPingRecvCallback(org.android.spdy.SpdySession,long,java.lang.Object) -> spdyPingRecvCallback
    void spdyRequestRecvCallback(org.android.spdy.SpdySession,long,int) -> spdyRequestRecvCallback
    void spdyOnStreamResponse(org.android.spdy.SpdySession,long,java.util.Map,int) -> spdyOnStreamResponse
    void spdySessionFailedError(org.android.spdy.SpdySession,int,java.lang.Object) -> spdySessionFailedError
    void spdySessionCloseCallback(org.android.spdy.SpdySession,java.lang.Object,org.android.spdy.SuperviseConnectInfo,int) -> spdySessionCloseCallback
org.android.spdy.NetSparseArray -> org.android.spdy.NetSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    void <init>() -> <init>
    void <init>(int) -> <init>
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    void toArray(java.lang.Object[]) -> toArray
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    void <clinit>() -> <clinit>
org.android.spdy.NetTimeGaurd -> org.android.spdy.NetTimeGaurd:
    long calltime -> calltime
    long total -> total
    long[] totaltime -> totaltime
    int CREATE -> CREATE
    int PING -> PING
    int ERROR -> ERROR
    int STREAM -> STREAM
    void <init>() -> <init>
    void start(int) -> start
    long begin() -> begin
    void end(java.lang.String,int,long) -> end
    void finish(int) -> finish
    void <clinit>() -> <clinit>
org.android.spdy.RequestPriority -> org.android.spdy.RequestPriority:
    org.android.spdy.RequestPriority HIGHEST -> HIGHEST
    org.android.spdy.RequestPriority HIGH -> HIGH
    org.android.spdy.RequestPriority MEDIUM -> MEDIUM
    org.android.spdy.RequestPriority LOW -> LOW
    org.android.spdy.RequestPriority LOWEST -> LOWEST
    org.android.spdy.RequestPriority IDLE -> IDLE
    org.android.spdy.RequestPriority DEFAULT_PRIORITY -> DEFAULT_PRIORITY
    int priority -> priority
    org.android.spdy.RequestPriority[] $VALUES -> $VALUES
    org.android.spdy.RequestPriority[] values() -> values
    org.android.spdy.RequestPriority valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getPriorityInt() -> getPriorityInt
    void <clinit>() -> <clinit>
org.android.spdy.SessionCb -> org.android.spdy.SessionCb:
    void spdySessionConnectCB(org.android.spdy.SpdySession,org.android.spdy.SuperviseConnectInfo) -> spdySessionConnectCB
    void spdyPingRecvCallback(org.android.spdy.SpdySession,long,java.lang.Object) -> spdyPingRecvCallback
    void spdySessionFailedError(org.android.spdy.SpdySession,int,java.lang.Object) -> spdySessionFailedError
    void spdySessionCloseCallback(org.android.spdy.SpdySession,java.lang.Object,org.android.spdy.SuperviseConnectInfo,int) -> spdySessionCloseCallback
org.android.spdy.SoInstallMgrSdk -> org.android.spdy.SoInstallMgrSdk:
    java.lang.String ARMEABI -> ARMEABI
    java.lang.String X86 -> X86
    java.lang.String MIPS -> MIPS
    android.content.Context mContext -> mContext
    int EventID_SO_INIT -> EventID_SO_INIT
    java.lang.String LOGTAG -> LOGTAG
    void <init>() -> <init>
    void init(android.content.Context) -> init
    boolean initSo(java.lang.String,int) -> initSo
    boolean initSo(java.lang.String,int,java.lang.ClassLoader) -> initSo
    java.lang.String _getFieldReflectively(android.os.Build,java.lang.String) -> _getFieldReflectively
    java.lang.String _cpuType() -> _cpuType
    java.lang.String _targetSoFile(java.lang.String,int) -> _targetSoFile
    void removeSoIfExit(java.lang.String,int) -> removeSoIfExit
    boolean isExist(java.lang.String,int) -> isExist
    boolean _loadUnzipSo(java.lang.String,int,java.lang.ClassLoader) -> _loadUnzipSo
    boolean unZipSelectedFiles(java.lang.String,int,java.lang.ClassLoader) -> unZipSelectedFiles
    void <clinit>() -> <clinit>
org.android.spdy.SpdyAgent -> org.android.spdy.SpdyAgent:
    int MAX_SPDY_SESSION_COUNT -> MAX_SPDY_SESSION_COUNT
    int SPDY_PROTOCAL -> SPDY_PROTOCAL
    int SPDY_SESSION_CREATE -> SPDY_SESSION_CREATE
    int SPDY_DATA_CHUNK_RECV -> SPDY_DATA_CHUNK_RECV
    int SPDY_DATA_RECV -> SPDY_DATA_RECV
    int SPDY_DATA_SEND -> SPDY_DATA_SEND
    int SPDY_STREAM_CLOSE -> SPDY_STREAM_CLOSE
    int SPDY_PING_RECV -> SPDY_PING_RECV
    int SPDY_REQUEST_RECV -> SPDY_REQUEST_RECV
    int SPDY_SESSION_CLOSE -> SPDY_SESSION_CLOSE
    int SPDY_STREAM_RESPONSE_RECV -> SPDY_STREAM_RESPONSE_RECV
    int SPDY_SESSION_FAILED_ERROR -> SPDY_SESSION_FAILED_ERROR
    int SPDY_CUSTOM_CONTROL_FRAME_RECV -> SPDY_CUSTOM_CONTROL_FRAME_RECV
    int MODE_QUIC -> MODE_QUIC
    java.util.HashMap sessionMgr -> sessionMgr
    java.util.LinkedList sessionQueue -> sessionQueue
    long agentNativePtr -> agentNativePtr
    java.util.concurrent.atomic.AtomicBoolean closed -> closed
    java.lang.String proxyUsername -> proxyUsername
    java.lang.String proxyPassword -> proxyPassword
    boolean enableDebug -> enableDebug
    boolean enableTimeGaurd -> enableTimeGaurd
    boolean HAVE_CLOSE -> HAVE_CLOSE
    java.util.concurrent.locks.ReentrantReadWriteLock rwLock -> rwLock
    java.util.concurrent.locks.Lock r -> r
    java.util.concurrent.locks.Lock w -> w
    org.android.spdy.SpdyAgent gSingleInstance -> gSingleInstance
    java.lang.Object lock -> lock
    int KB8 -> KB8
    int KB32 -> KB32
    int MB5 -> MB5
    void clearSpdySession(java.lang.String) -> clearSpdySession
    org.android.spdy.SpdyAgent getInstance(android.content.Context,org.android.spdy.SpdyVersion,org.android.spdy.SpdySessionKind) -> getInstance
    void <init>(android.content.Context,org.android.spdy.SpdyVersion,org.android.spdy.SpdySessionKind) -> <init>
    org.android.spdy.SpdySession getSession(org.android.spdy.SpdyRequest) -> getSession
    void setProxyUsernamePassword(java.lang.String,java.lang.String) -> setProxyUsernamePassword
    void securityCheck(int,int) -> securityCheck
    void tableListJudge(int) -> tableListJudge
    void InvlidCharJudge(byte[],byte[]) -> InvlidCharJudge
    void headJudge(java.util.Map) -> headJudge
    java.lang.String mapBodyToString(java.util.Map) -> mapBodyToString
    byte[] dataproviderToByteArray(org.android.spdy.SpdyRequest,org.android.spdy.SpdyDataProvider) -> dataproviderToByteArray
    org.android.spdy.SpdySession createSession(java.lang.String,java.lang.Object,org.android.spdy.SessionCb) -> createSession
    int closeSession(java.lang.String) -> closeSession
    org.android.spdy.SpdySession submitRequest(org.android.spdy.SpdyRequest,org.android.spdy.SpdyDataProvider,java.lang.Object,java.lang.Object,org.android.spdy.Spdycb,org.android.spdy.SessionCb,int) -> submitRequest
    void agentIsOpen() -> agentIsOpen
    void close() -> close
    void removeSession(org.android.spdy.SpdySession) -> removeSession
    int closeSession(long) -> closeSession
    java.lang.String[] mapToByteArray(java.util.Map) -> mapToByteArray
    java.util.Map stringArrayToMap(java.lang.String[]) -> stringArrayToMap
    int setSessionKind(org.android.spdy.SpdySessionKind) -> setSessionKind
    int setConnectTimeOut(int) -> setConnectTimeOut
    int setConTimeout(long,int) -> setConTimeout
    long initAgent(int,int,int) -> initAgent
    int freeAgent(long) -> freeAgent
    long getSession(long,byte[],char) -> getSession
    int closeSessionN(long) -> closeSessionN
    int setSessionKind(long,int) -> setSessionKind
    long submitRequest(long,org.android.spdy.SpdySession,byte[],char,byte[],char,byte[],byte[],byte[],byte,java.lang.String[],byte[],boolean,java.lang.Object,int,int,int,int,int) -> submitRequest
    long createSession(long,org.android.spdy.SpdySession,byte[],char,byte[],char,byte[],byte[],java.lang.Object,int,int) -> createSession
    void spdySessionConnectCB(org.android.spdy.SpdySession,org.android.spdy.SuperviseConnectInfo) -> spdySessionConnectCB
    void spdyDataChunkRecvCB(org.android.spdy.SpdySession,boolean,int,byte[],int,int) -> spdyDataChunkRecvCB
    void spdyDataRecvCallback(org.android.spdy.SpdySession,boolean,int,int,int) -> spdyDataRecvCallback
    void spdyDataSendCallback(org.android.spdy.SpdySession,boolean,int,int,int) -> spdyDataSendCallback
    void spdyStreamCloseCallback(org.android.spdy.SpdySession,int,int,int,org.android.spdy.SuperviseData) -> spdyStreamCloseCallback
    void spdyPingRecvCallback(org.android.spdy.SpdySession,int,java.lang.Object) -> spdyPingRecvCallback
    void spdyRequestRecvCallback(org.android.spdy.SpdySession,int,int) -> spdyRequestRecvCallback
    void spdyStreamResponseRecv(org.android.spdy.SpdySession,int,java.lang.String[],int) -> spdyStreamResponseRecv
    void spdySessionCloseCallback(org.android.spdy.SpdySession,java.lang.Object,org.android.spdy.SuperviseConnectInfo,int) -> spdySessionCloseCallback
    void spdySessionFailedError(org.android.spdy.SpdySession,int,java.lang.Object) -> spdySessionFailedError
    void crashReporter(int) -> crashReporter
    void <clinit>() -> <clinit>
org.android.spdy.SpdyDataProvider -> org.android.spdy.SpdyDataProvider:
    byte[] data -> data
    java.util.Map postBody -> postBody
    boolean finished -> finished
    void <init>(byte[]) -> <init>
    void <init>(java.util.Map) -> <init>
org.android.spdy.SpdyErrorException -> org.android.spdy.SpdyErrorException:
    long serialVersionUID -> serialVersionUID
    int error -> error
    void <init>(int) -> <init>
    void <init>(java.lang.String,int) -> <init>
    void <init>(java.lang.String,java.lang.Throwable,int) -> <init>
    void <init>(java.lang.Throwable,int) -> <init>
    int SpdyErrorGetCode() -> SpdyErrorGetCode
org.android.spdy.SpdyRequest -> org.android.spdy.SpdyRequest:
    java.lang.String GET_METHOD -> GET_METHOD
    java.lang.String POST_METHOD -> POST_METHOD
    java.net.URL url -> url
    java.lang.String host -> host
    int port -> port
    java.lang.String proxyIp -> proxyIp
    int proxyPort -> proxyPort
    java.lang.String method -> method
    java.util.Map extHead -> extHead
    org.android.spdy.RequestPriority priority -> priority
    int requestTimeoutMs -> requestTimeoutMs
    int connectionTimeoutMs -> connectionTimeoutMs
    int retryTimes -> retryTimes
    void <init>(java.net.URL,java.lang.String,int,java.lang.String,int,java.lang.String,org.android.spdy.RequestPriority,int,int,int) -> <init>
    void <init>(java.net.URL,java.lang.String,int,java.lang.String,org.android.spdy.RequestPriority) -> <init>
    void <init>(java.net.URL,java.lang.String,org.android.spdy.RequestPriority) -> <init>
    void <init>(java.net.URL,java.lang.String,org.android.spdy.RequestPriority,int,int) -> <init>
    void <init>(java.net.URL,java.lang.String) -> <init>
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void addHeaders(java.util.Map) -> addHeaders
    java.net.URL getUrl() -> getUrl
    java.lang.String getMethod() -> getMethod
    int getPriority() -> getPriority
    java.lang.String getPath() -> getPath
    java.util.Map getHeaders() -> getHeaders
    java.lang.String getUrlPath() -> getUrlPath
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getProxyIp() -> getProxyIp
    int getProxyPort() -> getProxyPort
    java.lang.String getAuthority() -> getAuthority
    int getRequestTimeoutMs() -> getRequestTimeoutMs
    int getConnectionTimeoutMs() -> getConnectionTimeoutMs
    int getRetryTimes() -> getRetryTimes
org.android.spdy.SpdySession -> org.android.spdy.SpdySession:
    int count -> count
    org.android.spdy.SpdyAgent agent -> agent
    long sessionNativePtr -> sessionNativePtr
    java.util.concurrent.atomic.AtomicBoolean closed -> closed
    boolean sessionClearedFromSessionMgr -> sessionClearedFromSessionMgr
    org.android.spdy.Intenalcb intenalcb -> intenalcb
    android.os.HandlerThread thread -> thread
    android.os.Handler handler -> handler
    java.lang.String authority -> authority
    java.lang.Object lock -> lock
    int streamcount -> streamcount
    org.android.spdy.NetSparseArray spdyStream -> spdyStream
    org.android.spdy.SessionCb sessionCallBack -> sessionCallBack
    java.lang.Object userData -> userData
    void <init>(long,org.android.spdy.SpdyAgent,java.lang.String,org.android.spdy.SessionCb,java.lang.Object) -> <init>
    java.lang.String getAuthority() -> getAuthority
    java.lang.Object getUserData() -> getUserData
    int putSpdyStreamCtx(org.android.spdy.SpdyStreamContext) -> putSpdyStreamCtx
    org.android.spdy.SpdyStreamContext getSpdyStream(int) -> getSpdyStream
    void removeSpdyStream(int) -> removeSpdyStream
    org.android.spdy.SpdyStreamContext[] getAllStreamCb() -> getAllStreamCb
    void clearAllStreamCb() -> clearAllStreamCb
    org.android.spdy.SpdyAgent getSpdyAgent() -> getSpdyAgent
    android.os.Handler getMsgHandler() -> getMsgHandler
    long getSessionNativePtr() -> getSessionNativePtr
    void setSessionNativePtr(long) -> setSessionNativePtr
    int setOption(int,int) -> setOption
    int submitPing() -> submitPing
    int streamReset(long,int) -> streamReset
    int submitRequest(org.android.spdy.SpdyRequest,org.android.spdy.SpdyDataProvider,java.lang.Object,org.android.spdy.Spdycb) -> submitRequest
    void sessionIsOpen() -> sessionIsOpen
    int cleanUp() -> cleanUp
    int closeInternal() -> closeInternal
    int closeSession() -> closeSession
    int closeprivate() -> closeprivate
    int submitRequestN(long,java.lang.String,byte,java.lang.String[],byte[],boolean,int,int) -> submitRequestN
    int sendHeadersN(long,int,java.lang.String[],boolean) -> sendHeadersN
    int streamSendDataN(long,int,byte[],int,int,boolean) -> streamSendDataN
    int setOptionN(long,int,int) -> setOptionN
    int submitPingN(long) -> submitPingN
    int streamCloseN(long,int,int) -> streamCloseN
    void <clinit>() -> <clinit>
org.android.spdy.SpdySessionKind -> org.android.spdy.SpdySessionKind:
    org.android.spdy.SpdySessionKind NONE_SESSION -> NONE_SESSION
    org.android.spdy.SpdySessionKind WIFI_SESSION -> WIFI_SESSION
    org.android.spdy.SpdySessionKind THREE_G_SESSION -> THREE_G_SESSION
    org.android.spdy.SpdySessionKind TWO_G_SESSION -> TWO_G_SESSION
    int code -> code
    org.android.spdy.SpdySessionKind[] $VALUES -> $VALUES
    org.android.spdy.SpdySessionKind[] values() -> values
    org.android.spdy.SpdySessionKind valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getint() -> getint
    void <clinit>() -> <clinit>
org.android.spdy.SpdyStreamContext -> org.android.spdy.SpdyStreamContext:
    java.lang.Object streamContext -> streamContext
    org.android.spdy.Spdycb callBack -> callBack
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,org.android.spdy.Spdycb) -> <init>
    int getContext(java.lang.Object) -> getContext
org.android.spdy.SpdyVersion -> org.android.spdy.SpdyVersion:
    org.android.spdy.SpdyVersion SPDY2 -> SPDY2
    org.android.spdy.SpdyVersion SPDY3 -> SPDY3
    org.android.spdy.SpdyVersion SPDY3DOT1 -> SPDY3DOT1
    int version -> version
    org.android.spdy.SpdyVersion[] $VALUES -> $VALUES
    org.android.spdy.SpdyVersion[] values() -> values
    org.android.spdy.SpdyVersion valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getInt() -> getInt
    void <clinit>() -> <clinit>
org.android.spdy.Spdycb -> org.android.spdy.Spdycb:
    void spdyDataChunkRecvCB(org.android.spdy.SpdySession,boolean,long,byte[],int,java.lang.Object) -> spdyDataChunkRecvCB
    void spdyDataRecvCallback(org.android.spdy.SpdySession,boolean,long,int,java.lang.Object) -> spdyDataRecvCallback
    void spdyDataSendCallback(org.android.spdy.SpdySession,boolean,long,int,java.lang.Object) -> spdyDataSendCallback
    void spdyStreamCloseCallback(org.android.spdy.SpdySession,long,int,java.lang.Object,org.android.spdy.SuperviseData) -> spdyStreamCloseCallback
    void spdyRequestRecvCallback(org.android.spdy.SpdySession,long,java.lang.Object) -> spdyRequestRecvCallback
    void spdyOnStreamResponse(org.android.spdy.SpdySession,long,java.util.Map,java.lang.Object) -> spdyOnStreamResponse
org.android.spdy.SuperviseConnectInfo -> org.android.spdy.SuperviseConnectInfo:
    int connectTime -> connectTime
    int reused_counter -> reused_counter
    int keepalive_period_second -> keepalive_period_second
    int retryTimes -> retryTimes
    int timeout -> timeout
    void <init>() -> <init>
org.android.spdy.SuperviseData -> org.android.spdy.SuperviseData:
    long sendStart -> sendStart
    long sendEnd -> sendEnd
    long requestStart -> requestStart
    long responseStart -> responseStart
    long responseEnd -> responseEnd
    int uncompressSize -> uncompressSize
    int compressSize -> compressSize
    int bodySize -> bodySize
    int recvUncompressSize -> recvUncompressSize
    int recvCompressSize -> recvCompressSize
    int recvBodySize -> recvBodySize
    void <init>() -> <init>
org.android.spdy.TnetStatusCode -> org.android.spdy.TnetStatusCode:
    int TNET_JNI_ERR_BASE -> TNET_JNI_ERR_BASE
    int TNET_JNI_ERR_NO_MEM -> TNET_JNI_ERR_NO_MEM
    int TNET_JNI_ERR_INVLID_PARAM -> TNET_JNI_ERR_INVLID_PARAM
    int TNET_JNI_ERR_STATUS_ERR -> TNET_JNI_ERR_STATUS_ERR
    int TNET_JNI_ERR_ASYNC_CLOSE -> TNET_JNI_ERR_ASYNC_CLOSE
    int TNET_SESSION_EXCEED_MAXED -> TNET_SESSION_EXCEED_MAXED
    int TNET_JNI_ERR_NOT_SUPPORT_API -> TNET_JNI_ERR_NOT_SUPPORT_API
    int EASY_OK -> EASY_OK
    int EASY_REASON_CONN_NOT_EXISTS -> EASY_REASON_CONN_NOT_EXISTS
    int EASY_REASON_DISCONNECT -> EASY_REASON_DISCONNECT
    int EASY_REASON_CONN_TIMEOUT -> EASY_REASON_CONN_TIMEOUT
    int EASY_REASON_SESSION_TIMEOUT -> EASY_REASON_SESSION_TIMEOUT
    int EASY_REASON_CANCEL -> EASY_REASON_CANCEL
    int EASY_SPDY_PROTOCOL_ERROR -> EASY_SPDY_PROTOCOL_ERROR
    int EASY_SPDY_INVALID_STREAM -> EASY_SPDY_INVALID_STREAM
    int EASY_SPDY_REFUSED_STREAM -> EASY_SPDY_REFUSED_STREAM
    int EASY_SPDY_UNSUPPORTED_VERSION -> EASY_SPDY_UNSUPPORTED_VERSION
    int EASY_SPDY_CANCEL -> EASY_SPDY_CANCEL
    int EASY_SPDY_INTERNAL_ERROR -> EASY_SPDY_INTERNAL_ERROR
    int EASY_SPDY_FLOW_CONTROL_ERROR -> EASY_SPDY_FLOW_CONTROL_ERROR
    int EASY_SPDY_STREAM_IN_USE -> EASY_SPDY_STREAM_IN_USE
    int EASY_SPDY_STREAM_ALREADY_CLOSED -> EASY_SPDY_STREAM_ALREADY_CLOSED
    int EASY_SPDY_INVALID_CREDENTIALS -> EASY_SPDY_INVALID_CREDENTIALS
    int EASY_SPDY_FRAME_TOO_LARGE -> EASY_SPDY_FRAME_TOO_LARGE
    int EASY_SPDY_SESSION_PROTOCOL_ERROR -> EASY_SPDY_SESSION_PROTOCOL_ERROR
    int EASY_SPDY_SESSION_INTERNAL_ERROR -> EASY_SPDY_SESSION_INTERNAL_ERROR
    int EASY_REASON_IO_STOPED -> EASY_REASON_IO_STOPED
    int EASY_REASON_NO_MEM -> EASY_REASON_NO_MEM
    int EASY_REASON_SERVER_CLOSE -> EASY_REASON_SERVER_CLOSE
    int EASY_REASON_SPDYINIT_ERROR -> EASY_REASON_SPDYINIT_ERROR
    int EASY_REASON_INVALID_DATA -> EASY_REASON_INVALID_DATA
    int EASY_DEFAULT_ERROR -> EASY_DEFAULT_ERROR
    int EASY_REASON_READ_ERROR -> EASY_REASON_READ_ERROR
    int EASY_REASON_WRITE_ERROR -> EASY_REASON_WRITE_ERROR
    int EASY_REASON_CONN_ERROR -> EASY_REASON_CONN_ERROR
    int EASY_REASON_HANDSHAKE_ERROR -> EASY_REASON_HANDSHAKE_ERROR
    int EASY_REASON_SLIGHTSSL_ERROR -> EASY_REASON_SLIGHTSSL_ERROR
    int EASY_REQ_STAGE_NOT_SEND -> EASY_REQ_STAGE_NOT_SEND
    int EASY_REQ_STAGE_SEND_FAIL -> EASY_REQ_STAGE_SEND_FAIL
    int EASY_REQ_STATE_PROCESS_RSP_FAIL -> EASY_REQ_STATE_PROCESS_RSP_FAIL
    int EASY_REQ_STATE_OK -> EASY_REQ_STATE_OK
    void <init>() -> <init>
    int getReqStage(int) -> getReqStage
    int getStatusCode(int) -> getStatusCode
    int getErrno(int) -> getErrno
org.android.spdy.a -> org.android.spdy.a:
    void <init>() -> <init>
    void spdyDataChunkRecvCB(org.android.spdy.SpdySession,boolean,long,byte[],int,int) -> spdyDataChunkRecvCB
    void spdyDataRecvCallback(org.android.spdy.SpdySession,boolean,long,int,int) -> spdyDataRecvCallback
    void spdyDataSendCallback(org.android.spdy.SpdySession,boolean,long,int,int) -> spdyDataSendCallback
    void spdyStreamCloseCallback(org.android.spdy.SpdySession,long,int,int,org.android.spdy.SuperviseData) -> spdyStreamCloseCallback
    void spdyRequestRecvCallback(org.android.spdy.SpdySession,long,int) -> spdyRequestRecvCallback
    void spdyOnStreamResponse(org.android.spdy.SpdySession,long,java.util.Map,int) -> spdyOnStreamResponse
    void spdySessionConnectCB(org.android.spdy.SpdySession,org.android.spdy.SuperviseConnectInfo) -> spdySessionConnectCB
    void spdyPingRecvCallback(org.android.spdy.SpdySession,long,java.lang.Object) -> spdyPingRecvCallback
    void spdySessionFailedError(org.android.spdy.SpdySession,int,java.lang.Object) -> spdySessionFailedError
    void spdySessionCloseCallback(org.android.spdy.SpdySession,java.lang.Object,org.android.spdy.SuperviseConnectInfo,int) -> spdySessionCloseCallback
org.android.spdy.spduLog -> org.android.spdy.spduLog:
    long savedTraffic -> savedTraffic
    void <init>() -> <init>
    void Logd(java.lang.String,java.lang.String) -> Logd
    void Logd(java.lang.String,java.lang.String,long) -> Logd
    void Loge(java.lang.String,java.lang.String) -> Loge
    void Logi(java.lang.String,java.lang.String) -> Logi
    void Logv(java.lang.String,java.lang.String) -> Logv
    void Logw(java.lang.String,java.lang.String) -> Logw
    void Logf(java.lang.String,java.lang.String) -> Logf
    void addTraffic(long) -> addTraffic
    long getSavedTraffic() -> getSavedTraffic
    long now() -> now
    void <clinit>() -> <clinit>
